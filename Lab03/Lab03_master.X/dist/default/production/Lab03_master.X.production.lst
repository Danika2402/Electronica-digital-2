

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Aug 04 13:23:43 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  0088                     	;# 
   328  0089                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  008F                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  0105                     	;# 
   352  0107                     	;# 
   353  0108                     	;# 
   354  0109                     	;# 
   355  010C                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0185                     	;# 
   361  0187                     	;# 
   362  0188                     	;# 
   363  0189                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366  0013                     _SSPBUF	set	19
   367  0014                     _SSPCON	set	20
   368  000C                     _PIR1bits	set	12
   369  000B                     _INTCONbits	set	11
   370  0005                     _PORTA	set	5
   371  0009                     _PORTE	set	9
   372  001E                     _ADRESH	set	30
   373  001F                     _ADCON0bits	set	31
   374  0063                     _SSPIF	set	99
   375  0094                     _SSPSTATbits	set	148
   376  0094                     _SSPSTAT	set	148
   377  008C                     _PIE1bits	set	140
   378  009F                     _ADCON1bits	set	159
   379  008F                     _OSCCONbits	set	143
   380  0085                     _TRISAbits	set	133
   381  0089                     _TRISE	set	137
   382  043B                     _TRISC3	set	1083
   383  043D                     _TRISC5	set	1085
   384  0189                     _ANSELH	set	393
   385  0188                     _ANSEL	set	392
   386                           
   387                           	psect	cinit
   388  000F                     start_initialization:	
   389                           ; #config settings
   390                           
   391  000F                     __initialization:
   392                           
   393                           ; Clear objects allocated to COMMON
   394  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   395  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   396  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   397  0012                     end_of_initialization:	
   398                           ;End of C runtime variable initialization code
   399                           
   400  0012                     __end_of__initialization:
   401  0012  0183               	clrf	3
   402  0013  120A  118A  28FA   	ljmp	_main	;jump to C main() function
   403                           
   404                           	psect	bssCOMMON
   405  0077                     __pbssCOMMON:
   406  0077                     _potenciometro:
   407  0077                     	ds	1
   408  0078                     _pot2:
   409  0078                     	ds	1
   410  0079                     _pot1:
   411  0079                     	ds	1
   412                           
   413                           	psect	cstackCOMMON
   414  0070                     __pcstackCOMMON:
   415  0070                     ?_spiRead:
   416  0070                     ??_spiRead:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ?_spiWrite:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ??_spiWrite:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?_setup:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?_canal:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_isr:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?_main:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ?_spiReceiveWait:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ??_spiReceiveWait:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     spiWrite@dat:	
   444                           ; 1 bytes @ 0x0
   445                           
   446                           
   447                           ; 1 bytes @ 0x0
   448  0070                     	ds	1
   449  0071                     ??_isr:
   450                           
   451                           ; 1 bytes @ 0x1
   452  0071                     	ds	3
   453  0074                     ?_spiInit:
   454  0074                     ??_canal:	
   455                           ; 1 bytes @ 0x4
   456                           
   457  0074                     spiInit@sDataSample:	
   458                           ; 1 bytes @ 0x4
   459                           
   460                           
   461                           ; 1 bytes @ 0x4
   462  0074                     	ds	1
   463  0075                     spiInit@sClockIdle:
   464                           
   465                           ; 1 bytes @ 0x5
   466  0075                     	ds	1
   467  0076                     canal@c:
   468  0076                     spiInit@sTransmitEdge:	
   469                           ; 1 bytes @ 0x6
   470                           
   471                           
   472                           ; 1 bytes @ 0x6
   473  0076                     	ds	1
   474  0077                     ??_spiInit:
   475                           
   476                           	psect	cstackBANK0
   477  0020                     __pcstackBANK0:	
   478                           ; 1 bytes @ 0x7
   479                           
   480  0020                     spiInit@sType:
   481                           
   482                           ; 1 bytes @ 0x0
   483  0020                     	ds	1
   484  0021                     ??_setup:
   485                           
   486                           ; 1 bytes @ 0x1
   487  0021                     	ds	1
   488  0022                     ??_main:
   489                           
   490                           ; 1 bytes @ 0x2
   491  0022                     	ds	1
   492                           
   493                           	psect	maintext
   494  00FA                     __pmaintext:	
   495 ;;
   496 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   497 ;;
   498 ;; *************** function _main *****************
   499 ;; Defined at:
   500 ;;		line 47 in file "Main_slave.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;		None
   503 ;; Auto vars:     Size  Location     Type
   504 ;;		None
   505 ;; Return value:  Size  Location     Type
   506 ;;                  1    wreg      void 
   507 ;; Registers used:
   508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   509 ;; Tracked objects:
   510 ;;		On entry : B00/0
   511 ;;		On exit  : 0/0
   512 ;;		Unchanged: 0/0
   513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   514 ;;      Params:         0       0       0       0       0
   515 ;;      Locals:         0       0       0       0       0
   516 ;;      Temps:          0       1       0       0       0
   517 ;;      Totals:         0       1       0       0       0
   518 ;;Total ram usage:        1 bytes
   519 ;; Hardware stack levels required when called:    5
   520 ;; This function calls:
   521 ;;		_setup
   522 ;; This function is called by:
   523 ;;		Startup code after reset
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527                           
   528                           ;psect for function _main
   529  00FA                     _main:
   530  00FA                     l1009:	
   531                           ;incstack = 0
   532                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   533                           
   534                           
   535                           ;Main_slave.c: 49:     setup();
   536  00FA  120A  118A  20B6  120A  118A  	fcall	_setup
   537  00FF                     l1011:
   538                           
   539                           ;Main_slave.c: 52:         if(ADCON0bits.GO == 0){
   540  00FF  1283               	bcf	3,5	;RP0=0, select bank0
   541  0100  1303               	bcf	3,6	;RP1=0, select bank0
   542  0101  189F               	btfsc	31,1	;volatile
   543  0102  2904               	goto	u131
   544  0103  2905               	goto	u130
   545  0104                     u131:
   546  0104  28FF               	goto	l1011
   547  0105                     u130:
   548  0105                     l1013:
   549                           
   550                           ;Main_slave.c: 54:             if(ADCON0bits.CHS == 5){
   551  0105  0C1F               	rrf	31,w	;volatile
   552  0106  00A2               	movwf	??_main
   553  0107  0C22               	rrf	??_main,w
   554  0108  390F               	andlw	15
   555  0109  3A05               	xorlw	5
   556  010A  1D03               	skipz
   557  010B  290D               	goto	u141
   558  010C  290E               	goto	u140
   559  010D                     u141:
   560  010D  2917               	goto	l1019
   561  010E                     u140:
   562  010E                     l1015:
   563                           
   564                           ;Main_slave.c: 55:                 pot1 = ADRESH;
   565  010E  081E               	movf	30,w	;volatile
   566  010F  00A2               	movwf	??_main
   567  0110  0822               	movf	??_main,w
   568  0111  00F9               	movwf	_pot1
   569  0112                     l1017:
   570                           
   571                           ;Main_slave.c: 56:                 ADCON0bits.CHS = 6;
   572  0112  081F               	movf	31,w	;volatile
   573  0113  39C3               	andlw	-61
   574  0114  3818               	iorlw	24
   575  0115  009F               	movwf	31	;volatile
   576                           
   577                           ;Main_slave.c: 58:             }else if(ADCON0bits.CHS == 6){
   578  0116  2928               	goto	l1025
   579  0117                     l1019:
   580  0117  0C1F               	rrf	31,w	;volatile
   581  0118  00A2               	movwf	??_main
   582  0119  0C22               	rrf	??_main,w
   583  011A  390F               	andlw	15
   584  011B  3A06               	xorlw	6
   585  011C  1D03               	skipz
   586  011D  291F               	goto	u151
   587  011E  2920               	goto	u150
   588  011F                     u151:
   589  011F  2928               	goto	l1025
   590  0120                     u150:
   591  0120                     l1021:
   592                           
   593                           ;Main_slave.c: 59:                 pot2 = ADRESH;
   594  0120  081E               	movf	30,w	;volatile
   595  0121  00A2               	movwf	??_main
   596  0122  0822               	movf	??_main,w
   597  0123  00F8               	movwf	_pot2
   598  0124                     l1023:
   599                           
   600                           ;Main_slave.c: 60:                 ADCON0bits.CHS = 5;
   601  0124  081F               	movf	31,w	;volatile
   602  0125  39C3               	andlw	-61
   603  0126  3814               	iorlw	20
   604  0127  009F               	movwf	31	;volatile
   605  0128                     l1025:
   606                           
   607                           ;Main_slave.c: 62:             _delay((unsigned long)((50)*(4000000/4000000.0)));
   608  0128  300F               	movlw	15
   609  0129  1283               	bcf	3,5	;RP0=0, select bank0
   610  012A  1303               	bcf	3,6	;RP1=0, select bank0
   611  012B  00A2               	movwf	??_main
   612  012C                     u167:
   613  012C  0BA2               	decfsz	??_main,f
   614  012D  292C               	goto	u167
   615  012E  292F               	nop2
   616  012F                     l1027:
   617                           
   618                           ;Main_slave.c: 63:             ADCON0bits.GO = 1;
   619  012F  1283               	bcf	3,5	;RP0=0, select bank0
   620  0130  1303               	bcf	3,6	;RP1=0, select bank0
   621  0131  149F               	bsf	31,1	;volatile
   622  0132  28FF               	goto	l1011
   623  0133  120A  118A  280C   	ljmp	start
   624  0136                     __end_of_main:
   625                           
   626                           	psect	text1
   627  00B6                     __ptext1:	
   628 ;; *************** function _setup *****************
   629 ;; Defined at:
   630 ;;		line 70 in file "Main_slave.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;		None
   635 ;; Return value:  Size  Location     Type
   636 ;;                  1    wreg      void 
   637 ;; Registers used:
   638 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   639 ;; Tracked objects:
   640 ;;		On entry : 0/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   644 ;;      Params:         0       0       0       0       0
   645 ;;      Locals:         0       0       0       0       0
   646 ;;      Temps:          0       1       0       0       0
   647 ;;      Totals:         0       1       0       0       0
   648 ;;Total ram usage:        1 bytes
   649 ;; Hardware stack levels used:    1
   650 ;; Hardware stack levels required when called:    4
   651 ;; This function calls:
   652 ;;		_canal
   653 ;;		_spiInit
   654 ;; This function is called by:
   655 ;;		_main
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659                           
   660                           ;psect for function _setup
   661  00B6                     _setup:
   662  00B6                     l961:	
   663                           ;incstack = 0
   664                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   665                           
   666                           
   667                           ;Main_slave.c: 71:     ANSEL = 0b01100000;
   668  00B6  3060               	movlw	96
   669  00B7  1683               	bsf	3,5	;RP0=1, select bank3
   670  00B8  1703               	bsf	3,6	;RP1=1, select bank3
   671  00B9  0088               	movwf	8	;volatile
   672  00BA                     l963:
   673                           
   674                           ;Main_slave.c: 72:     ANSELH = 0x00;
   675  00BA  0189               	clrf	9	;volatile
   676  00BB                     l965:
   677                           
   678                           ;Main_slave.c: 74:     TRISE = 0xff;
   679  00BB  30FF               	movlw	255
   680  00BC  1683               	bsf	3,5	;RP0=1, select bank1
   681  00BD  1303               	bcf	3,6	;RP1=0, select bank1
   682  00BE  0089               	movwf	9	;volatile
   683  00BF                     l967:
   684                           
   685                           ;Main_slave.c: 75:     TRISAbits.TRISA5 = 1;
   686  00BF  1685               	bsf	5,5	;volatile
   687                           
   688                           ;Main_slave.c: 77:     PORTE = 0x00;
   689  00C0  1283               	bcf	3,5	;RP0=0, select bank0
   690  00C1  1303               	bcf	3,6	;RP1=0, select bank0
   691  00C2  0189               	clrf	9	;volatile
   692                           
   693                           ;Main_slave.c: 78:     PORTA = 0x00;
   694  00C3  0185               	clrf	5	;volatile
   695  00C4                     l969:
   696                           
   697                           ;Main_slave.c: 81:     OSCCONbits.IRCF2 =1;
   698  00C4  1683               	bsf	3,5	;RP0=1, select bank1
   699  00C5  1303               	bcf	3,6	;RP1=0, select bank1
   700  00C6  170F               	bsf	15,6	;volatile
   701  00C7                     l971:
   702                           
   703                           ;Main_slave.c: 82:     OSCCONbits.IRCF1 =1;
   704  00C7  168F               	bsf	15,5	;volatile
   705  00C8                     l973:
   706                           
   707                           ;Main_slave.c: 83:     OSCCONbits.IRCF0 =0;
   708  00C8  120F               	bcf	15,4	;volatile
   709  00C9                     l975:
   710                           
   711                           ;Main_slave.c: 84:     OSCCONbits.SCS =1;
   712  00C9  140F               	bsf	15,0	;volatile
   713  00CA                     l977:
   714                           
   715                           ;Main_slave.c: 87:     canal(5);
   716  00CA  3005               	movlw	5
   717  00CB  120A  118A  2016  120A  118A  	fcall	_canal
   718  00D0                     l979:
   719                           
   720                           ;Main_slave.c: 89:     ADCON1bits.VCFG0 = 0;
   721  00D0  1683               	bsf	3,5	;RP0=1, select bank1
   722  00D1  1303               	bcf	3,6	;RP1=0, select bank1
   723  00D2  121F               	bcf	31,4	;volatile
   724  00D3                     l981:
   725                           
   726                           ;Main_slave.c: 90:     ADCON1bits.VCFG1 = 0;
   727  00D3  129F               	bcf	31,5	;volatile
   728  00D4                     l983:
   729                           
   730                           ;Main_slave.c: 92:     ADCON0bits.ADCS0 = 0;
   731  00D4  1283               	bcf	3,5	;RP0=0, select bank0
   732  00D5  1303               	bcf	3,6	;RP1=0, select bank0
   733  00D6  131F               	bcf	31,6	;volatile
   734  00D7                     l985:
   735                           
   736                           ;Main_slave.c: 93:     ADCON0bits.ADCS1 = 1;
   737  00D7  179F               	bsf	31,7	;volatile
   738  00D8                     l987:
   739                           
   740                           ;Main_slave.c: 100:     ADCON1bits.ADFM =0;
   741  00D8  1683               	bsf	3,5	;RP0=1, select bank1
   742  00D9  1303               	bcf	3,6	;RP1=0, select bank1
   743  00DA  139F               	bcf	31,7	;volatile
   744  00DB                     l989:
   745                           
   746                           ;Main_slave.c: 102:     ADCON0bits.ADON = 1;
   747  00DB  1283               	bcf	3,5	;RP0=0, select bank0
   748  00DC  1303               	bcf	3,6	;RP1=0, select bank0
   749  00DD  141F               	bsf	31,0	;volatile
   750  00DE                     l991:
   751                           
   752                           ;Main_slave.c: 103:     _delay((unsigned long)((50)*(4000000/4000000.0)));
   753  00DE  300F               	movlw	15
   754  00DF  1283               	bcf	3,5	;RP0=0, select bank0
   755  00E0  1303               	bcf	3,6	;RP1=0, select bank0
   756  00E1  00A1               	movwf	??_setup
   757  00E2                     u177:
   758  00E2  0BA1               	decfsz	??_setup,f
   759  00E3  28E2               	goto	u177
   760  00E4  28E5               	nop2
   761  00E5                     l993:
   762                           
   763                           ;Main_slave.c: 104:     ADCON0bits.GO_nDONE = 1;
   764  00E5  1283               	bcf	3,5	;RP0=0, select bank0
   765  00E6  1303               	bcf	3,6	;RP1=0, select bank0
   766  00E7  149F               	bsf	31,1	;volatile
   767  00E8                     l995:
   768                           
   769                           ;Main_slave.c: 106:     pot1 = 0;
   770  00E8  01F9               	clrf	_pot1
   771  00E9                     l997:
   772                           
   773                           ;Main_slave.c: 107:     pot2 = 0;
   774  00E9  01F8               	clrf	_pot2
   775  00EA                     l999:
   776                           
   777                           ;Main_slave.c: 110:     INTCONbits.GIE = 1;
   778  00EA  178B               	bsf	11,7	;volatile
   779  00EB                     l1001:
   780                           
   781                           ;Main_slave.c: 111:     INTCONbits.PEIE = 1;
   782  00EB  170B               	bsf	11,6	;volatile
   783  00EC                     l1003:
   784                           
   785                           ;Main_slave.c: 112:     PIR1bits.SSPIF = 0;
   786  00EC  118C               	bcf	12,3	;volatile
   787  00ED                     l1005:
   788                           
   789                           ;Main_slave.c: 113:     PIE1bits.SSPIE = 1;
   790  00ED  1683               	bsf	3,5	;RP0=1, select bank1
   791  00EE  1303               	bcf	3,6	;RP1=0, select bank1
   792  00EF  158C               	bsf	12,3	;volatile
   793  00F0                     l1007:
   794                           
   795                           ;Main_slave.c: 115:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_
      +                          LOW, SPI_IDLE_2_ACTIVE);
   796  00F0  01F4               	clrf	spiInit@sDataSample
   797  00F1  01F5               	clrf	spiInit@sClockIdle
   798  00F2  01F6               	clrf	spiInit@sTransmitEdge
   799  00F3  3024               	movlw	36
   800  00F4  120A  118A  2160  120A  118A  	fcall	_spiInit
   801  00F9                     l91:
   802  00F9  0008               	return
   803  00FA                     __end_of_setup:
   804                           
   805                           	psect	text2
   806  0160                     __ptext2:	
   807 ;; *************** function _spiInit *****************
   808 ;; Defined at:
   809 ;;		line 12 in file "SPI.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;  sType           1    wreg     enum E1264
   812 ;;  sDataSample     1    4[COMMON] enum E1272
   813 ;;  sClockIdle      1    5[COMMON] enum E1276
   814 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  sType           1    0[BANK0 ] enum E1264
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, status,2, status,0
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   826 ;;      Params:         3       0       0       0       0
   827 ;;      Locals:         0       1       0       0       0
   828 ;;      Temps:          0       0       0       0       0
   829 ;;      Totals:         3       1       0       0       0
   830 ;;Total ram usage:        4 bytes
   831 ;; Hardware stack levels used:    1
   832 ;; Hardware stack levels required when called:    3
   833 ;; This function calls:
   834 ;;		Nothing
   835 ;; This function is called by:
   836 ;;		_setup
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           
   841                           ;psect for function _spiInit
   842  0160                     _spiInit:
   843                           
   844                           ;incstack = 0
   845                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   846                           ;spiInit@sType stored from wreg
   847  0160  1283               	bcf	3,5	;RP0=0, select bank0
   848  0161  1303               	bcf	3,6	;RP1=0, select bank0
   849  0162  00A0               	movwf	spiInit@sType
   850  0163                     l951:
   851                           
   852                           ;SPI.c: 12: void spiInit(Type sType, Data_Sample sDataSample, Clock_Idle sClockIdle, Tra
      +                          nsmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   853  0163  1683               	bsf	3,5	;RP0=1, select bank1
   854  0164  1303               	bcf	3,6	;RP1=0, select bank1
   855  0165  1287               	bcf	7,5	;volatile
   856                           
   857                           ;SPI.c: 15:     if(sType & 0b00000100)
   858  0166  1283               	bcf	3,5	;RP0=0, select bank0
   859  0167  1303               	bcf	3,6	;RP1=0, select bank0
   860  0168  1D20               	btfss	spiInit@sType,2
   861  0169  296B               	goto	u121
   862  016A  296C               	goto	u120
   863  016B                     u121:
   864  016B  2972               	goto	l957
   865  016C                     u120:
   866  016C                     l953:
   867                           
   868                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   869  016C  0876               	movf	spiInit@sTransmitEdge,w
   870  016D  1683               	bsf	3,5	;RP0=1, select bank1
   871  016E  1303               	bcf	3,6	;RP1=0, select bank1
   872  016F  0094               	movwf	20	;volatile
   873  0170                     l955:
   874                           
   875                           ;SPI.c: 18:         TRISC3 = 1;
   876  0170  1587               	bsf	7,3	;volatile
   877                           
   878                           ;SPI.c: 19:     }
   879  0171  2978               	goto	l107
   880  0172                     l957:
   881                           
   882                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   883  0172  0874               	movf	spiInit@sDataSample,w
   884  0173  0476               	iorwf	spiInit@sTransmitEdge,w
   885  0174  1683               	bsf	3,5	;RP0=1, select bank1
   886  0175  1303               	bcf	3,6	;RP1=0, select bank1
   887  0176  0094               	movwf	20	;volatile
   888  0177                     l959:
   889                           
   890                           ;SPI.c: 23:         TRISC3 = 0;
   891  0177  1187               	bcf	7,3	;volatile
   892  0178                     l107:	
   893                           ;SPI.c: 24:     }
   894                           
   895                           
   896                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   897  0178  1283               	bcf	3,5	;RP0=0, select bank0
   898  0179  1303               	bcf	3,6	;RP1=0, select bank0
   899  017A  0820               	movf	spiInit@sType,w
   900  017B  0475               	iorwf	spiInit@sClockIdle,w
   901  017C  0094               	movwf	20	;volatile
   902  017D                     l108:
   903  017D  0008               	return
   904  017E                     __end_of_spiInit:
   905                           
   906                           	psect	text3
   907  0016                     __ptext3:	
   908 ;; *************** function _canal *****************
   909 ;; Defined at:
   910 ;;		line 11 in file "ADC.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;  c               1    wreg     unsigned char 
   913 ;; Auto vars:     Size  Location     Type
   914 ;;  c               1    6[COMMON] unsigned char 
   915 ;; Return value:  Size  Location     Type
   916 ;;                  1    wreg      void 
   917 ;; Registers used:
   918 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   919 ;; Tracked objects:
   920 ;;		On entry : 0/0
   921 ;;		On exit  : 0/0
   922 ;;		Unchanged: 0/0
   923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   924 ;;      Params:         0       0       0       0       0
   925 ;;      Locals:         1       0       0       0       0
   926 ;;      Temps:          2       0       0       0       0
   927 ;;      Totals:         3       0       0       0       0
   928 ;;Total ram usage:        3 bytes
   929 ;; Hardware stack levels used:    1
   930 ;; Hardware stack levels required when called:    3
   931 ;; This function calls:
   932 ;;		Nothing
   933 ;; This function is called by:
   934 ;;		_setup
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           
   939                           ;psect for function _canal
   940  0016                     _canal:
   941                           
   942                           ;incstack = 0
   943                           ; Regs used in _canal: [wreg-fsr0h+status,2+status,0]
   944                           ;canal@c stored from wreg
   945  0016  00F6               	movwf	canal@c
   946  0017                     l717:
   947                           
   948                           ;ADC.c: 12:     switch(c){
   949  0017  2881               	goto	l721
   950  0018                     l6:	
   951                           ;ADC.c: 13:         case 0:
   952                           
   953                           
   954                           ;ADC.c: 14:             ADCON0bits.CHS3 = 0;
   955  0018  1283               	bcf	3,5	;RP0=0, select bank0
   956  0019  1303               	bcf	3,6	;RP1=0, select bank0
   957  001A  129F               	bcf	31,5	;volatile
   958                           
   959                           ;ADC.c: 15:             ADCON0bits.CHS2 = 0;
   960  001B  121F               	bcf	31,4	;volatile
   961                           
   962                           ;ADC.c: 16:             ADCON0bits.CHS1 = 0;
   963  001C  119F               	bcf	31,3	;volatile
   964                           
   965                           ;ADC.c: 17:             ADCON0bits.CHS0 = 0;
   966  001D  111F               	bcf	31,2	;volatile
   967                           
   968                           ;ADC.c: 18:             break;
   969  001E  28B5               	goto	l22
   970  001F                     l8:	
   971                           ;ADC.c: 20:         case 1:
   972                           
   973                           
   974                           ;ADC.c: 21:             ADCON0bits.CHS3 = 0;
   975  001F  1283               	bcf	3,5	;RP0=0, select bank0
   976  0020  1303               	bcf	3,6	;RP1=0, select bank0
   977  0021  129F               	bcf	31,5	;volatile
   978                           
   979                           ;ADC.c: 22:             ADCON0bits.CHS2 = 0;
   980  0022  121F               	bcf	31,4	;volatile
   981                           
   982                           ;ADC.c: 23:             ADCON0bits.CHS1 = 0;
   983  0023  119F               	bcf	31,3	;volatile
   984                           
   985                           ;ADC.c: 24:             ADCON0bits.CHS0 = 1;
   986  0024  151F               	bsf	31,2	;volatile
   987                           
   988                           ;ADC.c: 25:             break;
   989  0025  28B5               	goto	l22
   990  0026                     l9:	
   991                           ;ADC.c: 27:         case 2:
   992                           
   993                           
   994                           ;ADC.c: 28:             ADCON0bits.CHS3 = 0;
   995  0026  1283               	bcf	3,5	;RP0=0, select bank0
   996  0027  1303               	bcf	3,6	;RP1=0, select bank0
   997  0028  129F               	bcf	31,5	;volatile
   998                           
   999                           ;ADC.c: 29:             ADCON0bits.CHS2 = 0;
  1000  0029  121F               	bcf	31,4	;volatile
  1001                           
  1002                           ;ADC.c: 30:             ADCON0bits.CHS1 = 1;
  1003  002A  159F               	bsf	31,3	;volatile
  1004                           
  1005                           ;ADC.c: 31:             ADCON0bits.CHS0 = 0;
  1006  002B  111F               	bcf	31,2	;volatile
  1007                           
  1008                           ;ADC.c: 32:             break;
  1009  002C  28B5               	goto	l22
  1010  002D                     l10:	
  1011                           ;ADC.c: 34:         case 3:
  1012                           
  1013                           
  1014                           ;ADC.c: 35:             ADCON0bits.CHS3 = 0;
  1015  002D  1283               	bcf	3,5	;RP0=0, select bank0
  1016  002E  1303               	bcf	3,6	;RP1=0, select bank0
  1017  002F  129F               	bcf	31,5	;volatile
  1018                           
  1019                           ;ADC.c: 36:             ADCON0bits.CHS2 = 0;
  1020  0030  121F               	bcf	31,4	;volatile
  1021                           
  1022                           ;ADC.c: 37:             ADCON0bits.CHS1 = 1;
  1023  0031  159F               	bsf	31,3	;volatile
  1024                           
  1025                           ;ADC.c: 38:             ADCON0bits.CHS0 = 1;
  1026  0032  151F               	bsf	31,2	;volatile
  1027                           
  1028                           ;ADC.c: 39:             break;
  1029  0033  28B5               	goto	l22
  1030  0034                     l11:	
  1031                           ;ADC.c: 41:         case 4:
  1032                           
  1033                           
  1034                           ;ADC.c: 42:             ADCON0bits.CHS3 = 0;
  1035  0034  1283               	bcf	3,5	;RP0=0, select bank0
  1036  0035  1303               	bcf	3,6	;RP1=0, select bank0
  1037  0036  129F               	bcf	31,5	;volatile
  1038                           
  1039                           ;ADC.c: 43:             ADCON0bits.CHS2 = 1;
  1040  0037  161F               	bsf	31,4	;volatile
  1041                           
  1042                           ;ADC.c: 44:             ADCON0bits.CHS1 = 0;
  1043  0038  119F               	bcf	31,3	;volatile
  1044                           
  1045                           ;ADC.c: 45:             ADCON0bits.CHS0 = 0;
  1046  0039  111F               	bcf	31,2	;volatile
  1047                           
  1048                           ;ADC.c: 46:             break;
  1049  003A  28B5               	goto	l22
  1050  003B                     l12:	
  1051                           ;ADC.c: 48:         case 5:
  1052                           
  1053                           
  1054                           ;ADC.c: 49:             ADCON0bits.CHS3 = 0;
  1055  003B  1283               	bcf	3,5	;RP0=0, select bank0
  1056  003C  1303               	bcf	3,6	;RP1=0, select bank0
  1057  003D  129F               	bcf	31,5	;volatile
  1058                           
  1059                           ;ADC.c: 50:             ADCON0bits.CHS2 = 1;
  1060  003E  161F               	bsf	31,4	;volatile
  1061                           
  1062                           ;ADC.c: 51:             ADCON0bits.CHS1 = 0;
  1063  003F  119F               	bcf	31,3	;volatile
  1064                           
  1065                           ;ADC.c: 52:             ADCON0bits.CHS0 = 1;
  1066  0040  151F               	bsf	31,2	;volatile
  1067                           
  1068                           ;ADC.c: 53:             break;
  1069  0041  28B5               	goto	l22
  1070  0042                     l13:	
  1071                           ;ADC.c: 55:         case 6:
  1072                           
  1073                           
  1074                           ;ADC.c: 56:             ADCON0bits.CHS3 = 0;
  1075  0042  1283               	bcf	3,5	;RP0=0, select bank0
  1076  0043  1303               	bcf	3,6	;RP1=0, select bank0
  1077  0044  129F               	bcf	31,5	;volatile
  1078                           
  1079                           ;ADC.c: 57:             ADCON0bits.CHS2 = 1;
  1080  0045  161F               	bsf	31,4	;volatile
  1081                           
  1082                           ;ADC.c: 58:             ADCON0bits.CHS1 = 1;
  1083  0046  159F               	bsf	31,3	;volatile
  1084                           
  1085                           ;ADC.c: 59:             ADCON0bits.CHS0 = 0;
  1086  0047  111F               	bcf	31,2	;volatile
  1087                           
  1088                           ;ADC.c: 60:             break;
  1089  0048  28B5               	goto	l22
  1090  0049                     l14:	
  1091                           ;ADC.c: 62:         case 7:
  1092                           
  1093                           
  1094                           ;ADC.c: 63:             ADCON0bits.CHS3 = 0;
  1095  0049  1283               	bcf	3,5	;RP0=0, select bank0
  1096  004A  1303               	bcf	3,6	;RP1=0, select bank0
  1097  004B  129F               	bcf	31,5	;volatile
  1098                           
  1099                           ;ADC.c: 64:             ADCON0bits.CHS2 = 1;
  1100  004C  161F               	bsf	31,4	;volatile
  1101                           
  1102                           ;ADC.c: 65:             ADCON0bits.CHS1 = 1;
  1103  004D  159F               	bsf	31,3	;volatile
  1104                           
  1105                           ;ADC.c: 66:             ADCON0bits.CHS0 = 1;
  1106  004E  151F               	bsf	31,2	;volatile
  1107                           
  1108                           ;ADC.c: 67:             break;
  1109  004F  28B5               	goto	l22
  1110  0050                     l15:	
  1111                           ;ADC.c: 69:         case 8:
  1112                           
  1113                           
  1114                           ;ADC.c: 70:             ADCON0bits.CHS3 = 1;
  1115  0050  1283               	bcf	3,5	;RP0=0, select bank0
  1116  0051  1303               	bcf	3,6	;RP1=0, select bank0
  1117  0052  169F               	bsf	31,5	;volatile
  1118                           
  1119                           ;ADC.c: 71:             ADCON0bits.CHS2 = 0;
  1120  0053  121F               	bcf	31,4	;volatile
  1121                           
  1122                           ;ADC.c: 72:             ADCON0bits.CHS1 = 0;
  1123  0054  119F               	bcf	31,3	;volatile
  1124                           
  1125                           ;ADC.c: 73:             ADCON0bits.CHS0 = 0;
  1126  0055  111F               	bcf	31,2	;volatile
  1127                           
  1128                           ;ADC.c: 74:             break;
  1129  0056  28B5               	goto	l22
  1130  0057                     l16:	
  1131                           ;ADC.c: 76:         case 9:
  1132                           
  1133                           
  1134                           ;ADC.c: 77:             ADCON0bits.CHS3 = 1;
  1135  0057  1283               	bcf	3,5	;RP0=0, select bank0
  1136  0058  1303               	bcf	3,6	;RP1=0, select bank0
  1137  0059  169F               	bsf	31,5	;volatile
  1138                           
  1139                           ;ADC.c: 78:             ADCON0bits.CHS2 = 0;
  1140  005A  121F               	bcf	31,4	;volatile
  1141                           
  1142                           ;ADC.c: 79:             ADCON0bits.CHS1 = 0;
  1143  005B  119F               	bcf	31,3	;volatile
  1144                           
  1145                           ;ADC.c: 80:             ADCON0bits.CHS0 = 1;
  1146  005C  151F               	bsf	31,2	;volatile
  1147                           
  1148                           ;ADC.c: 81:             break;
  1149  005D  28B5               	goto	l22
  1150  005E                     l17:	
  1151                           ;ADC.c: 83:         case 10:
  1152                           
  1153                           
  1154                           ;ADC.c: 84:             ADCON0bits.CHS3 = 1;
  1155  005E  1283               	bcf	3,5	;RP0=0, select bank0
  1156  005F  1303               	bcf	3,6	;RP1=0, select bank0
  1157  0060  169F               	bsf	31,5	;volatile
  1158                           
  1159                           ;ADC.c: 85:             ADCON0bits.CHS2 = 0;
  1160  0061  121F               	bcf	31,4	;volatile
  1161                           
  1162                           ;ADC.c: 86:             ADCON0bits.CHS1 = 1;
  1163  0062  159F               	bsf	31,3	;volatile
  1164                           
  1165                           ;ADC.c: 87:             ADCON0bits.CHS0 = 0;
  1166  0063  111F               	bcf	31,2	;volatile
  1167                           
  1168                           ;ADC.c: 88:             break;
  1169  0064  28B5               	goto	l22
  1170  0065                     l18:	
  1171                           ;ADC.c: 90:         case 11:
  1172                           
  1173                           
  1174                           ;ADC.c: 91:             ADCON0bits.CHS3 = 1;
  1175  0065  1283               	bcf	3,5	;RP0=0, select bank0
  1176  0066  1303               	bcf	3,6	;RP1=0, select bank0
  1177  0067  169F               	bsf	31,5	;volatile
  1178                           
  1179                           ;ADC.c: 92:             ADCON0bits.CHS2 = 0;
  1180  0068  121F               	bcf	31,4	;volatile
  1181                           
  1182                           ;ADC.c: 93:             ADCON0bits.CHS1 = 1;
  1183  0069  159F               	bsf	31,3	;volatile
  1184                           
  1185                           ;ADC.c: 94:             ADCON0bits.CHS0 = 1;
  1186  006A  151F               	bsf	31,2	;volatile
  1187                           
  1188                           ;ADC.c: 95:             break;
  1189  006B  28B5               	goto	l22
  1190  006C                     l19:	
  1191                           ;ADC.c: 97:         case 12:
  1192                           
  1193                           
  1194                           ;ADC.c: 98:             ADCON0bits.CHS3 = 1;
  1195  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1196  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1197  006E  169F               	bsf	31,5	;volatile
  1198                           
  1199                           ;ADC.c: 99:             ADCON0bits.CHS2 = 1;
  1200  006F  161F               	bsf	31,4	;volatile
  1201                           
  1202                           ;ADC.c: 100:             ADCON0bits.CHS1 = 0;
  1203  0070  119F               	bcf	31,3	;volatile
  1204                           
  1205                           ;ADC.c: 101:             ADCON0bits.CHS0 = 0;
  1206  0071  111F               	bcf	31,2	;volatile
  1207                           
  1208                           ;ADC.c: 102:             break;
  1209  0072  28B5               	goto	l22
  1210  0073                     l20:	
  1211                           ;ADC.c: 104:         case 13:
  1212                           
  1213                           
  1214                           ;ADC.c: 105:             ADCON0bits.CHS3 = 1;
  1215  0073  1283               	bcf	3,5	;RP0=0, select bank0
  1216  0074  1303               	bcf	3,6	;RP1=0, select bank0
  1217  0075  169F               	bsf	31,5	;volatile
  1218                           
  1219                           ;ADC.c: 106:             ADCON0bits.CHS2 = 1;
  1220  0076  161F               	bsf	31,4	;volatile
  1221                           
  1222                           ;ADC.c: 107:             ADCON0bits.CHS1 = 0;
  1223  0077  119F               	bcf	31,3	;volatile
  1224                           
  1225                           ;ADC.c: 108:             ADCON0bits.CHS0 = 1;
  1226  0078  151F               	bsf	31,2	;volatile
  1227                           
  1228                           ;ADC.c: 109:             break;
  1229  0079  28B5               	goto	l22
  1230  007A                     l21:	
  1231                           ;ADC.c: 111:         default:
  1232                           
  1233                           
  1234                           ;ADC.c: 112:             ADCON0bits.CHS3 = 0;
  1235  007A  1283               	bcf	3,5	;RP0=0, select bank0
  1236  007B  1303               	bcf	3,6	;RP1=0, select bank0
  1237  007C  129F               	bcf	31,5	;volatile
  1238                           
  1239                           ;ADC.c: 113:             ADCON0bits.CHS2 = 0;
  1240  007D  121F               	bcf	31,4	;volatile
  1241                           
  1242                           ;ADC.c: 114:             ADCON0bits.CHS1 = 0;
  1243  007E  119F               	bcf	31,3	;volatile
  1244                           
  1245                           ;ADC.c: 115:             ADCON0bits.CHS0 = 0;
  1246  007F  111F               	bcf	31,2	;volatile
  1247                           
  1248                           ;ADC.c: 116:             break;
  1249  0080  28B5               	goto	l22
  1250  0081                     l721:
  1251  0081  0876               	movf	canal@c,w
  1252  0082  00F4               	movwf	??_canal
  1253  0083  01F5               	clrf	??_canal+1
  1254                           
  1255                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1256                           ; Switch size 1, requested type "simple"
  1257                           ; Number of cases is 1, Range of values is 0 to 0
  1258                           ; switch strategies available:
  1259                           ; Name         Instructions Cycles
  1260                           ; simple_byte            4     3 (average)
  1261                           ; direct_byte           11     8 (fixed)
  1262                           ; jumptable            260     6 (fixed)
  1263                           ;	Chosen strategy is simple_byte
  1264  0084  0875               	movf	??_canal+1,w
  1265  0085  3A00               	xorlw	0	; case 0
  1266  0086  1903               	skipnz
  1267  0087  2889               	goto	l1049
  1268  0088  287A               	goto	l21
  1269  0089                     l1049:
  1270                           
  1271                           ; Switch size 1, requested type "simple"
  1272                           ; Number of cases is 14, Range of values is 0 to 13
  1273                           ; switch strategies available:
  1274                           ; Name         Instructions Cycles
  1275                           ; simple_byte           43    22 (average)
  1276                           ; direct_byte           50     8 (fixed)
  1277                           ; jumptable            260     6 (fixed)
  1278                           ;	Chosen strategy is simple_byte
  1279  0089  0874               	movf	??_canal,w
  1280  008A  3A00               	xorlw	0	; case 0
  1281  008B  1903               	skipnz
  1282  008C  2818               	goto	l6
  1283  008D  3A01               	xorlw	1	; case 1
  1284  008E  1903               	skipnz
  1285  008F  281F               	goto	l8
  1286  0090  3A03               	xorlw	3	; case 2
  1287  0091  1903               	skipnz
  1288  0092  2826               	goto	l9
  1289  0093  3A01               	xorlw	1	; case 3
  1290  0094  1903               	skipnz
  1291  0095  282D               	goto	l10
  1292  0096  3A07               	xorlw	7	; case 4
  1293  0097  1903               	skipnz
  1294  0098  2834               	goto	l11
  1295  0099  3A01               	xorlw	1	; case 5
  1296  009A  1903               	skipnz
  1297  009B  283B               	goto	l12
  1298  009C  3A03               	xorlw	3	; case 6
  1299  009D  1903               	skipnz
  1300  009E  2842               	goto	l13
  1301  009F  3A01               	xorlw	1	; case 7
  1302  00A0  1903               	skipnz
  1303  00A1  2849               	goto	l14
  1304  00A2  3A0F               	xorlw	15	; case 8
  1305  00A3  1903               	skipnz
  1306  00A4  2850               	goto	l15
  1307  00A5  3A01               	xorlw	1	; case 9
  1308  00A6  1903               	skipnz
  1309  00A7  2857               	goto	l16
  1310  00A8  3A03               	xorlw	3	; case 10
  1311  00A9  1903               	skipnz
  1312  00AA  285E               	goto	l17
  1313  00AB  3A01               	xorlw	1	; case 11
  1314  00AC  1903               	skipnz
  1315  00AD  2865               	goto	l18
  1316  00AE  3A07               	xorlw	7	; case 12
  1317  00AF  1903               	skipnz
  1318  00B0  286C               	goto	l19
  1319  00B1  3A01               	xorlw	1	; case 13
  1320  00B2  1903               	skipnz
  1321  00B3  2873               	goto	l20
  1322  00B4  287A               	goto	l21
  1323  00B5                     l22:
  1324  00B5  0008               	return
  1325  00B6                     __end_of_canal:
  1326                           
  1327                           	psect	text4
  1328  0136                     __ptext4:	
  1329 ;; *************** function _isr *****************
  1330 ;; Defined at:
  1331 ;;		line 34 in file "Main_slave.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;		None
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;		None
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  1    wreg      void 
  1338 ;; Registers used:
  1339 ;;		wreg, status,2, status,0, pclath, cstack
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1345 ;;      Params:         0       0       0       0       0
  1346 ;;      Locals:         0       0       0       0       0
  1347 ;;      Temps:          3       0       0       0       0
  1348 ;;      Totals:         3       0       0       0       0
  1349 ;;Total ram usage:        3 bytes
  1350 ;; Hardware stack levels used:    1
  1351 ;; Hardware stack levels required when called:    2
  1352 ;; This function calls:
  1353 ;;		_spiRead
  1354 ;;		_spiWrite
  1355 ;; This function is called by:
  1356 ;;		Interrupt level 1
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360                           
  1361                           ;psect for function _isr
  1362  0136                     _isr:
  1363  0136                     i1l795:
  1364                           
  1365                           ;Main_slave.c: 36:     if(SSPIF == 1){
  1366  0136  1283               	bcf	3,5	;RP0=0, select bank0
  1367  0137  1303               	bcf	3,6	;RP1=0, select bank0
  1368  0138  1D8C               	btfss	12,3	;volatile
  1369  0139  293B               	goto	u3_21
  1370  013A  293C               	goto	u3_20
  1371  013B                     u3_21:
  1372  013B  2956               	goto	i1l805
  1373  013C                     u3_20:
  1374  013C                     i1l797:
  1375                           
  1376                           ;Main_slave.c: 37:         potenciometro = spiRead();
  1377  013C  120A  118A  217E  120A  118A  	fcall	_spiRead
  1378  0141  00F1               	movwf	??_isr
  1379  0142  0871               	movf	??_isr,w
  1380  0143  00F7               	movwf	_potenciometro
  1381  0144                     i1l799:
  1382                           
  1383                           ;Main_slave.c: 38:         if(potenciometro == 1){
  1384  0144  0377               	decf	_potenciometro,w
  1385  0145  1D03               	btfss	3,2
  1386  0146  2948               	goto	u4_21
  1387  0147  2949               	goto	u4_20
  1388  0148                     u4_21:
  1389  0148  2950               	goto	i1l803
  1390  0149                     u4_20:
  1391  0149                     i1l801:
  1392                           
  1393                           ;Main_slave.c: 39:             spiWrite(pot2);
  1394  0149  0878               	movf	_pot2,w
  1395  014A  120A  118A  218E  120A  118A  	fcall	_spiWrite
  1396                           
  1397                           ;Main_slave.c: 40:         }else {
  1398  014F  2956               	goto	i1l805
  1399  0150                     i1l803:
  1400                           
  1401                           ;Main_slave.c: 41:             spiWrite(pot1);
  1402  0150  0879               	movf	_pot1,w
  1403  0151  120A  118A  218E  120A  118A  	fcall	_spiWrite
  1404  0156                     i1l805:
  1405                           
  1406                           ;Main_slave.c: 44:     SSPIF = 0;
  1407  0156  1283               	bcf	3,5	;RP0=0, select bank0
  1408  0157  1303               	bcf	3,6	;RP1=0, select bank0
  1409  0158  118C               	bcf	12,3	;volatile
  1410  0159                     i1l76:
  1411  0159  0873               	movf	??_isr+2,w
  1412  015A  008A               	movwf	10
  1413  015B  0E72               	swapf	??_isr+1,w
  1414  015C  0083               	movwf	3
  1415  015D  0EFE               	swapf	btemp,f
  1416  015E  0E7E               	swapf	btemp,w
  1417  015F  0009               	retfie
  1418  0160                     __end_of_isr:
  1419                           
  1420                           	psect	intentry
  1421  0004                     __pintentry:	
  1422                           ;incstack = 0
  1423                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1424                           
  1425  0004                     interrupt_function:
  1426  007E                     saved_w	set	btemp
  1427  0004  00FE               	movwf	btemp
  1428  0005  0E03               	swapf	3,w
  1429  0006  00F2               	movwf	??_isr+1
  1430  0007  080A               	movf	10,w
  1431  0008  00F3               	movwf	??_isr+2
  1432  0009  120A  118A  2936   	ljmp	_isr
  1433                           
  1434                           	psect	text5
  1435  018E                     __ptext5:	
  1436 ;; *************** function _spiWrite *****************
  1437 ;; Defined at:
  1438 ;;		line 34 in file "SPI.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;  dat             1    wreg     unsigned char 
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;  dat             1    0[COMMON] unsigned char 
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  1    wreg      void 
  1445 ;; Registers used:
  1446 ;;		wreg
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1452 ;;      Params:         0       0       0       0       0
  1453 ;;      Locals:         1       0       0       0       0
  1454 ;;      Temps:          0       0       0       0       0
  1455 ;;      Totals:         1       0       0       0       0
  1456 ;;Total ram usage:        1 bytes
  1457 ;; Hardware stack levels used:    1
  1458 ;; This function calls:
  1459 ;;		Nothing
  1460 ;; This function is called by:
  1461 ;;		_isr
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465                           
  1466                           ;psect for function _spiWrite
  1467  018E                     _spiWrite:
  1468                           
  1469                           ;incstack = 0
  1470                           ; Regs used in _spiWrite: [wreg]
  1471                           ;spiWrite@dat stored from wreg
  1472  018E  00F0               	movwf	spiWrite@dat
  1473  018F                     i1l745:
  1474                           
  1475                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1476  018F  0870               	movf	spiWrite@dat,w
  1477  0190  1283               	bcf	3,5	;RP0=0, select bank0
  1478  0191  1303               	bcf	3,6	;RP1=0, select bank0
  1479  0192  0093               	movwf	19	;volatile
  1480  0193                     i1l117:
  1481  0193  0008               	return
  1482  0194                     __end_of_spiWrite:
  1483                           
  1484                           	psect	text6
  1485  017E                     __ptext6:	
  1486 ;; *************** function _spiRead *****************
  1487 ;; Defined at:
  1488 ;;		line 47 in file "SPI.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;		None
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;		None
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  1    wreg      unsigned char 
  1495 ;; Registers used:
  1496 ;;		wreg, status,2, status,0, pclath, cstack
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1502 ;;      Params:         0       0       0       0       0
  1503 ;;      Locals:         0       0       0       0       0
  1504 ;;      Temps:          0       0       0       0       0
  1505 ;;      Totals:         0       0       0       0       0
  1506 ;;Total ram usage:        0 bytes
  1507 ;; Hardware stack levels used:    1
  1508 ;; Hardware stack levels required when called:    1
  1509 ;; This function calls:
  1510 ;;		_spiReceiveWait
  1511 ;; This function is called by:
  1512 ;;		_isr
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516                           
  1517                           ;psect for function _spiRead
  1518  017E                     _spiRead:
  1519  017E                     i1l739:	
  1520                           ;incstack = 0
  1521                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1522                           
  1523                           
  1524                           ;SPI.c: 49:     spiReceiveWait();
  1525  017E  120A  118A  2187  120A  118A  	fcall	_spiReceiveWait
  1526  0183                     i1l741:
  1527                           
  1528                           ;SPI.c: 50:     return(SSPBUF);
  1529  0183  1283               	bcf	3,5	;RP0=0, select bank0
  1530  0184  1303               	bcf	3,6	;RP1=0, select bank0
  1531  0185  0813               	movf	19,w	;volatile
  1532  0186                     i1l125:
  1533  0186  0008               	return
  1534  0187                     __end_of_spiRead:
  1535                           
  1536                           	psect	text7
  1537  0187                     __ptext7:	
  1538 ;; *************** function _spiReceiveWait *****************
  1539 ;; Defined at:
  1540 ;;		line 29 in file "SPI.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;		None
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;		None
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  1    wreg      void 
  1547 ;; Registers used:
  1548 ;;		None
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1554 ;;      Params:         0       0       0       0       0
  1555 ;;      Locals:         0       0       0       0       0
  1556 ;;      Temps:          0       0       0       0       0
  1557 ;;      Totals:         0       0       0       0       0
  1558 ;;Total ram usage:        0 bytes
  1559 ;; Hardware stack levels used:    1
  1560 ;; This function calls:
  1561 ;;		Nothing
  1562 ;; This function is called by:
  1563 ;;		_spiRead
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           
  1568                           ;psect for function _spiReceiveWait
  1569  0187                     _spiReceiveWait:
  1570  0187                     i1l737:	
  1571                           ;incstack = 0
  1572                           ; Regs used in _spiReceiveWait: []
  1573                           
  1574  0187                     i1l111:	
  1575                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1576                           
  1577  0187  1683               	bsf	3,5	;RP0=1, select bank1
  1578  0188  1303               	bcf	3,6	;RP1=0, select bank1
  1579  0189  1C14               	btfss	20,0	;volatile
  1580  018A  298C               	goto	u2_21
  1581  018B  298D               	goto	u2_20
  1582  018C                     u2_21:
  1583  018C  2987               	goto	i1l111
  1584  018D                     u2_20:
  1585  018D                     i1l114:
  1586  018D  0008               	return
  1587  018E                     __end_of_spiReceiveWait:
  1588  007E                     btemp	set	126	;btemp
  1589  007E                     wtemp0	set	126
  1590                           
  1591                           	psect	config
  1592                           
  1593                           ;Config register CONFIG1 @ 0x2007
  1594                           ;	Oscillator Selection bits
  1595                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1596                           ;	Watchdog Timer Enable bit
  1597                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1598                           ;	Power-up Timer Enable bit
  1599                           ;	PWRTE = OFF, PWRT disabled
  1600                           ;	RE3/MCLR pin function select bit
  1601                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1602                           ;	Code Protection bit
  1603                           ;	CP = OFF, Program memory code protection is disabled
  1604                           ;	Data Code Protection bit
  1605                           ;	CPD = OFF, Data memory code protection is disabled
  1606                           ;	Brown Out Reset Selection bits
  1607                           ;	BOREN = OFF, BOR disabled
  1608                           ;	Internal External Switchover bit
  1609                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1610                           ;	Fail-Safe Clock Monitor Enabled bit
  1611                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1612                           ;	Low Voltage Programming Enable bit
  1613                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1614                           ;	In-Circuit Debugger Mode bit
  1615                           ;	DEBUG = 0x1, unprogrammed default
  1616  2007                     	org	8199
  1617  2007  20D4               	dw	8404
  1618                           
  1619                           ;Config register CONFIG2 @ 0x2008
  1620                           ;	Brown-out Reset Selection bit
  1621                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1622                           ;	Flash Program Memory Self Write Enable bits
  1623                           ;	WRT = OFF, Write protection off
  1624  2008                     	org	8200
  1625  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_canal
    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _main->_setup
    _setup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     471
                                              2 BANK0      1     1      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0     471
                                              1 BANK0      1     1      0
                              _canal
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              4 COMMON     3     0      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _canal                                                3     3      0      15
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _canal
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       D      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Aug 04 13:23:43 2021

                      l6 0018                        l8 001F                        l9 0026  
            _SSPSTATbits 0094                       l10 002D                       l11 0034  
                     l20 0073                       l12 003B                       l21 007A  
                     l13 0042                       l14 0049                       l22 00B5  
                     l15 0050                       l16 0057                       l17 005E  
                     l18 0065                       l19 006C                       l91 00F9  
                    l107 0178                      l108 017D                      l721 0081  
                    l717 0017                      l951 0163                      l953 016C  
                    l961 00B6                      l955 0170                      l971 00C7  
                    l963 00BA                      l957 0172                      l981 00D3  
                    l973 00C8                      l965 00BB                      l959 0177  
                    l991 00DE                      l983 00D4                      l975 00C9  
                    l967 00BF                      l993 00E5                      l985 00D7  
                    l977 00CA                      l969 00C4                      l995 00E8  
                    l987 00D8                      l979 00D0                      l997 00E9  
                    l989 00DB                      l999 00EA                      u120 016C  
                    u121 016B                      u130 0105                      u131 0104  
                    u140 010E                      u141 010D                      u150 0120  
                    u151 011F                      u167 012C                      u177 00E2  
                    _isr 0136                     l1001 00EB                     l1003 00EC  
                   l1011 00FF                     l1005 00ED                     l1021 0120  
                   l1013 0105                     l1007 00F0                     l1023 0124  
                   l1015 010E                     l1025 0128                     l1017 0112  
                   l1009 00FA                     l1027 012F                     l1019 0117  
                   l1049 0089                     ?_isr 0070                     i1l76 0159  
                   u2_20 018D                     u2_21 018C                     u3_20 013C  
                   u3_21 013B                     u4_20 0149                     u4_21 0148  
                   _main 00FA                     _pot1 0079                     _pot2 0078  
                   btemp 007E                     start 000C                    ??_isr 0071  
                  ?_main 0070                    _ANSEL 0188                    i1l111 0187  
                  i1l114 018D                    i1l125 0186                    i1l117 0193  
                  i1l801 0149                    i1l803 0150                    i1l741 0183  
                  i1l805 0156                    i1l737 0187                    i1l745 018F  
                  i1l739 017E                    i1l795 0136                    i1l797 013C  
                  i1l799 0144                    _PORTA 0005                    _PORTE 0009  
                  _TRISE 0089                    _SSPIF 0063                    _canal 0016  
                  _setup 00B6                    pclath 000A          __end_of_spiInit 017E  
        __end_of_spiRead 0187                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0136                   ??_main 0022  
                 ?_canal 0070                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013                   canal@c 0076  
                 saved_w 007E         __end_of_spiWrite 0194                ??_spiInit 0077  
              ??_spiRead 0070  __end_of__initialization 0012           __pcstackCOMMON 0070  
          __end_of_canal 00B6            __end_of_setup 00FA                  ??_canal 0074  
                ??_setup 0021               __pmaintext 00FA               __pintentry 0004  
__size_of_spiReceiveWait 0007                  _SSPSTAT 0094                ?_spiWrite 0070  
                __ptext1 00B6                  __ptext2 0160                  __ptext3 0016  
                __ptext4 0136                  __ptext5 018E                  __ptext6 017E  
                __ptext7 0187             __size_of_isr 002A                  _spiInit 0160  
                _spiRead 017E     end_of_initialization 0012               ??_spiWrite 0070  
              _TRISAbits 0085              spiWrite@dat 0070           _spiReceiveWait 0187  
    start_initialization 000F              __end_of_isr 0160   __end_of_spiReceiveWait 018E  
            __pbssCOMMON 0077                ___latbits 0002            __pcstackBANK0 0020  
        ?_spiReceiveWait 0070        __size_of_spiWrite 0006                 ?_spiInit 0074  
               ?_spiRead 0070           __size_of_canal 00A0           __size_of_setup 0044  
   spiInit@sTransmitEdge 0076        interrupt_function 0004                 _PIE1bits 008C  
     spiInit@sDataSample 0074                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F         __size_of_spiInit 001E         __size_of_spiRead 0009  
          __size_of_main 003C                 _spiWrite 018E             spiInit@sType 0020  
      spiInit@sClockIdle 0075               _INTCONbits 000B                 intlevel1 0000  
       ??_spiReceiveWait 0070            _potenciometro 0077               _OSCCONbits 008F  
