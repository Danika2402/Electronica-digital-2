

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Sep 03 21:03:21 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    43                           	dabs	1,0x7E,2
    44  0000                     
    45                           ; Version 2.20
    46                           ; Generated 12/02/2020 GMT
    47                           ; 
    48                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F887 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  000E                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  001D                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  0081                     	;# 
   115  0085                     	;# 
   116  0086                     	;# 
   117  0087                     	;# 
   118  0088                     	;# 
   119  0089                     	;# 
   120  008C                     	;# 
   121  008D                     	;# 
   122  008E                     	;# 
   123  008F                     	;# 
   124  0090                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0094                     	;# 
   131  0095                     	;# 
   132  0096                     	;# 
   133  0097                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009A                     	;# 
   137  009B                     	;# 
   138  009C                     	;# 
   139  009D                     	;# 
   140  009E                     	;# 
   141  009F                     	;# 
   142  0105                     	;# 
   143  0107                     	;# 
   144  0108                     	;# 
   145  0109                     	;# 
   146  010C                     	;# 
   147  010C                     	;# 
   148  010D                     	;# 
   149  010E                     	;# 
   150  010F                     	;# 
   151  0185                     	;# 
   152  0187                     	;# 
   153  0188                     	;# 
   154  0189                     	;# 
   155  018C                     	;# 
   156  018D                     	;# 
   157  0000                     	;# 
   158  0001                     	;# 
   159  0002                     	;# 
   160  0003                     	;# 
   161  0004                     	;# 
   162  0005                     	;# 
   163  0006                     	;# 
   164  0007                     	;# 
   165  0008                     	;# 
   166  0009                     	;# 
   167  000A                     	;# 
   168  000B                     	;# 
   169  000C                     	;# 
   170  000D                     	;# 
   171  000E                     	;# 
   172  000E                     	;# 
   173  000F                     	;# 
   174  0010                     	;# 
   175  0011                     	;# 
   176  0012                     	;# 
   177  0013                     	;# 
   178  0014                     	;# 
   179  0015                     	;# 
   180  0015                     	;# 
   181  0016                     	;# 
   182  0017                     	;# 
   183  0018                     	;# 
   184  0019                     	;# 
   185  001A                     	;# 
   186  001B                     	;# 
   187  001B                     	;# 
   188  001C                     	;# 
   189  001D                     	;# 
   190  001E                     	;# 
   191  001F                     	;# 
   192  0081                     	;# 
   193  0085                     	;# 
   194  0086                     	;# 
   195  0087                     	;# 
   196  0088                     	;# 
   197  0089                     	;# 
   198  008C                     	;# 
   199  008D                     	;# 
   200  008E                     	;# 
   201  008F                     	;# 
   202  0090                     	;# 
   203  0091                     	;# 
   204  0092                     	;# 
   205  0093                     	;# 
   206  0093                     	;# 
   207  0093                     	;# 
   208  0094                     	;# 
   209  0095                     	;# 
   210  0096                     	;# 
   211  0097                     	;# 
   212  0098                     	;# 
   213  0099                     	;# 
   214  009A                     	;# 
   215  009B                     	;# 
   216  009C                     	;# 
   217  009D                     	;# 
   218  009E                     	;# 
   219  009F                     	;# 
   220  0105                     	;# 
   221  0107                     	;# 
   222  0108                     	;# 
   223  0109                     	;# 
   224  010C                     	;# 
   225  010C                     	;# 
   226  010D                     	;# 
   227  010E                     	;# 
   228  010F                     	;# 
   229  0185                     	;# 
   230  0187                     	;# 
   231  0188                     	;# 
   232  0189                     	;# 
   233  018C                     	;# 
   234  018D                     	;# 
   235  0000                     	;# 
   236  0001                     	;# 
   237  0002                     	;# 
   238  0003                     	;# 
   239  0004                     	;# 
   240  0005                     	;# 
   241  0006                     	;# 
   242  0007                     	;# 
   243  0008                     	;# 
   244  0009                     	;# 
   245  000A                     	;# 
   246  000B                     	;# 
   247  000C                     	;# 
   248  000D                     	;# 
   249  000E                     	;# 
   250  000E                     	;# 
   251  000F                     	;# 
   252  0010                     	;# 
   253  0011                     	;# 
   254  0012                     	;# 
   255  0013                     	;# 
   256  0014                     	;# 
   257  0015                     	;# 
   258  0015                     	;# 
   259  0016                     	;# 
   260  0017                     	;# 
   261  0018                     	;# 
   262  0019                     	;# 
   263  001A                     	;# 
   264  001B                     	;# 
   265  001B                     	;# 
   266  001C                     	;# 
   267  001D                     	;# 
   268  001E                     	;# 
   269  001F                     	;# 
   270  0081                     	;# 
   271  0085                     	;# 
   272  0086                     	;# 
   273  0087                     	;# 
   274  0088                     	;# 
   275  0089                     	;# 
   276  008C                     	;# 
   277  008D                     	;# 
   278  008E                     	;# 
   279  008F                     	;# 
   280  0090                     	;# 
   281  0091                     	;# 
   282  0092                     	;# 
   283  0093                     	;# 
   284  0093                     	;# 
   285  0093                     	;# 
   286  0094                     	;# 
   287  0095                     	;# 
   288  0096                     	;# 
   289  0097                     	;# 
   290  0098                     	;# 
   291  0099                     	;# 
   292  009A                     	;# 
   293  009B                     	;# 
   294  009C                     	;# 
   295  009D                     	;# 
   296  009E                     	;# 
   297  009F                     	;# 
   298  0105                     	;# 
   299  0107                     	;# 
   300  0108                     	;# 
   301  0109                     	;# 
   302  010C                     	;# 
   303  010C                     	;# 
   304  010D                     	;# 
   305  010E                     	;# 
   306  010F                     	;# 
   307  0185                     	;# 
   308  0187                     	;# 
   309  0188                     	;# 
   310  0189                     	;# 
   311  018C                     	;# 
   312  018D                     	;# 
   313  0000                     	;# 
   314  0001                     	;# 
   315  0002                     	;# 
   316  0003                     	;# 
   317  0004                     	;# 
   318  0005                     	;# 
   319  0006                     	;# 
   320  0007                     	;# 
   321  0008                     	;# 
   322  0009                     	;# 
   323  000A                     	;# 
   324  000B                     	;# 
   325  000C                     	;# 
   326  000D                     	;# 
   327  000E                     	;# 
   328  000E                     	;# 
   329  000F                     	;# 
   330  0010                     	;# 
   331  0011                     	;# 
   332  0012                     	;# 
   333  0013                     	;# 
   334  0014                     	;# 
   335  0015                     	;# 
   336  0015                     	;# 
   337  0016                     	;# 
   338  0017                     	;# 
   339  0018                     	;# 
   340  0019                     	;# 
   341  001A                     	;# 
   342  001B                     	;# 
   343  001B                     	;# 
   344  001C                     	;# 
   345  001D                     	;# 
   346  001E                     	;# 
   347  001F                     	;# 
   348  0081                     	;# 
   349  0085                     	;# 
   350  0086                     	;# 
   351  0087                     	;# 
   352  0088                     	;# 
   353  0089                     	;# 
   354  008C                     	;# 
   355  008D                     	;# 
   356  008E                     	;# 
   357  008F                     	;# 
   358  0090                     	;# 
   359  0091                     	;# 
   360  0092                     	;# 
   361  0093                     	;# 
   362  0093                     	;# 
   363  0093                     	;# 
   364  0094                     	;# 
   365  0095                     	;# 
   366  0096                     	;# 
   367  0097                     	;# 
   368  0098                     	;# 
   369  0099                     	;# 
   370  009A                     	;# 
   371  009B                     	;# 
   372  009C                     	;# 
   373  009D                     	;# 
   374  009E                     	;# 
   375  009F                     	;# 
   376  0105                     	;# 
   377  0107                     	;# 
   378  0108                     	;# 
   379  0109                     	;# 
   380  010C                     	;# 
   381  010C                     	;# 
   382  010D                     	;# 
   383  010E                     	;# 
   384  010F                     	;# 
   385  0185                     	;# 
   386  0187                     	;# 
   387  0188                     	;# 
   388  0189                     	;# 
   389  018C                     	;# 
   390  018D                     	;# 
   391  0000                     	;# 
   392  0001                     	;# 
   393  0002                     	;# 
   394  0003                     	;# 
   395  0004                     	;# 
   396  0005                     	;# 
   397  0006                     	;# 
   398  0007                     	;# 
   399  0008                     	;# 
   400  0009                     	;# 
   401  000A                     	;# 
   402  000B                     	;# 
   403  000C                     	;# 
   404  000D                     	;# 
   405  000E                     	;# 
   406  000E                     	;# 
   407  000F                     	;# 
   408  0010                     	;# 
   409  0011                     	;# 
   410  0012                     	;# 
   411  0013                     	;# 
   412  0014                     	;# 
   413  0015                     	;# 
   414  0015                     	;# 
   415  0016                     	;# 
   416  0017                     	;# 
   417  0018                     	;# 
   418  0019                     	;# 
   419  001A                     	;# 
   420  001B                     	;# 
   421  001B                     	;# 
   422  001C                     	;# 
   423  001D                     	;# 
   424  001E                     	;# 
   425  001F                     	;# 
   426  0081                     	;# 
   427  0085                     	;# 
   428  0086                     	;# 
   429  0087                     	;# 
   430  0088                     	;# 
   431  0089                     	;# 
   432  008C                     	;# 
   433  008D                     	;# 
   434  008E                     	;# 
   435  008F                     	;# 
   436  0090                     	;# 
   437  0091                     	;# 
   438  0092                     	;# 
   439  0093                     	;# 
   440  0093                     	;# 
   441  0093                     	;# 
   442  0094                     	;# 
   443  0095                     	;# 
   444  0096                     	;# 
   445  0097                     	;# 
   446  0098                     	;# 
   447  0099                     	;# 
   448  009A                     	;# 
   449  009B                     	;# 
   450  009C                     	;# 
   451  009D                     	;# 
   452  009E                     	;# 
   453  009F                     	;# 
   454  0105                     	;# 
   455  0107                     	;# 
   456  0108                     	;# 
   457  0109                     	;# 
   458  010C                     	;# 
   459  010C                     	;# 
   460  010D                     	;# 
   461  010E                     	;# 
   462  010F                     	;# 
   463  0185                     	;# 
   464  0187                     	;# 
   465  0188                     	;# 
   466  0189                     	;# 
   467  018C                     	;# 
   468  018D                     	;# 
   469  0000                     	;# 
   470  0001                     	;# 
   471  0002                     	;# 
   472  0003                     	;# 
   473  0004                     	;# 
   474  0005                     	;# 
   475  0006                     	;# 
   476  0007                     	;# 
   477  0008                     	;# 
   478  0009                     	;# 
   479  000A                     	;# 
   480  000B                     	;# 
   481  000C                     	;# 
   482  000D                     	;# 
   483  000E                     	;# 
   484  000E                     	;# 
   485  000F                     	;# 
   486  0010                     	;# 
   487  0011                     	;# 
   488  0012                     	;# 
   489  0013                     	;# 
   490  0014                     	;# 
   491  0015                     	;# 
   492  0015                     	;# 
   493  0016                     	;# 
   494  0017                     	;# 
   495  0018                     	;# 
   496  0019                     	;# 
   497  001A                     	;# 
   498  001B                     	;# 
   499  001B                     	;# 
   500  001C                     	;# 
   501  001D                     	;# 
   502  001E                     	;# 
   503  001F                     	;# 
   504  0081                     	;# 
   505  0085                     	;# 
   506  0086                     	;# 
   507  0087                     	;# 
   508  0088                     	;# 
   509  0089                     	;# 
   510  008C                     	;# 
   511  008D                     	;# 
   512  008E                     	;# 
   513  008F                     	;# 
   514  0090                     	;# 
   515  0091                     	;# 
   516  0092                     	;# 
   517  0093                     	;# 
   518  0093                     	;# 
   519  0093                     	;# 
   520  0094                     	;# 
   521  0095                     	;# 
   522  0096                     	;# 
   523  0097                     	;# 
   524  0098                     	;# 
   525  0099                     	;# 
   526  009A                     	;# 
   527  009B                     	;# 
   528  009C                     	;# 
   529  009D                     	;# 
   530  009E                     	;# 
   531  009F                     	;# 
   532  0105                     	;# 
   533  0107                     	;# 
   534  0108                     	;# 
   535  0109                     	;# 
   536  010C                     	;# 
   537  010C                     	;# 
   538  010D                     	;# 
   539  010E                     	;# 
   540  010F                     	;# 
   541  0185                     	;# 
   542  0187                     	;# 
   543  0188                     	;# 
   544  0189                     	;# 
   545  018C                     	;# 
   546  018D                     	;# 
   547                           
   548                           	psect	idataBANK1
   549  0C20                     __pidataBANK1:
   550                           
   551                           ;initializer for _calendario
   552  0C20  3444               	retlw	68
   553  0C21  3441               	retlw	65
   554  0C22  3454               	retlw	84
   555  0C23  3445               	retlw	69
   556  0C24  343A               	retlw	58
   557  0C25  3420               	retlw	32
   558  0C26  3420               	retlw	32
   559  0C27  342F               	retlw	47
   560  0C28  3420               	retlw	32
   561  0C29  3420               	retlw	32
   562  0C2A  342F               	retlw	47
   563  0C2B  3432               	retlw	50
   564  0C2C  3430               	retlw	48
   565  0C2D  3420               	retlw	32
   566  0C2E  3420               	retlw	32
   567  0C2F  3400               	retlw	0
   568                           
   569                           ;initializer for _time
   570  0C30  3454               	retlw	84
   571  0C31  3449               	retlw	73
   572  0C32  344D               	retlw	77
   573  0C33  3445               	retlw	69
   574  0C34  343A               	retlw	58
   575  0C35  3420               	retlw	32
   576  0C36  3420               	retlw	32
   577  0C37  343A               	retlw	58
   578  0C38  3420               	retlw	32
   579  0C39  3420               	retlw	32
   580  0C3A  343A               	retlw	58
   581  0C3B  3420               	retlw	32
   582  0C3C  3420               	retlw	32
   583  0C3D  3400               	retlw	0
   584  0013                     _SSPBUF	set	19
   585  0014                     _SSPCON	set	20
   586  0009                     _PORTEbits	set	9
   587  001A                     _RCREG	set	26
   588  0019                     _TXREG	set	25
   589  0018                     _RCSTAbits	set	24
   590  000B                     _INTCONbits	set	11
   591  0012                     _T2CONbits	set	18
   592  0008                     _PORTD	set	8
   593  0007                     _PORTC	set	7
   594  0006                     _PORTB	set	6
   595  0009                     _PORTE	set	9
   596  000C                     _PIR1bits	set	12
   597  0017                     _CCP1CONbits	set	23
   598  0015                     _CCPR1L	set	21
   599  0005                     _PORTA	set	5
   600  001E                     _ADRESH	set	30
   601  001F                     _ADCON0bits	set	31
   602  0063                     _SSPIF	set	99
   603  005E                     _PEIE	set	94
   604  005F                     _GIE	set	95
   605  0032                     _RB2	set	50
   606  0058                     _RBIF	set	88
   607  009F                     _ADCON1bits	set	159
   608  0091                     _SSPCON2bits	set	145
   609  0094                     _SSPSTAT	set	148
   610  0093                     _SSPADD	set	147
   611  0091                     _SSPCON2	set	145
   612  0089                     _TRISEbits	set	137
   613  009A                     _SPBRGH	set	154
   614  0099                     _SPBRG	set	153
   615  0098                     _TXSTAbits	set	152
   616  0096                     _IOCBbits	set	150
   617  0095                     _WPUBbits	set	149
   618  0081                     _OPTION_REGbits	set	129
   619  008F                     _OSCCONbits	set	143
   620  0092                     _PR2	set	146
   621  0087                     _TRISCbits	set	135
   622  0088                     _TRISD	set	136
   623  0087                     _TRISC	set	135
   624  0086                     _TRISB	set	134
   625  0089                     _TRISE	set	137
   626  0085                     _TRISA	set	133
   627  0463                     _SSPIE	set	1123
   628  043C                     _TRISC4	set	1084
   629  043B                     _TRISC3	set	1083
   630  0187                     _BAUDCTLbits	set	391
   631  0189                     _ANSELH	set	393
   632  0188                     _ANSEL	set	392
   633                           
   634                           	psect	strings
   635  0800                     __pstrings:
   636  0800                     stringtab:
   637  0800                     __stringtab:
   638                           
   639                           ;	String table - string pointers are 1 byte each
   640  0800  1BFF               	btfsc	btemp+1,7
   641  0801  280A               	ljmp	stringcode
   642  0802  1383               	bcf	3,7
   643  0803  187F               	btfsc	btemp+1,0
   644  0804  1783               	bsf	3,7
   645  0805  0800               	movf	0,w
   646  0806  0A84               	incf	4,f
   647  0807  1903               	skipnz
   648  0808  0AFF               	incf	btemp+1,f
   649  0809  0008               	return
   650  080A                     stringcode:
   651  080A                     stringdir:
   652  080A  3008               	movlw	high stringdir
   653  080B  008A               	movwf	10
   654  080C  0804               	movf	4,w
   655  080D  0A84               	incf	4,f
   656  080E  0782               	addwf	2,f
   657  080F                     __stringbase:
   658  080F  3400               	retlw	0
   659  0810                     __end_of__stringtab:
   660  0810                     STR_1:
   661  0810  3446               	retlw	70	;'F'
   662  0811  346F               	retlw	111	;'o'
   663  0812  3474               	retlw	116	;'t'
   664  0813  346F               	retlw	111	;'o'
   665  0814  3431               	retlw	49	;'1'
   666  0815  3420               	retlw	32	;' '
   667  0816  3420               	retlw	32	;' '
   668  0817  3420               	retlw	32	;' '
   669  0818  3420               	retlw	32	;' '
   670  0819  3420               	retlw	32	;' '
   671  081A  3446               	retlw	70	;'F'
   672  081B  346F               	retlw	111	;'o'
   673  081C  3474               	retlw	116	;'t'
   674  081D  346F               	retlw	111	;'o'
   675  081E  3432               	retlw	50	;'2'
   676  081F  3400               	retlw	0
   677  0820                     STR_2:
   678  0820  3420               	retlw	32	;' '
   679  0821  3420               	retlw	32	;' '
   680  0822  3420               	retlw	32	;' '
   681  0823  3420               	retlw	32	;' '
   682  0824  3420               	retlw	32	;' '
   683  0825  3420               	retlw	32	;' '
   684  0826  3420               	retlw	32	;' '
   685  0827  3420               	retlw	32	;' '
   686  0828  3420               	retlw	32	;' '
   687  0829  3420               	retlw	32	;' '
   688  082A  3420               	retlw	32	;' '
   689  082B  3400               	retlw	0
   690  0820                     
   691                           	psect	cinit
   692  000F                     start_initialization:	
   693                           ; #config settings
   694                           
   695  000F                     __initialization:
   696                           
   697                           ; Initialize objects allocated to BANK1
   698  000F  1383               	bcf	3,7	;select IRP bank0
   699  0010  30BE               	movlw	low (__pdataBANK1+30)
   700  0011  00FD               	movwf	btemp+-1
   701  0012  300C               	movlw	high __pidataBANK1
   702  0013  00FE               	movwf	btemp
   703  0014  3020               	movlw	low __pidataBANK1
   704  0015  00FF               	movwf	btemp+1
   705  0016  30A0               	movlw	low __pdataBANK1
   706  0017  0084               	movwf	4
   707  0018  120A  158A  2370  120A  118A  	fcall	init_ram0
   708                           
   709                           ; Clear objects allocated to BANK0
   710  001D  3020               	movlw	low __pbssBANK0
   711  001E  0084               	movwf	4
   712  001F  3045               	movlw	low (__pbssBANK0+37)
   713  0020  120A  158A  232F  120A  118A  	fcall	clear_ram0
   714                           
   715                           ; Clear objects allocated to COMMON
   716  0025  01F8               	clrf	__pbssCOMMON& (0+127)
   717  0026  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   718  0027  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   719  0028                     end_of_initialization:	
   720                           ;End of C runtime variable initialization code
   721                           
   722  0028                     __end_of__initialization:
   723  0028  0183               	clrf	3
   724  0029  120A  118A  282C   	ljmp	_main	;jump to C main() function
   725                           
   726                           	psect	bssCOMMON
   727  0078                     __pbssCOMMON:
   728  0078                     _decmil2:
   729  0078                     	ds	1
   730  0079                     _mil1:
   731  0079                     	ds	1
   732  007A                     _decmil1:
   733  007A                     	ds	1
   734                           
   735                           	psect	bssBANK0
   736  0020                     __pbssBANK0:
   737  0020                     _fotoresistencia2:
   738  0020                     	ds	4
   739  0024                     _fotoresistencia1:
   740  0024                     	ds	4
   741  0028                     _mes:
   742  0028                     	ds	2
   743  002A                     _year:
   744  002A                     	ds	2
   745  002C                     _hora:
   746  002C                     	ds	2
   747  002E                     _dia:
   748  002E                     	ds	2
   749  0030                     _min:
   750  0030                     	ds	2
   751  0032                     _seg:
   752  0032                     	ds	2
   753  0034                     _TEMP:
   754  0034                     	ds	2
   755  0036                     _listo:
   756  0036                     	ds	1
   757  0037                     _seg2:
   758  0037                     	ds	1
   759  0038                     _seg1:
   760  0038                     	ds	1
   761  0039                     _uni2:
   762  0039                     	ds	1
   763  003A                     _dec2:
   764  003A                     	ds	1
   765  003B                     _cen2:
   766  003B                     	ds	1
   767  003C                     _mil2:
   768  003C                     	ds	1
   769  003D                     _uni1:
   770  003D                     	ds	1
   771  003E                     _dec1:
   772  003E                     	ds	1
   773  003F                     _cen1:
   774  003F                     	ds	1
   775  0040                     _cont:
   776  0040                     	ds	1
   777  0041                     _servo2:
   778  0041                     	ds	1
   779  0042                     _servo1:
   780  0042                     	ds	1
   781  0043                     _foto2:
   782  0043                     	ds	1
   783  0044                     _foto1:
   784  0044                     	ds	1
   785                           
   786                           	psect	dataBANK1
   787  00A0                     __pdataBANK1:
   788  00A0                     _calendario:
   789  00A0                     	ds	16
   790  00B0                     _time:
   791  00B0                     	ds	14
   792                           
   793                           	psect	inittext
   794  0B6C                     init_fetch0:	
   795                           ;	Called with low address in FSR and high address in W
   796                           
   797  0B6C  087E               	movf	btemp,w
   798  0B6D  008A               	movwf	10
   799  0B6E  087F               	movf	btemp+1,w
   800  0B6F  0082               	movwf	2
   801  0B70                     init_ram0:	
   802                           ;Called with:
   803                           ;	high address of idata address in btemp 
   804                           ;	low address of idata address in btemp+1 
   805                           ;	low address of data in FSR
   806                           ;	high address + 1 of data in btemp-1
   807                           
   808  0B70  120A  158A  236C  120A  158A  	fcall	init_fetch0
   809  0B75  0080               	movwf	0
   810  0B76  0A84               	incf	4,f
   811  0B77  0804               	movf	4,w
   812  0B78  067D               	xorwf	btemp+-1,w
   813  0B79  1903               	btfsc	3,2
   814  0B7A  3400               	retlw	0
   815  0B7B  0AFF               	incf	btemp+1,f
   816  0B7C  1903               	btfsc	3,2
   817  0B7D  0AFE               	incf	btemp,f
   818  0B7E  2B70               	goto	init_ram0
   819                           
   820                           	psect	clrtext
   821  0B2F                     clear_ram0:	
   822                           ;	Called with FSR containing the base address, and
   823                           ;	W with the last address+1
   824                           
   825  0B2F  0064               	clrwdt	;clear the watchdog before getting into this loop
   826  0B30                     clrloop0:
   827  0B30  0180               	clrf	0	;clear RAM location pointed to by FSR
   828  0B31  0A84               	incf	4,f	;increment pointer
   829  0B32  0604               	xorwf	4,w	;XOR with final address
   830  0B33  1903               	btfsc	3,2	;have we reached the end yet?
   831  0B34  3400               	retlw	0	;all done for this memory range, return
   832  0B35  0604               	xorwf	4,w	;XOR again to restore value
   833  0B36  2B30               	goto	clrloop0	;do the next byte
   834                           
   835                           	psect	cstackCOMMON
   836  0070                     __pcstackCOMMON:
   837  0070                     ?_setup:
   838  0070                     ?_USART_Rx:	
   839                           ; 1 bytes @ 0x0
   840                           
   841  0070                     ?_USART_Tx:	
   842                           ; 1 bytes @ 0x0
   843                           
   844  0070                     ?_canal:	
   845                           ; 1 bytes @ 0x0
   846                           
   847  0070                     ?_ADC_Int:	
   848                           ; 1 bytes @ 0x0
   849                           
   850  0070                     ?_USART_Int:	
   851                           ; 1 bytes @ 0x0
   852                           
   853  0070                     ?_LCD_Init:	
   854                           ; 1 bytes @ 0x0
   855                           
   856  0070                     ?_I2C_Master_Start:	
   857                           ; 1 bytes @ 0x0
   858                           
   859  0070                     ?_I2C_Master_Stop:	
   860                           ; 1 bytes @ 0x0
   861                           
   862  0070                     ?_LCD_Data:	
   863                           ; 1 bytes @ 0x0
   864                           
   865  0070                     ?_LCD_comando:	
   866                           ; 1 bytes @ 0x0
   867                           
   868  0070                     ?_isr:	
   869                           ; 1 bytes @ 0x0
   870                           
   871  0070                     ??_isr:	
   872                           ; 1 bytes @ 0x0
   873                           
   874  0070                     ?_main:	
   875                           ; 1 bytes @ 0x0
   876                           
   877  0070                     ?_I2C_Master_Wait:	
   878                           ; 1 bytes @ 0x0
   879                           
   880                           
   881                           ; 1 bytes @ 0x0
   882  0070                     	ds	3
   883  0073                     ??_USART_Rx:
   884  0073                     ??_USART_Tx:	
   885                           ; 1 bytes @ 0x3
   886                           
   887  0073                     ??_canal:	
   888                           ; 1 bytes @ 0x3
   889                           
   890  0073                     ??_ADC_Int:	
   891                           ; 1 bytes @ 0x3
   892                           
   893  0073                     ??_USART_Int:	
   894                           ; 1 bytes @ 0x3
   895                           
   896  0073                     ??_I2C_Master_Start:	
   897                           ; 1 bytes @ 0x3
   898                           
   899  0073                     ?_I2C_Master_Write:	
   900                           ; 1 bytes @ 0x3
   901                           
   902  0073                     ??_I2C_Master_Stop:	
   903                           ; 1 bytes @ 0x3
   904                           
   905  0073                     ??_LCD_Data:	
   906                           ; 1 bytes @ 0x3
   907                           
   908  0073                     ??_LCD_comando:	
   909                           ; 1 bytes @ 0x3
   910                           
   911  0073                     ??_I2C_Master_Wait:	
   912                           ; 1 bytes @ 0x3
   913                           
   914  0073                     ?___bmul:	
   915                           ; 1 bytes @ 0x3
   916                           
   917  0073                     ??___lldiv:	
   918                           ; 1 bytes @ 0x3
   919                           
   920  0073                     ?_I2C_Master_Read:	
   921                           ; 1 bytes @ 0x3
   922                           
   923  0073                     ?___wmul:	
   924                           ; 2 bytes @ 0x3
   925                           
   926  0073                     ?___awmod:	
   927                           ; 2 bytes @ 0x3
   928                           
   929  0073                     USART_Tx@data:	
   930                           ; 2 bytes @ 0x3
   931                           
   932  0073                     ___bmul@multiplicand:	
   933                           ; 1 bytes @ 0x3
   934                           
   935  0073                     I2C_Master_Write@d:	
   936                           ; 1 bytes @ 0x3
   937                           
   938  0073                     I2C_Master_Read@a:	
   939                           ; 2 bytes @ 0x3
   940                           
   941  0073                     ___wmul@multiplier:	
   942                           ; 2 bytes @ 0x3
   943                           
   944  0073                     ___awmod@divisor:	
   945                           ; 2 bytes @ 0x3
   946                           
   947                           
   948                           ; 2 bytes @ 0x3
   949  0073                     	ds	1
   950  0074                     ??_I2C_Master_Init:
   951  0074                     ??___bmul:	
   952                           ; 1 bytes @ 0x4
   953                           
   954  0074                     LCD_comando@dato:	
   955                           ; 1 bytes @ 0x4
   956                           
   957  0074                     LCD_Data@data:	
   958                           ; 1 bytes @ 0x4
   959                           
   960                           
   961                           ; 1 bytes @ 0x4
   962  0074                     	ds	1
   963  0075                     ?_LCD_XY:
   964  0075                     ?_LCD_Cadena:	
   965                           ; 1 bytes @ 0x5
   966                           
   967  0075                     ??_LCD_Init:	
   968                           ; 1 bytes @ 0x5
   969                           
   970  0075                     ??_I2C_Master_Write:	
   971                           ; 1 bytes @ 0x5
   972                           
   973  0075                     ??_I2C_Master_Read:	
   974                           ; 1 bytes @ 0x5
   975                           
   976  0075                     LCD_XY@y:	
   977                           ; 1 bytes @ 0x5
   978                           
   979  0075                     canal@c:	
   980                           ; 1 bytes @ 0x5
   981                           
   982  0075                     ___bmul@product:	
   983                           ; 1 bytes @ 0x5
   984                           
   985  0075                     LCD_Cadena@dato:	
   986                           ; 1 bytes @ 0x5
   987                           
   988  0075                     ___wmul@multiplicand:	
   989                           ; 2 bytes @ 0x5
   990                           
   991  0075                     ___awmod@dividend:	
   992                           ; 2 bytes @ 0x5
   993                           
   994                           
   995                           ; 2 bytes @ 0x5
   996  0075                     	ds	1
   997  0076                     ??_LCD_XY:
   998  0076                     LCD_XY@x:	
   999                           ; 1 bytes @ 0x6
  1000                           
  1001  0076                     ___bmul@multiplier:	
  1002                           ; 1 bytes @ 0x6
  1003                           
  1004                           
  1005                           ; 1 bytes @ 0x6
  1006  0076                     	ds	1
  1007  0077                     ??_LCD_Cadena:
  1008  0077                     ??_valores:	
  1009                           ; 1 bytes @ 0x7
  1010                           
  1011  0077                     ??_valores2:	
  1012                           ; 1 bytes @ 0x7
  1013                           
  1014  0077                     ??___wmul:	
  1015                           ; 1 bytes @ 0x7
  1016                           
  1017  0077                     ??___awdiv:	
  1018                           ; 1 bytes @ 0x7
  1019                           
  1020  0077                     ??___awmod:	
  1021                           ; 1 bytes @ 0x7
  1022                           
  1023                           
  1024                           ; 1 bytes @ 0x7
  1025  0077                     	ds	1
  1026  0078                     ??_setup:
  1027                           
  1028                           	psect	cstackBANK0
  1029  0045                     __pcstackBANK0:	
  1030                           ; 1 bytes @ 0x8
  1031                           
  1032  0045                     ?_valores:
  1033  0045                     ?_valores2:	
  1034                           ; 1 bytes @ 0x0
  1035                           
  1036  0045                     ?___lldiv:	
  1037                           ; 1 bytes @ 0x0
  1038                           
  1039  0045                     valores@miles:	
  1040                           ; 4 bytes @ 0x0
  1041                           
  1042  0045                     valores2@miles:	
  1043                           ; 1 bytes @ 0x0
  1044                           
  1045  0045                     ___awmod@counter:	
  1046                           ; 1 bytes @ 0x0
  1047                           
  1048  0045                     I2C_Master_Read@temp:	
  1049                           ; 1 bytes @ 0x0
  1050                           
  1051  0045                     ___wmul@product:	
  1052                           ; 2 bytes @ 0x0
  1053                           
  1054  0045                     ___lldiv@divisor:	
  1055                           ; 2 bytes @ 0x0
  1056                           
  1057                           
  1058                           ; 4 bytes @ 0x0
  1059  0045                     	ds	1
  1060  0046                     valores@centenas:
  1061  0046                     valores2@centenas:	
  1062                           ; 1 bytes @ 0x1
  1063                           
  1064  0046                     ___awmod@sign:	
  1065                           ; 1 bytes @ 0x1
  1066                           
  1067                           
  1068                           ; 1 bytes @ 0x1
  1069  0046                     	ds	1
  1070  0047                     ?_read_rtc:
  1071  0047                     ?___awdiv:	
  1072                           ; 2 bytes @ 0x2
  1073                           
  1074  0047                     valores@decenas:	
  1075                           ; 2 bytes @ 0x2
  1076                           
  1077  0047                     valores2@decenas:	
  1078                           ; 1 bytes @ 0x2
  1079                           
  1080  0047                     read_rtc@address:	
  1081                           ; 1 bytes @ 0x2
  1082                           
  1083  0047                     ___awdiv@divisor:	
  1084                           ; 2 bytes @ 0x2
  1085                           
  1086                           
  1087                           ; 2 bytes @ 0x2
  1088  0047                     	ds	1
  1089  0048                     valores@unidades:
  1090  0048                     valores2@unidades:	
  1091                           ; 1 bytes @ 0x3
  1092                           
  1093                           
  1094                           ; 1 bytes @ 0x3
  1095  0048                     	ds	1
  1096  0049                     ??_read_rtc:
  1097  0049                     valores@decenasdemiles:	
  1098                           ; 1 bytes @ 0x4
  1099                           
  1100  0049                     valores2@decenasdemiles:	
  1101                           ; 1 bytes @ 0x4
  1102                           
  1103  0049                     ___awdiv@dividend:	
  1104                           ; 1 bytes @ 0x4
  1105                           
  1106  0049                     ___lldiv@dividend:	
  1107                           ; 2 bytes @ 0x4
  1108                           
  1109                           
  1110                           ; 4 bytes @ 0x4
  1111  0049                     	ds	2
  1112  004B                     ___awdiv@counter:
  1113                           
  1114                           ; 1 bytes @ 0x6
  1115  004B                     	ds	1
  1116  004C                     ___awdiv@sign:
  1117  004C                     read_rtc@data:	
  1118                           ; 1 bytes @ 0x7
  1119                           
  1120                           
  1121                           ; 2 bytes @ 0x7
  1122  004C                     	ds	1
  1123  004D                     ___awdiv@quotient:
  1124  004D                     ___lldiv@quotient:	
  1125                           ; 2 bytes @ 0x8
  1126                           
  1127                           
  1128                           ; 4 bytes @ 0x8
  1129  004D                     	ds	4
  1130  0051                     ___lldiv@counter:
  1131                           
  1132                           ; 1 bytes @ 0xC
  1133  0051                     	ds	1
  1134  0052                     ?_I2C_Master_Init:
  1135  0052                     I2C_Master_Init@c:	
  1136                           ; 1 bytes @ 0xD
  1137                           
  1138                           
  1139                           ; 4 bytes @ 0xD
  1140  0052                     	ds	4
  1141  0056                     ??_main:
  1142                           
  1143                           ; 1 bytes @ 0x11
  1144  0056                     	ds	16
  1145                           
  1146                           	psect	maintext
  1147  002C                     __pmaintext:	
  1148 ;;
  1149 ;;Main: autosize = 0, tempsize = 16, incstack = 0, save=0
  1150 ;;
  1151 ;; *************** function _main *****************
  1152 ;; Defined at:
  1153 ;;		line 63 in file "MAIN.c"
  1154 ;; Parameters:    Size  Location     Type
  1155 ;;		None
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;		None
  1158 ;; Return value:  Size  Location     Type
  1159 ;;                  1    wreg      void 
  1160 ;; Registers used:
  1161 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1162 ;; Tracked objects:
  1163 ;;		On entry : B00/0
  1164 ;;		On exit  : 0/0
  1165 ;;		Unchanged: 0/0
  1166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1167 ;;      Params:         0       0       0       0       0
  1168 ;;      Locals:         0       0       0       0       0
  1169 ;;      Temps:          0      16       0       0       0
  1170 ;;      Totals:         0      16       0       0       0
  1171 ;;Total ram usage:       16 bytes
  1172 ;; Hardware stack levels required when called:    4
  1173 ;; This function calls:
  1174 ;;		_LCD_Cadena
  1175 ;;		_LCD_XY
  1176 ;;		_USART_Rx
  1177 ;;		_USART_Tx
  1178 ;;		___awdiv
  1179 ;;		___awmod
  1180 ;;		___bmul
  1181 ;;		___wmul
  1182 ;;		_read_rtc
  1183 ;;		_setup
  1184 ;;		_valores
  1185 ;;		_valores2
  1186 ;; This function is called by:
  1187 ;;		Startup code after reset
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191                           
  1192                           ;psect for function _main
  1193  002C                     _main:
  1194  002C                     l2476:	
  1195                           ;incstack = 0
  1196                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1197                           
  1198                           
  1199                           ;MAIN.c: 65:     setup();
  1200  002C  120A  158A  2651  120A  118A  	fcall	_setup
  1201  0031                     l2478:
  1202                           
  1203                           ;MAIN.c: 68:         if(ADCON0bits.GO == 0){
  1204  0031  1283               	bcf	3,5	;RP0=0, select bank0
  1205  0032  1303               	bcf	3,6	;RP1=0, select bank0
  1206  0033  189F               	btfsc	31,1	;volatile
  1207  0034  2836               	goto	u1421
  1208  0035  2837               	goto	u1420
  1209  0036                     u1421:
  1210  0036  2866               	goto	l2496
  1211  0037                     u1420:
  1212  0037                     l2480:
  1213                           
  1214                           ;MAIN.c: 69:             if (ADCON0bits.CHS == 12){
  1215  0037  0C1F               	rrf	31,w	;volatile
  1216  0038  00D6               	movwf	??_main
  1217  0039  0C56               	rrf	??_main,w
  1218  003A  390F               	andlw	15
  1219  003B  3A0C               	xorlw	12
  1220  003C  1D03               	skipz
  1221  003D  283F               	goto	u1431
  1222  003E  2840               	goto	u1430
  1223  003F                     u1431:
  1224  003F  2849               	goto	l2486
  1225  0040                     u1430:
  1226  0040                     l2482:
  1227                           
  1228                           ;MAIN.c: 70:                 foto1 = ADRESH;
  1229  0040  081E               	movf	30,w	;volatile
  1230  0041  00D6               	movwf	??_main
  1231  0042  0856               	movf	??_main,w
  1232  0043  00C4               	movwf	_foto1
  1233  0044                     l2484:
  1234                           
  1235                           ;MAIN.c: 71:                 ADCON0bits.CHS = 10;
  1236  0044  081F               	movf	31,w	;volatile
  1237  0045  39C3               	andlw	-61
  1238  0046  3828               	iorlw	40
  1239  0047  009F               	movwf	31	;volatile
  1240                           
  1241                           ;MAIN.c: 74:             } else if (ADCON0bits.CHS == 10){
  1242  0048  285C               	goto	l2492
  1243  0049                     l2486:
  1244  0049  0C1F               	rrf	31,w	;volatile
  1245  004A  00D6               	movwf	??_main
  1246  004B  0C56               	rrf	??_main,w
  1247  004C  390F               	andlw	15
  1248  004D  3A0A               	xorlw	10
  1249  004E  1D03               	skipz
  1250  004F  2851               	goto	u1441
  1251  0050  2852               	goto	u1440
  1252  0051                     u1441:
  1253  0051  285C               	goto	l2492
  1254  0052                     u1440:
  1255  0052                     l2488:
  1256                           
  1257                           ;MAIN.c: 75:                 PORTA = ADRESH;
  1258  0052  081E               	movf	30,w	;volatile
  1259  0053  0085               	movwf	5	;volatile
  1260                           
  1261                           ;MAIN.c: 76:                 foto2 = ADRESH;
  1262  0054  081E               	movf	30,w	;volatile
  1263  0055  00D6               	movwf	??_main
  1264  0056  0856               	movf	??_main,w
  1265  0057  00C3               	movwf	_foto2
  1266  0058                     l2490:
  1267                           
  1268                           ;MAIN.c: 77:                 ADCON0bits.CHS = 12;
  1269  0058  081F               	movf	31,w	;volatile
  1270  0059  39C3               	andlw	-61
  1271  005A  3830               	iorlw	48
  1272  005B  009F               	movwf	31	;volatile
  1273  005C                     l2492:
  1274                           
  1275                           ;MAIN.c: 80:             _delay((unsigned long)((50)*(8000000/4000000.0)));
  1276  005C  3020               	movlw	32
  1277  005D  1283               	bcf	3,5	;RP0=0, select bank0
  1278  005E  1303               	bcf	3,6	;RP1=0, select bank0
  1279  005F  00D6               	movwf	??_main
  1280  0060                     u1577:
  1281  0060  0BD6               	decfsz	??_main,f
  1282  0061  2860               	goto	u1577
  1283  0062  0000               	nop
  1284  0063                     l2494:
  1285                           
  1286                           ;MAIN.c: 81:             ADCON0bits.GO = 1;
  1287  0063  1283               	bcf	3,5	;RP0=0, select bank0
  1288  0064  1303               	bcf	3,6	;RP1=0, select bank0
  1289  0065  149F               	bsf	31,1	;volatile
  1290  0066                     l2496:
  1291                           
  1292                           ;MAIN.c: 85:         decmil1 = foto1/10000;
  1293  0066  3010               	movlw	16
  1294  0067  00C7               	movwf	___awdiv@divisor
  1295  0068  3027               	movlw	39
  1296  0069  00C8               	movwf	___awdiv@divisor+1
  1297  006A  0844               	movf	_foto1,w
  1298  006B  00D6               	movwf	??_main
  1299  006C  01D7               	clrf	??_main+1
  1300  006D  0856               	movf	??_main,w
  1301  006E  00C9               	movwf	___awdiv@dividend
  1302  006F  0857               	movf	??_main+1,w
  1303  0070  00CA               	movwf	___awdiv@dividend+1
  1304  0071  120A  158A  271D  120A  118A  	fcall	___awdiv
  1305  0076  1283               	bcf	3,5	;RP0=0, select bank0
  1306  0077  1303               	bcf	3,6	;RP1=0, select bank0
  1307  0078  0847               	movf	?___awdiv,w
  1308  0079  00D8               	movwf	??_main+2
  1309  007A  0858               	movf	??_main+2,w
  1310  007B  00FA               	movwf	_decmil1
  1311  007C                     l2498:
  1312                           
  1313                           ;MAIN.c: 86:         mil1 = (foto1 - (decmil1*10000))/1000;
  1314  007C  30E8               	movlw	232
  1315  007D  00C7               	movwf	___awdiv@divisor
  1316  007E  3003               	movlw	3
  1317  007F  00C8               	movwf	___awdiv@divisor+1
  1318  0080  087A               	movf	_decmil1,w
  1319  0081  00D6               	movwf	??_main
  1320  0082  01D7               	clrf	??_main+1
  1321  0083  0856               	movf	??_main,w
  1322  0084  00F3               	movwf	___wmul@multiplier
  1323  0085  0857               	movf	??_main+1,w
  1324  0086  00F4               	movwf	___wmul@multiplier+1
  1325  0087  30F0               	movlw	240
  1326  0088  00F5               	movwf	___wmul@multiplicand
  1327  0089  30D8               	movlw	216
  1328  008A  00F6               	movwf	___wmul@multiplicand+1
  1329  008B  120A  158A  243E  120A  118A  	fcall	___wmul
  1330  0090  1283               	bcf	3,5	;RP0=0, select bank0
  1331  0091  1303               	bcf	3,6	;RP1=0, select bank0
  1332  0092  0844               	movf	_foto1,w
  1333  0093  0773               	addwf	?___wmul,w
  1334  0094  00C9               	movwf	___awdiv@dividend
  1335  0095  0874               	movf	?___wmul+1,w
  1336  0096  1803               	skipnc
  1337  0097  0A74               	incf	?___wmul+1,w
  1338  0098  00CA               	movwf	___awdiv@dividend+1
  1339  0099  120A  158A  271D  120A  118A  	fcall	___awdiv
  1340  009E  1283               	bcf	3,5	;RP0=0, select bank0
  1341  009F  1303               	bcf	3,6	;RP1=0, select bank0
  1342  00A0  0847               	movf	?___awdiv,w
  1343  00A1  00D8               	movwf	??_main+2
  1344  00A2  0858               	movf	??_main+2,w
  1345  00A3  00F9               	movwf	_mil1
  1346  00A4                     l2500:
  1347                           
  1348                           ;MAIN.c: 87:         cen1 = (foto1 - (decmil1*10000) - (mil1*1000))/100;
  1349  00A4  3064               	movlw	100
  1350  00A5  00C7               	movwf	___awdiv@divisor
  1351  00A6  3000               	movlw	0
  1352  00A7  00C8               	movwf	___awdiv@divisor+1
  1353  00A8  087A               	movf	_decmil1,w
  1354  00A9  00D6               	movwf	??_main
  1355  00AA  01D7               	clrf	??_main+1
  1356  00AB  0856               	movf	??_main,w
  1357  00AC  00F3               	movwf	___wmul@multiplier
  1358  00AD  0857               	movf	??_main+1,w
  1359  00AE  00F4               	movwf	___wmul@multiplier+1
  1360  00AF  30F0               	movlw	240
  1361  00B0  00F5               	movwf	___wmul@multiplicand
  1362  00B1  30D8               	movlw	216
  1363  00B2  00F6               	movwf	___wmul@multiplicand+1
  1364  00B3  120A  158A  243E  120A  118A  	fcall	___wmul
  1365  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  1366  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  1367  00BA  0844               	movf	_foto1,w
  1368  00BB  0773               	addwf	?___wmul,w
  1369  00BC  00D8               	movwf	??_main+2
  1370  00BD  0874               	movf	?___wmul+1,w
  1371  00BE  1803               	skipnc
  1372  00BF  0A74               	incf	?___wmul+1,w
  1373  00C0  00D9               	movwf	??_main+3
  1374  00C1  0879               	movf	_mil1,w
  1375  00C2  00DA               	movwf	??_main+4
  1376  00C3  01DB               	clrf	??_main+5
  1377  00C4  085A               	movf	??_main+4,w
  1378  00C5  00F3               	movwf	___wmul@multiplier
  1379  00C6  085B               	movf	??_main+5,w
  1380  00C7  00F4               	movwf	___wmul@multiplier+1
  1381  00C8  3018               	movlw	24
  1382  00C9  00F5               	movwf	___wmul@multiplicand
  1383  00CA  30FC               	movlw	252
  1384  00CB  00F6               	movwf	___wmul@multiplicand+1
  1385  00CC  120A  158A  243E  120A  118A  	fcall	___wmul
  1386  00D1  0873               	movf	?___wmul,w
  1387  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  1388  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  1389  00D4  0758               	addwf	??_main+2,w
  1390  00D5  00C9               	movwf	___awdiv@dividend
  1391  00D6  0874               	movf	?___wmul+1,w
  1392  00D7  1803               	skipnc
  1393  00D8  0A74               	incf	?___wmul+1,w
  1394  00D9  0759               	addwf	??_main+3,w
  1395  00DA  00CA               	movwf	___awdiv@dividend+1
  1396  00DB  120A  158A  271D  120A  118A  	fcall	___awdiv
  1397  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1398  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1399  00E2  0847               	movf	?___awdiv,w
  1400  00E3  00DC               	movwf	??_main+6
  1401  00E4  085C               	movf	??_main+6,w
  1402  00E5  00BF               	movwf	_cen1
  1403  00E6                     l2502:
  1404                           
  1405                           ;MAIN.c: 88:         dec1 = ((foto1 - (decmil1*10000) - (mil1*1000)-(cen1*100)) / 10);
  1406  00E6  300A               	movlw	10
  1407  00E7  00C7               	movwf	___awdiv@divisor
  1408  00E8  3000               	movlw	0
  1409  00E9  00C8               	movwf	___awdiv@divisor+1
  1410  00EA  087A               	movf	_decmil1,w
  1411  00EB  00D6               	movwf	??_main
  1412  00EC  01D7               	clrf	??_main+1
  1413  00ED  0856               	movf	??_main,w
  1414  00EE  00F3               	movwf	___wmul@multiplier
  1415  00EF  0857               	movf	??_main+1,w
  1416  00F0  00F4               	movwf	___wmul@multiplier+1
  1417  00F1  30F0               	movlw	240
  1418  00F2  00F5               	movwf	___wmul@multiplicand
  1419  00F3  30D8               	movlw	216
  1420  00F4  00F6               	movwf	___wmul@multiplicand+1
  1421  00F5  120A  158A  243E  120A  118A  	fcall	___wmul
  1422  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  1423  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  1424  00FC  0844               	movf	_foto1,w
  1425  00FD  0773               	addwf	?___wmul,w
  1426  00FE  00D8               	movwf	??_main+2
  1427  00FF  0874               	movf	?___wmul+1,w
  1428  0100  1803               	skipnc
  1429  0101  0A74               	incf	?___wmul+1,w
  1430  0102  00D9               	movwf	??_main+3
  1431  0103  0879               	movf	_mil1,w
  1432  0104  00DA               	movwf	??_main+4
  1433  0105  01DB               	clrf	??_main+5
  1434  0106  085A               	movf	??_main+4,w
  1435  0107  00F3               	movwf	___wmul@multiplier
  1436  0108  085B               	movf	??_main+5,w
  1437  0109  00F4               	movwf	___wmul@multiplier+1
  1438  010A  3018               	movlw	24
  1439  010B  00F5               	movwf	___wmul@multiplicand
  1440  010C  30FC               	movlw	252
  1441  010D  00F6               	movwf	___wmul@multiplicand+1
  1442  010E  120A  158A  243E  120A  118A  	fcall	___wmul
  1443  0113  0873               	movf	?___wmul,w
  1444  0114  1283               	bcf	3,5	;RP0=0, select bank0
  1445  0115  1303               	bcf	3,6	;RP1=0, select bank0
  1446  0116  0758               	addwf	??_main+2,w
  1447  0117  00DC               	movwf	??_main+6
  1448  0118  0874               	movf	?___wmul+1,w
  1449  0119  1803               	skipnc
  1450  011A  0A74               	incf	?___wmul+1,w
  1451  011B  0759               	addwf	??_main+3,w
  1452  011C  00DD               	movwf	??_main+7
  1453  011D  083F               	movf	_cen1,w
  1454  011E  00DE               	movwf	??_main+8
  1455  011F  01DF               	clrf	??_main+9
  1456  0120  085E               	movf	??_main+8,w
  1457  0121  00F3               	movwf	___wmul@multiplier
  1458  0122  085F               	movf	??_main+9,w
  1459  0123  00F4               	movwf	___wmul@multiplier+1
  1460  0124  309C               	movlw	156
  1461  0125  00F5               	movwf	___wmul@multiplicand
  1462  0126  30FF               	movlw	255
  1463  0127  00F6               	movwf	___wmul@multiplicand+1
  1464  0128  120A  158A  243E  120A  118A  	fcall	___wmul
  1465  012D  0873               	movf	?___wmul,w
  1466  012E  1283               	bcf	3,5	;RP0=0, select bank0
  1467  012F  1303               	bcf	3,6	;RP1=0, select bank0
  1468  0130  075C               	addwf	??_main+6,w
  1469  0131  00C9               	movwf	___awdiv@dividend
  1470  0132  0874               	movf	?___wmul+1,w
  1471  0133  1803               	skipnc
  1472  0134  0A74               	incf	?___wmul+1,w
  1473  0135  075D               	addwf	??_main+7,w
  1474  0136  00CA               	movwf	___awdiv@dividend+1
  1475  0137  120A  158A  271D  120A  118A  	fcall	___awdiv
  1476  013C  1283               	bcf	3,5	;RP0=0, select bank0
  1477  013D  1303               	bcf	3,6	;RP1=0, select bank0
  1478  013E  0847               	movf	?___awdiv,w
  1479  013F  00E0               	movwf	??_main+10
  1480  0140  0860               	movf	??_main+10,w
  1481  0141  00BE               	movwf	_dec1
  1482  0142                     l2504:
  1483                           
  1484                           ;MAIN.c: 89:         uni1 = ((foto1 - (decmil1*10000) - (mil1*1000)-(cen1*100)) - (dec1*
      +                          10));
  1485  0142  30F0               	movlw	240
  1486  0143  00D6               	movwf	??_main
  1487  0144  0856               	movf	??_main,w
  1488  0145  00F3               	movwf	___bmul@multiplicand
  1489  0146  087A               	movf	_decmil1,w
  1490  0147  120A  158A  237F  120A  118A  	fcall	___bmul
  1491  014C  1283               	bcf	3,5	;RP0=0, select bank0
  1492  014D  1303               	bcf	3,6	;RP1=0, select bank0
  1493  014E  00D7               	movwf	??_main+1
  1494  014F  3018               	movlw	24
  1495  0150  00D8               	movwf	??_main+2
  1496  0151  0858               	movf	??_main+2,w
  1497  0152  00F3               	movwf	___bmul@multiplicand
  1498  0153  0879               	movf	_mil1,w
  1499  0154  120A  158A  237F  120A  118A  	fcall	___bmul
  1500  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1501  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1502  015B  00D9               	movwf	??_main+3
  1503  015C  309C               	movlw	156
  1504  015D  00DA               	movwf	??_main+4
  1505  015E  085A               	movf	??_main+4,w
  1506  015F  00F3               	movwf	___bmul@multiplicand
  1507  0160  083F               	movf	_cen1,w
  1508  0161  120A  158A  237F  120A  118A  	fcall	___bmul
  1509  0166  1283               	bcf	3,5	;RP0=0, select bank0
  1510  0167  1303               	bcf	3,6	;RP1=0, select bank0
  1511  0168  00DB               	movwf	??_main+5
  1512  0169  30F6               	movlw	246
  1513  016A  00DC               	movwf	??_main+6
  1514  016B  085C               	movf	??_main+6,w
  1515  016C  00F3               	movwf	___bmul@multiplicand
  1516  016D  083E               	movf	_dec1,w
  1517  016E  120A  158A  237F  120A  118A  	fcall	___bmul
  1518  0173  1283               	bcf	3,5	;RP0=0, select bank0
  1519  0174  1303               	bcf	3,6	;RP1=0, select bank0
  1520  0175  075B               	addwf	??_main+5,w
  1521  0176  0759               	addwf	??_main+3,w
  1522  0177  0757               	addwf	??_main+1,w
  1523  0178  0744               	addwf	_foto1,w
  1524  0179  00DD               	movwf	??_main+7
  1525  017A  085D               	movf	??_main+7,w
  1526  017B  00BD               	movwf	_uni1
  1527  017C                     l2506:
  1528                           
  1529                           ;MAIN.c: 91:         decmil2 = foto2/10000;
  1530  017C  3010               	movlw	16
  1531  017D  00C7               	movwf	___awdiv@divisor
  1532  017E  3027               	movlw	39
  1533  017F  00C8               	movwf	___awdiv@divisor+1
  1534  0180  0843               	movf	_foto2,w
  1535  0181  00D6               	movwf	??_main
  1536  0182  01D7               	clrf	??_main+1
  1537  0183  0856               	movf	??_main,w
  1538  0184  00C9               	movwf	___awdiv@dividend
  1539  0185  0857               	movf	??_main+1,w
  1540  0186  00CA               	movwf	___awdiv@dividend+1
  1541  0187  120A  158A  271D  120A  118A  	fcall	___awdiv
  1542  018C  1283               	bcf	3,5	;RP0=0, select bank0
  1543  018D  1303               	bcf	3,6	;RP1=0, select bank0
  1544  018E  0847               	movf	?___awdiv,w
  1545  018F  00D8               	movwf	??_main+2
  1546  0190  0858               	movf	??_main+2,w
  1547  0191  00F8               	movwf	_decmil2
  1548  0192                     l2508:
  1549                           
  1550                           ;MAIN.c: 92:         mil2 = (foto2 - (decmil2*10000))/1000;
  1551  0192  30E8               	movlw	232
  1552  0193  00C7               	movwf	___awdiv@divisor
  1553  0194  3003               	movlw	3
  1554  0195  00C8               	movwf	___awdiv@divisor+1
  1555  0196  0878               	movf	_decmil2,w
  1556  0197  00D6               	movwf	??_main
  1557  0198  01D7               	clrf	??_main+1
  1558  0199  0856               	movf	??_main,w
  1559  019A  00F3               	movwf	___wmul@multiplier
  1560  019B  0857               	movf	??_main+1,w
  1561  019C  00F4               	movwf	___wmul@multiplier+1
  1562  019D  30F0               	movlw	240
  1563  019E  00F5               	movwf	___wmul@multiplicand
  1564  019F  30D8               	movlw	216
  1565  01A0  00F6               	movwf	___wmul@multiplicand+1
  1566  01A1  120A  158A  243E  120A  118A  	fcall	___wmul
  1567  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  1568  01A7  1303               	bcf	3,6	;RP1=0, select bank0
  1569  01A8  0843               	movf	_foto2,w
  1570  01A9  0773               	addwf	?___wmul,w
  1571  01AA  00C9               	movwf	___awdiv@dividend
  1572  01AB  0874               	movf	?___wmul+1,w
  1573  01AC  1803               	skipnc
  1574  01AD  0A74               	incf	?___wmul+1,w
  1575  01AE  00CA               	movwf	___awdiv@dividend+1
  1576  01AF  120A  158A  271D  120A  118A  	fcall	___awdiv
  1577  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  1578  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  1579  01B6  0847               	movf	?___awdiv,w
  1580  01B7  00D8               	movwf	??_main+2
  1581  01B8  0858               	movf	??_main+2,w
  1582  01B9  00BC               	movwf	_mil2
  1583  01BA                     l2510:
  1584                           
  1585                           ;MAIN.c: 93:         cen2 = (foto2 - (decmil2*10000) - (mil2*1000))/100;
  1586  01BA  3064               	movlw	100
  1587  01BB  00C7               	movwf	___awdiv@divisor
  1588  01BC  3000               	movlw	0
  1589  01BD  00C8               	movwf	___awdiv@divisor+1
  1590  01BE  0878               	movf	_decmil2,w
  1591  01BF  00D6               	movwf	??_main
  1592  01C0  01D7               	clrf	??_main+1
  1593  01C1  0856               	movf	??_main,w
  1594  01C2  00F3               	movwf	___wmul@multiplier
  1595  01C3  0857               	movf	??_main+1,w
  1596  01C4  00F4               	movwf	___wmul@multiplier+1
  1597  01C5  30F0               	movlw	240
  1598  01C6  00F5               	movwf	___wmul@multiplicand
  1599  01C7  30D8               	movlw	216
  1600  01C8  00F6               	movwf	___wmul@multiplicand+1
  1601  01C9  120A  158A  243E  120A  118A  	fcall	___wmul
  1602  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  1603  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  1604  01D0  0843               	movf	_foto2,w
  1605  01D1  0773               	addwf	?___wmul,w
  1606  01D2  00D8               	movwf	??_main+2
  1607  01D3  0874               	movf	?___wmul+1,w
  1608  01D4  1803               	skipnc
  1609  01D5  0A74               	incf	?___wmul+1,w
  1610  01D6  00D9               	movwf	??_main+3
  1611  01D7  083C               	movf	_mil2,w
  1612  01D8  00DA               	movwf	??_main+4
  1613  01D9  01DB               	clrf	??_main+5
  1614  01DA  085A               	movf	??_main+4,w
  1615  01DB  00F3               	movwf	___wmul@multiplier
  1616  01DC  085B               	movf	??_main+5,w
  1617  01DD  00F4               	movwf	___wmul@multiplier+1
  1618  01DE  3018               	movlw	24
  1619  01DF  00F5               	movwf	___wmul@multiplicand
  1620  01E0  30FC               	movlw	252
  1621  01E1  00F6               	movwf	___wmul@multiplicand+1
  1622  01E2  120A  158A  243E  120A  118A  	fcall	___wmul
  1623  01E7  0873               	movf	?___wmul,w
  1624  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  1625  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  1626  01EA  0758               	addwf	??_main+2,w
  1627  01EB  00C9               	movwf	___awdiv@dividend
  1628  01EC  0874               	movf	?___wmul+1,w
  1629  01ED  1803               	skipnc
  1630  01EE  0A74               	incf	?___wmul+1,w
  1631  01EF  0759               	addwf	??_main+3,w
  1632  01F0  00CA               	movwf	___awdiv@dividend+1
  1633  01F1  120A  158A  271D  120A  118A  	fcall	___awdiv
  1634  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  1635  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  1636  01F8  0847               	movf	?___awdiv,w
  1637  01F9  00DC               	movwf	??_main+6
  1638  01FA  085C               	movf	??_main+6,w
  1639  01FB  00BB               	movwf	_cen2
  1640  01FC                     l2512:
  1641                           
  1642                           ;MAIN.c: 94:         dec2 = ((foto2 - (decmil2*10000) - (mil2*1000)-(cen2*100)) / 10);
  1643  01FC  300A               	movlw	10
  1644  01FD  00C7               	movwf	___awdiv@divisor
  1645  01FE  3000               	movlw	0
  1646  01FF  00C8               	movwf	___awdiv@divisor+1
  1647  0200  0878               	movf	_decmil2,w
  1648  0201  00D6               	movwf	??_main
  1649  0202  01D7               	clrf	??_main+1
  1650  0203  0856               	movf	??_main,w
  1651  0204  00F3               	movwf	___wmul@multiplier
  1652  0205  0857               	movf	??_main+1,w
  1653  0206  00F4               	movwf	___wmul@multiplier+1
  1654  0207  30F0               	movlw	240
  1655  0208  00F5               	movwf	___wmul@multiplicand
  1656  0209  30D8               	movlw	216
  1657  020A  00F6               	movwf	___wmul@multiplicand+1
  1658  020B  120A  158A  243E  120A  118A  	fcall	___wmul
  1659  0210  1283               	bcf	3,5	;RP0=0, select bank0
  1660  0211  1303               	bcf	3,6	;RP1=0, select bank0
  1661  0212  0843               	movf	_foto2,w
  1662  0213  0773               	addwf	?___wmul,w
  1663  0214  00D8               	movwf	??_main+2
  1664  0215  0874               	movf	?___wmul+1,w
  1665  0216  1803               	skipnc
  1666  0217  0A74               	incf	?___wmul+1,w
  1667  0218  00D9               	movwf	??_main+3
  1668  0219  083C               	movf	_mil2,w
  1669  021A  00DA               	movwf	??_main+4
  1670  021B  01DB               	clrf	??_main+5
  1671  021C  085A               	movf	??_main+4,w
  1672  021D  00F3               	movwf	___wmul@multiplier
  1673  021E  085B               	movf	??_main+5,w
  1674  021F  00F4               	movwf	___wmul@multiplier+1
  1675  0220  3018               	movlw	24
  1676  0221  00F5               	movwf	___wmul@multiplicand
  1677  0222  30FC               	movlw	252
  1678  0223  00F6               	movwf	___wmul@multiplicand+1
  1679  0224  120A  158A  243E  120A  118A  	fcall	___wmul
  1680  0229  0873               	movf	?___wmul,w
  1681  022A  1283               	bcf	3,5	;RP0=0, select bank0
  1682  022B  1303               	bcf	3,6	;RP1=0, select bank0
  1683  022C  0758               	addwf	??_main+2,w
  1684  022D  00DC               	movwf	??_main+6
  1685  022E  0874               	movf	?___wmul+1,w
  1686  022F  1803               	skipnc
  1687  0230  0A74               	incf	?___wmul+1,w
  1688  0231  0759               	addwf	??_main+3,w
  1689  0232  00DD               	movwf	??_main+7
  1690  0233  083B               	movf	_cen2,w
  1691  0234  00DE               	movwf	??_main+8
  1692  0235  01DF               	clrf	??_main+9
  1693  0236  085E               	movf	??_main+8,w
  1694  0237  00F3               	movwf	___wmul@multiplier
  1695  0238  085F               	movf	??_main+9,w
  1696  0239  00F4               	movwf	___wmul@multiplier+1
  1697  023A  309C               	movlw	156
  1698  023B  00F5               	movwf	___wmul@multiplicand
  1699  023C  30FF               	movlw	255
  1700  023D  00F6               	movwf	___wmul@multiplicand+1
  1701  023E  120A  158A  243E  120A  118A  	fcall	___wmul
  1702  0243  0873               	movf	?___wmul,w
  1703  0244  1283               	bcf	3,5	;RP0=0, select bank0
  1704  0245  1303               	bcf	3,6	;RP1=0, select bank0
  1705  0246  075C               	addwf	??_main+6,w
  1706  0247  00C9               	movwf	___awdiv@dividend
  1707  0248  0874               	movf	?___wmul+1,w
  1708  0249  1803               	skipnc
  1709  024A  0A74               	incf	?___wmul+1,w
  1710  024B  075D               	addwf	??_main+7,w
  1711  024C  00CA               	movwf	___awdiv@dividend+1
  1712  024D  120A  158A  271D  120A  118A  	fcall	___awdiv
  1713  0252  1283               	bcf	3,5	;RP0=0, select bank0
  1714  0253  1303               	bcf	3,6	;RP1=0, select bank0
  1715  0254  0847               	movf	?___awdiv,w
  1716  0255  00E0               	movwf	??_main+10
  1717  0256  0860               	movf	??_main+10,w
  1718  0257  00BA               	movwf	_dec2
  1719  0258                     l2514:
  1720                           
  1721                           ;MAIN.c: 95:         uni2 = ((foto2 - (decmil2*10000) - (mil2*1000)- (cen2*100)) - (dec2
      +                          *10));
  1722  0258  30F0               	movlw	240
  1723  0259  00D6               	movwf	??_main
  1724  025A  0856               	movf	??_main,w
  1725  025B  00F3               	movwf	___bmul@multiplicand
  1726  025C  0878               	movf	_decmil2,w
  1727  025D  120A  158A  237F  120A  118A  	fcall	___bmul
  1728  0262  1283               	bcf	3,5	;RP0=0, select bank0
  1729  0263  1303               	bcf	3,6	;RP1=0, select bank0
  1730  0264  00D7               	movwf	??_main+1
  1731  0265  3018               	movlw	24
  1732  0266  00D8               	movwf	??_main+2
  1733  0267  0858               	movf	??_main+2,w
  1734  0268  00F3               	movwf	___bmul@multiplicand
  1735  0269  083C               	movf	_mil2,w
  1736  026A  120A  158A  237F  120A  118A  	fcall	___bmul
  1737  026F  1283               	bcf	3,5	;RP0=0, select bank0
  1738  0270  1303               	bcf	3,6	;RP1=0, select bank0
  1739  0271  00D9               	movwf	??_main+3
  1740  0272  309C               	movlw	156
  1741  0273  00DA               	movwf	??_main+4
  1742  0274  085A               	movf	??_main+4,w
  1743  0275  00F3               	movwf	___bmul@multiplicand
  1744  0276  083B               	movf	_cen2,w
  1745  0277  120A  158A  237F  120A  118A  	fcall	___bmul
  1746  027C  1283               	bcf	3,5	;RP0=0, select bank0
  1747  027D  1303               	bcf	3,6	;RP1=0, select bank0
  1748  027E  00DB               	movwf	??_main+5
  1749  027F  30F6               	movlw	246
  1750  0280  00DC               	movwf	??_main+6
  1751  0281  085C               	movf	??_main+6,w
  1752  0282  00F3               	movwf	___bmul@multiplicand
  1753  0283  083A               	movf	_dec2,w
  1754  0284  120A  158A  237F  120A  118A  	fcall	___bmul
  1755  0289  1283               	bcf	3,5	;RP0=0, select bank0
  1756  028A  1303               	bcf	3,6	;RP1=0, select bank0
  1757  028B  075B               	addwf	??_main+5,w
  1758  028C  0759               	addwf	??_main+3,w
  1759  028D  0757               	addwf	??_main+1,w
  1760  028E  0743               	addwf	_foto2,w
  1761  028F  00DD               	movwf	??_main+7
  1762  0290  085D               	movf	??_main+7,w
  1763  0291  00B9               	movwf	_uni2
  1764  0292                     l2516:
  1765                           
  1766                           ;MAIN.c: 97:         seg = read_rtc(0x00);
  1767  0292  3000               	movlw	0
  1768  0293  00C7               	movwf	read_rtc@address
  1769  0294  00C8               	movwf	read_rtc@address+1
  1770  0295  120A  158A  25ED  120A  118A  	fcall	_read_rtc
  1771  029A  1283               	bcf	3,5	;RP0=0, select bank0
  1772  029B  1303               	bcf	3,6	;RP1=0, select bank0
  1773  029C  0848               	movf	?_read_rtc+1,w
  1774  029D  00B3               	movwf	_seg+1
  1775  029E  0847               	movf	?_read_rtc,w
  1776  029F  00B2               	movwf	_seg
  1777  02A0                     l2518:
  1778                           
  1779                           ;MAIN.c: 98:         min = read_rtc(0x01);
  1780  02A0  3001               	movlw	1
  1781  02A1  00C7               	movwf	read_rtc@address
  1782  02A2  3000               	movlw	0
  1783  02A3  00C8               	movwf	read_rtc@address+1
  1784  02A4  120A  158A  25ED  120A  118A  	fcall	_read_rtc
  1785  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  1786  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  1787  02AB  0848               	movf	?_read_rtc+1,w
  1788  02AC  00B1               	movwf	_min+1
  1789  02AD  0847               	movf	?_read_rtc,w
  1790  02AE  00B0               	movwf	_min
  1791  02AF                     l2520:
  1792                           
  1793                           ;MAIN.c: 99:         hora = read_rtc(0x02);
  1794  02AF  3002               	movlw	2
  1795  02B0  00C7               	movwf	read_rtc@address
  1796  02B1  3000               	movlw	0
  1797  02B2  00C8               	movwf	read_rtc@address+1
  1798  02B3  120A  158A  25ED  120A  118A  	fcall	_read_rtc
  1799  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  1800  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  1801  02BA  0848               	movf	?_read_rtc+1,w
  1802  02BB  00AD               	movwf	_hora+1
  1803  02BC  0847               	movf	?_read_rtc,w
  1804  02BD  00AC               	movwf	_hora
  1805  02BE                     l2522:
  1806                           
  1807                           ;MAIN.c: 100:         dia = read_rtc(0x04);
  1808  02BE  3004               	movlw	4
  1809  02BF  00C7               	movwf	read_rtc@address
  1810  02C0  3000               	movlw	0
  1811  02C1  00C8               	movwf	read_rtc@address+1
  1812  02C2  120A  158A  25ED  120A  118A  	fcall	_read_rtc
  1813  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  1814  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  1815  02C9  0848               	movf	?_read_rtc+1,w
  1816  02CA  00AF               	movwf	_dia+1
  1817  02CB  0847               	movf	?_read_rtc,w
  1818  02CC  00AE               	movwf	_dia
  1819  02CD                     l2524:
  1820                           
  1821                           ;MAIN.c: 101:         mes = read_rtc(0x05);
  1822  02CD  3005               	movlw	5
  1823  02CE  00C7               	movwf	read_rtc@address
  1824  02CF  3000               	movlw	0
  1825  02D0  00C8               	movwf	read_rtc@address+1
  1826  02D1  120A  158A  25ED  120A  118A  	fcall	_read_rtc
  1827  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  1828  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  1829  02D8  0848               	movf	?_read_rtc+1,w
  1830  02D9  00A9               	movwf	_mes+1
  1831  02DA  0847               	movf	?_read_rtc,w
  1832  02DB  00A8               	movwf	_mes
  1833  02DC                     l2526:
  1834                           
  1835                           ;MAIN.c: 102:         year = read_rtc(0x06);
  1836  02DC  3006               	movlw	6
  1837  02DD  00C7               	movwf	read_rtc@address
  1838  02DE  3000               	movlw	0
  1839  02DF  00C8               	movwf	read_rtc@address+1
  1840  02E0  120A  158A  25ED  120A  118A  	fcall	_read_rtc
  1841  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  1842  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  1843  02E7  0848               	movf	?_read_rtc+1,w
  1844  02E8  00AB               	movwf	_year+1
  1845  02E9  0847               	movf	?_read_rtc,w
  1846  02EA  00AA               	movwf	_year
  1847  02EB                     l2528:
  1848                           
  1849                           ;MAIN.c: 104:         seg = (seg >>4)*10 + (seg & 0x0f);
  1850  02EB  300F               	movlw	15
  1851  02EC  0532               	andwf	_seg,w
  1852  02ED  00D6               	movwf	??_main
  1853  02EE  3000               	movlw	0
  1854  02EF  0533               	andwf	_seg+1,w
  1855  02F0  00D7               	movwf	??_main+1
  1856  02F1  0E32               	swapf	_seg,w
  1857  02F2  390F               	andlw	15
  1858  02F3  00F3               	movwf	___wmul@multiplier
  1859  02F4  0E33               	swapf	_seg+1,w
  1860  02F5  39F0               	andlw	240
  1861  02F6  04F3               	iorwf	___wmul@multiplier,f
  1862  02F7  0E33               	swapf	_seg+1,w
  1863  02F8  390F               	andlw	15
  1864  02F9  00F4               	movwf	___wmul@multiplier+1
  1865  02FA  30F0               	movlw	240
  1866  02FB  1DF4               	btfss	___wmul@multiplier+1,3
  1867  02FC  3000               	movlw	0
  1868  02FD  04F4               	iorwf	___wmul@multiplier+1,f
  1869  02FE  300A               	movlw	10
  1870  02FF  00F5               	movwf	___wmul@multiplicand
  1871  0300  3000               	movlw	0
  1872  0301  00F6               	movwf	___wmul@multiplicand+1
  1873  0302  120A  158A  243E  120A  118A  	fcall	___wmul
  1874  0307  1283               	bcf	3,5	;RP0=0, select bank0
  1875  0308  1303               	bcf	3,6	;RP1=0, select bank0
  1876  0309  0856               	movf	??_main,w
  1877  030A  0773               	addwf	?___wmul,w
  1878  030B  00B2               	movwf	_seg
  1879  030C  0857               	movf	??_main+1,w
  1880  030D  1803               	skipnc
  1881  030E  0A57               	incf	??_main+1,w
  1882  030F  0774               	addwf	?___wmul+1,w
  1883  0310  00B3               	movwf	_seg+1
  1884  0311                     l2530:
  1885                           
  1886                           ;MAIN.c: 105:         min = (min >>4)*10 +(min & 0x0f);
  1887  0311  300F               	movlw	15
  1888  0312  0530               	andwf	_min,w
  1889  0313  00D6               	movwf	??_main
  1890  0314  3000               	movlw	0
  1891  0315  0531               	andwf	_min+1,w
  1892  0316  00D7               	movwf	??_main+1
  1893  0317  0E30               	swapf	_min,w
  1894  0318  390F               	andlw	15
  1895  0319  00F3               	movwf	___wmul@multiplier
  1896  031A  0E31               	swapf	_min+1,w
  1897  031B  39F0               	andlw	240
  1898  031C  04F3               	iorwf	___wmul@multiplier,f
  1899  031D  0E31               	swapf	_min+1,w
  1900  031E  390F               	andlw	15
  1901  031F  00F4               	movwf	___wmul@multiplier+1
  1902  0320  30F0               	movlw	240
  1903  0321  1DF4               	btfss	___wmul@multiplier+1,3
  1904  0322  3000               	movlw	0
  1905  0323  04F4               	iorwf	___wmul@multiplier+1,f
  1906  0324  300A               	movlw	10
  1907  0325  00F5               	movwf	___wmul@multiplicand
  1908  0326  3000               	movlw	0
  1909  0327  00F6               	movwf	___wmul@multiplicand+1
  1910  0328  120A  158A  243E  120A  118A  	fcall	___wmul
  1911  032D  1283               	bcf	3,5	;RP0=0, select bank0
  1912  032E  1303               	bcf	3,6	;RP1=0, select bank0
  1913  032F  0856               	movf	??_main,w
  1914  0330  0773               	addwf	?___wmul,w
  1915  0331  00B0               	movwf	_min
  1916  0332  0857               	movf	??_main+1,w
  1917  0333  1803               	skipnc
  1918  0334  0A57               	incf	??_main+1,w
  1919  0335  0774               	addwf	?___wmul+1,w
  1920  0336  00B1               	movwf	_min+1
  1921  0337                     l2532:
  1922                           
  1923                           ;MAIN.c: 106:         hora = (hora>>4)*10 + (hora & 0x0f);
  1924  0337  300F               	movlw	15
  1925  0338  052C               	andwf	_hora,w
  1926  0339  00D6               	movwf	??_main
  1927  033A  3000               	movlw	0
  1928  033B  052D               	andwf	_hora+1,w
  1929  033C  00D7               	movwf	??_main+1
  1930  033D  0E2C               	swapf	_hora,w
  1931  033E  390F               	andlw	15
  1932  033F  00F3               	movwf	___wmul@multiplier
  1933  0340  0E2D               	swapf	_hora+1,w
  1934  0341  39F0               	andlw	240
  1935  0342  04F3               	iorwf	___wmul@multiplier,f
  1936  0343  0E2D               	swapf	_hora+1,w
  1937  0344  390F               	andlw	15
  1938  0345  00F4               	movwf	___wmul@multiplier+1
  1939  0346  30F0               	movlw	240
  1940  0347  1DF4               	btfss	___wmul@multiplier+1,3
  1941  0348  3000               	movlw	0
  1942  0349  04F4               	iorwf	___wmul@multiplier+1,f
  1943  034A  300A               	movlw	10
  1944  034B  00F5               	movwf	___wmul@multiplicand
  1945  034C  3000               	movlw	0
  1946  034D  00F6               	movwf	___wmul@multiplicand+1
  1947  034E  120A  158A  243E  120A  118A  	fcall	___wmul
  1948  0353  1283               	bcf	3,5	;RP0=0, select bank0
  1949  0354  1303               	bcf	3,6	;RP1=0, select bank0
  1950  0355  0856               	movf	??_main,w
  1951  0356  0773               	addwf	?___wmul,w
  1952  0357  00AC               	movwf	_hora
  1953  0358  0857               	movf	??_main+1,w
  1954  0359  1803               	skipnc
  1955  035A  0A57               	incf	??_main+1,w
  1956  035B  0774               	addwf	?___wmul+1,w
  1957  035C  00AD               	movwf	_hora+1
  1958  035D                     l2534:
  1959                           
  1960                           ;MAIN.c: 107:         dia = (dia>>4)*10 + (dia & 0x0f);
  1961  035D  300F               	movlw	15
  1962  035E  052E               	andwf	_dia,w
  1963  035F  00D6               	movwf	??_main
  1964  0360  3000               	movlw	0
  1965  0361  052F               	andwf	_dia+1,w
  1966  0362  00D7               	movwf	??_main+1
  1967  0363  0E2E               	swapf	_dia,w
  1968  0364  390F               	andlw	15
  1969  0365  00F3               	movwf	___wmul@multiplier
  1970  0366  0E2F               	swapf	_dia+1,w
  1971  0367  39F0               	andlw	240
  1972  0368  04F3               	iorwf	___wmul@multiplier,f
  1973  0369  0E2F               	swapf	_dia+1,w
  1974  036A  390F               	andlw	15
  1975  036B  00F4               	movwf	___wmul@multiplier+1
  1976  036C  30F0               	movlw	240
  1977  036D  1DF4               	btfss	___wmul@multiplier+1,3
  1978  036E  3000               	movlw	0
  1979  036F  04F4               	iorwf	___wmul@multiplier+1,f
  1980  0370  300A               	movlw	10
  1981  0371  00F5               	movwf	___wmul@multiplicand
  1982  0372  3000               	movlw	0
  1983  0373  00F6               	movwf	___wmul@multiplicand+1
  1984  0374  120A  158A  243E  120A  118A  	fcall	___wmul
  1985  0379  1283               	bcf	3,5	;RP0=0, select bank0
  1986  037A  1303               	bcf	3,6	;RP1=0, select bank0
  1987  037B  0856               	movf	??_main,w
  1988  037C  0773               	addwf	?___wmul,w
  1989  037D  00AE               	movwf	_dia
  1990  037E  0857               	movf	??_main+1,w
  1991  037F  1803               	skipnc
  1992  0380  0A57               	incf	??_main+1,w
  1993  0381  0774               	addwf	?___wmul+1,w
  1994  0382  00AF               	movwf	_dia+1
  1995  0383                     l2536:
  1996                           
  1997                           ;MAIN.c: 108:         mes = (mes>>4)*10 + (mes & 0x0f);
  1998  0383  300F               	movlw	15
  1999  0384  0528               	andwf	_mes,w
  2000  0385  00D6               	movwf	??_main
  2001  0386  3000               	movlw	0
  2002  0387  0529               	andwf	_mes+1,w
  2003  0388  00D7               	movwf	??_main+1
  2004  0389  0E28               	swapf	_mes,w
  2005  038A  390F               	andlw	15
  2006  038B  00F3               	movwf	___wmul@multiplier
  2007  038C  0E29               	swapf	_mes+1,w
  2008  038D  39F0               	andlw	240
  2009  038E  04F3               	iorwf	___wmul@multiplier,f
  2010  038F  0E29               	swapf	_mes+1,w
  2011  0390  390F               	andlw	15
  2012  0391  00F4               	movwf	___wmul@multiplier+1
  2013  0392  30F0               	movlw	240
  2014  0393  1DF4               	btfss	___wmul@multiplier+1,3
  2015  0394  3000               	movlw	0
  2016  0395  04F4               	iorwf	___wmul@multiplier+1,f
  2017  0396  300A               	movlw	10
  2018  0397  00F5               	movwf	___wmul@multiplicand
  2019  0398  3000               	movlw	0
  2020  0399  00F6               	movwf	___wmul@multiplicand+1
  2021  039A  120A  158A  243E  120A  118A  	fcall	___wmul
  2022  039F  1283               	bcf	3,5	;RP0=0, select bank0
  2023  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  2024  03A1  0856               	movf	??_main,w
  2025  03A2  0773               	addwf	?___wmul,w
  2026  03A3  00A8               	movwf	_mes
  2027  03A4  0857               	movf	??_main+1,w
  2028  03A5  1803               	skipnc
  2029  03A6  0A57               	incf	??_main+1,w
  2030  03A7  0774               	addwf	?___wmul+1,w
  2031  03A8  00A9               	movwf	_mes+1
  2032  03A9                     l2538:
  2033                           
  2034                           ;MAIN.c: 109:         year=(year >>4)*10 + (year & 0x0f);
  2035  03A9  300F               	movlw	15
  2036  03AA  052A               	andwf	_year,w
  2037  03AB  00D6               	movwf	??_main
  2038  03AC  3000               	movlw	0
  2039  03AD  052B               	andwf	_year+1,w
  2040  03AE  00D7               	movwf	??_main+1
  2041  03AF  0E2A               	swapf	_year,w
  2042  03B0  390F               	andlw	15
  2043  03B1  00F3               	movwf	___wmul@multiplier
  2044  03B2  0E2B               	swapf	_year+1,w
  2045  03B3  39F0               	andlw	240
  2046  03B4  04F3               	iorwf	___wmul@multiplier,f
  2047  03B5  0E2B               	swapf	_year+1,w
  2048  03B6  390F               	andlw	15
  2049  03B7  00F4               	movwf	___wmul@multiplier+1
  2050  03B8  30F0               	movlw	240
  2051  03B9  1DF4               	btfss	___wmul@multiplier+1,3
  2052  03BA  3000               	movlw	0
  2053  03BB  04F4               	iorwf	___wmul@multiplier+1,f
  2054  03BC  300A               	movlw	10
  2055  03BD  00F5               	movwf	___wmul@multiplicand
  2056  03BE  3000               	movlw	0
  2057  03BF  00F6               	movwf	___wmul@multiplicand+1
  2058  03C0  120A  158A  243E  120A  118A  	fcall	___wmul
  2059  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  2060  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  2061  03C7  0856               	movf	??_main,w
  2062  03C8  0773               	addwf	?___wmul,w
  2063  03C9  00AA               	movwf	_year
  2064  03CA  0857               	movf	??_main+1,w
  2065  03CB  1803               	skipnc
  2066  03CC  0A57               	incf	??_main+1,w
  2067  03CD  0774               	addwf	?___wmul+1,w
  2068  03CE  00AB               	movwf	_year+1
  2069  03CF                     l2540:
  2070                           
  2071                           ;MAIN.c: 111:         time[12] = (seg % 10) + 48;
  2072  03CF  300A               	movlw	10
  2073  03D0  00F3               	movwf	___awmod@divisor
  2074  03D1  3000               	movlw	0
  2075  03D2  00F4               	movwf	___awmod@divisor+1
  2076  03D3  0833               	movf	_seg+1,w
  2077  03D4  00F6               	movwf	___awmod@dividend+1
  2078  03D5  0832               	movf	_seg,w
  2079  03D6  00F5               	movwf	___awmod@dividend
  2080  03D7  120A  158A  2592  120A  118A  	fcall	___awmod
  2081  03DC  0873               	movf	?___awmod,w
  2082  03DD  3E30               	addlw	48
  2083  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  2084  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  2085  03E0  00D6               	movwf	??_main
  2086  03E1  0856               	movf	??_main,w
  2087  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  2088  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  2089  03E4  00BC               	movwf	(_time^(0+128)+12)
  2090  03E5                     l2542:
  2091                           
  2092                           ;MAIN.c: 112:         time[11] = (seg/10) + 48;
  2093  03E5  300A               	movlw	10
  2094  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  2095  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  2096  03E8  00C7               	movwf	___awdiv@divisor
  2097  03E9  3000               	movlw	0
  2098  03EA  00C8               	movwf	___awdiv@divisor+1
  2099  03EB  0833               	movf	_seg+1,w
  2100  03EC  00CA               	movwf	___awdiv@dividend+1
  2101  03ED  0832               	movf	_seg,w
  2102  03EE  00C9               	movwf	___awdiv@dividend
  2103  03EF  120A  158A  271D  120A  118A  	fcall	___awdiv
  2104  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  2105  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  2106  03F6  0847               	movf	?___awdiv,w
  2107  03F7  3E30               	addlw	48
  2108  03F8  00D6               	movwf	??_main
  2109  03F9  0856               	movf	??_main,w
  2110  03FA  1683               	bsf	3,5	;RP0=1, select bank1
  2111  03FB  1303               	bcf	3,6	;RP1=0, select bank1
  2112  03FC  00BB               	movwf	(_time^(0+128)+11)
  2113  03FD                     l2544:
  2114                           
  2115                           ;MAIN.c: 113:         time[9] = (min % 10) + 48;
  2116  03FD  300A               	movlw	10
  2117  03FE  00F3               	movwf	___awmod@divisor
  2118  03FF  3000               	movlw	0
  2119  0400  00F4               	movwf	___awmod@divisor+1
  2120  0401  1283               	bcf	3,5	;RP0=0, select bank0
  2121  0402  1303               	bcf	3,6	;RP1=0, select bank0
  2122  0403  0831               	movf	_min+1,w
  2123  0404  00F6               	movwf	___awmod@dividend+1
  2124  0405  0830               	movf	_min,w
  2125  0406  00F5               	movwf	___awmod@dividend
  2126  0407  120A  158A  2592  120A  118A  	fcall	___awmod
  2127  040C  0873               	movf	?___awmod,w
  2128  040D  3E30               	addlw	48
  2129  040E  1283               	bcf	3,5	;RP0=0, select bank0
  2130  040F  1303               	bcf	3,6	;RP1=0, select bank0
  2131  0410  00D6               	movwf	??_main
  2132  0411  0856               	movf	??_main,w
  2133  0412  1683               	bsf	3,5	;RP0=1, select bank1
  2134  0413  1303               	bcf	3,6	;RP1=0, select bank1
  2135  0414  00B9               	movwf	(_time^(0+128)+9)
  2136  0415                     l2546:
  2137                           
  2138                           ;MAIN.c: 114:         time[8] = (min/10) + 48;
  2139  0415  300A               	movlw	10
  2140  0416  1283               	bcf	3,5	;RP0=0, select bank0
  2141  0417  1303               	bcf	3,6	;RP1=0, select bank0
  2142  0418  00C7               	movwf	___awdiv@divisor
  2143  0419  3000               	movlw	0
  2144  041A  00C8               	movwf	___awdiv@divisor+1
  2145  041B  0831               	movf	_min+1,w
  2146  041C  00CA               	movwf	___awdiv@dividend+1
  2147  041D  0830               	movf	_min,w
  2148  041E  00C9               	movwf	___awdiv@dividend
  2149  041F  120A  158A  271D  120A  118A  	fcall	___awdiv
  2150  0424  1283               	bcf	3,5	;RP0=0, select bank0
  2151  0425  1303               	bcf	3,6	;RP1=0, select bank0
  2152  0426  0847               	movf	?___awdiv,w
  2153  0427  3E30               	addlw	48
  2154  0428  00D6               	movwf	??_main
  2155  0429  0856               	movf	??_main,w
  2156  042A  1683               	bsf	3,5	;RP0=1, select bank1
  2157  042B  1303               	bcf	3,6	;RP1=0, select bank1
  2158  042C  00B8               	movwf	(_time^(0+128)+8)
  2159  042D                     l2548:
  2160                           
  2161                           ;MAIN.c: 115:         time[6] = (hora % 10) + 48;
  2162  042D  300A               	movlw	10
  2163  042E  00F3               	movwf	___awmod@divisor
  2164  042F  3000               	movlw	0
  2165  0430  00F4               	movwf	___awmod@divisor+1
  2166  0431  1283               	bcf	3,5	;RP0=0, select bank0
  2167  0432  1303               	bcf	3,6	;RP1=0, select bank0
  2168  0433  082D               	movf	_hora+1,w
  2169  0434  00F6               	movwf	___awmod@dividend+1
  2170  0435  082C               	movf	_hora,w
  2171  0436  00F5               	movwf	___awmod@dividend
  2172  0437  120A  158A  2592  120A  118A  	fcall	___awmod
  2173  043C  0873               	movf	?___awmod,w
  2174  043D  3E30               	addlw	48
  2175  043E  1283               	bcf	3,5	;RP0=0, select bank0
  2176  043F  1303               	bcf	3,6	;RP1=0, select bank0
  2177  0440  00D6               	movwf	??_main
  2178  0441  0856               	movf	??_main,w
  2179  0442  1683               	bsf	3,5	;RP0=1, select bank1
  2180  0443  1303               	bcf	3,6	;RP1=0, select bank1
  2181  0444  00B6               	movwf	(_time^(0+128)+6)
  2182  0445                     l2550:
  2183                           
  2184                           ;MAIN.c: 116:         time[5] = (hora/10) + 48;
  2185  0445  300A               	movlw	10
  2186  0446  1283               	bcf	3,5	;RP0=0, select bank0
  2187  0447  1303               	bcf	3,6	;RP1=0, select bank0
  2188  0448  00C7               	movwf	___awdiv@divisor
  2189  0449  3000               	movlw	0
  2190  044A  00C8               	movwf	___awdiv@divisor+1
  2191  044B  082D               	movf	_hora+1,w
  2192  044C  00CA               	movwf	___awdiv@dividend+1
  2193  044D  082C               	movf	_hora,w
  2194  044E  00C9               	movwf	___awdiv@dividend
  2195  044F  120A  158A  271D  120A  118A  	fcall	___awdiv
  2196  0454  1283               	bcf	3,5	;RP0=0, select bank0
  2197  0455  1303               	bcf	3,6	;RP1=0, select bank0
  2198  0456  0847               	movf	?___awdiv,w
  2199  0457  3E30               	addlw	48
  2200  0458  00D6               	movwf	??_main
  2201  0459  0856               	movf	??_main,w
  2202  045A  1683               	bsf	3,5	;RP0=1, select bank1
  2203  045B  1303               	bcf	3,6	;RP1=0, select bank1
  2204  045C  00B5               	movwf	(_time^(0+128)+5)
  2205  045D                     l2552:
  2206                           
  2207                           ;MAIN.c: 118:         calendario[14]=(year % 10) + 48;
  2208  045D  300A               	movlw	10
  2209  045E  00F3               	movwf	___awmod@divisor
  2210  045F  3000               	movlw	0
  2211  0460  00F4               	movwf	___awmod@divisor+1
  2212  0461  1283               	bcf	3,5	;RP0=0, select bank0
  2213  0462  1303               	bcf	3,6	;RP1=0, select bank0
  2214  0463  082B               	movf	_year+1,w
  2215  0464  00F6               	movwf	___awmod@dividend+1
  2216  0465  082A               	movf	_year,w
  2217  0466  00F5               	movwf	___awmod@dividend
  2218  0467  120A  158A  2592  120A  118A  	fcall	___awmod
  2219  046C  0873               	movf	?___awmod,w
  2220  046D  3E30               	addlw	48
  2221  046E  1283               	bcf	3,5	;RP0=0, select bank0
  2222  046F  1303               	bcf	3,6	;RP1=0, select bank0
  2223  0470  00D6               	movwf	??_main
  2224  0471  0856               	movf	??_main,w
  2225  0472  1683               	bsf	3,5	;RP0=1, select bank1
  2226  0473  1303               	bcf	3,6	;RP1=0, select bank1
  2227  0474  00AE               	movwf	(_calendario^(0+128)+14)
  2228  0475                     l2554:
  2229                           
  2230                           ;MAIN.c: 119:         calendario[13] = (year/10) + 48;
  2231  0475  300A               	movlw	10
  2232  0476  1283               	bcf	3,5	;RP0=0, select bank0
  2233  0477  1303               	bcf	3,6	;RP1=0, select bank0
  2234  0478  00C7               	movwf	___awdiv@divisor
  2235  0479  3000               	movlw	0
  2236  047A  00C8               	movwf	___awdiv@divisor+1
  2237  047B  082B               	movf	_year+1,w
  2238  047C  00CA               	movwf	___awdiv@dividend+1
  2239  047D  082A               	movf	_year,w
  2240  047E  00C9               	movwf	___awdiv@dividend
  2241  047F  120A  158A  271D  120A  118A  	fcall	___awdiv
  2242  0484  1283               	bcf	3,5	;RP0=0, select bank0
  2243  0485  1303               	bcf	3,6	;RP1=0, select bank0
  2244  0486  0847               	movf	?___awdiv,w
  2245  0487  3E30               	addlw	48
  2246  0488  00D6               	movwf	??_main
  2247  0489  0856               	movf	??_main,w
  2248  048A  1683               	bsf	3,5	;RP0=1, select bank1
  2249  048B  1303               	bcf	3,6	;RP1=0, select bank1
  2250  048C  00AD               	movwf	(_calendario^(0+128)+13)
  2251  048D                     l2556:
  2252                           
  2253                           ;MAIN.c: 120:         calendario[9] = (mes % 10) + 48;
  2254  048D  300A               	movlw	10
  2255  048E  00F3               	movwf	___awmod@divisor
  2256  048F  3000               	movlw	0
  2257  0490  00F4               	movwf	___awmod@divisor+1
  2258  0491  1283               	bcf	3,5	;RP0=0, select bank0
  2259  0492  1303               	bcf	3,6	;RP1=0, select bank0
  2260  0493  0829               	movf	_mes+1,w
  2261  0494  00F6               	movwf	___awmod@dividend+1
  2262  0495  0828               	movf	_mes,w
  2263  0496  00F5               	movwf	___awmod@dividend
  2264  0497  120A  158A  2592  120A  118A  	fcall	___awmod
  2265  049C  0873               	movf	?___awmod,w
  2266  049D  3E30               	addlw	48
  2267  049E  1283               	bcf	3,5	;RP0=0, select bank0
  2268  049F  1303               	bcf	3,6	;RP1=0, select bank0
  2269  04A0  00D6               	movwf	??_main
  2270  04A1  0856               	movf	??_main,w
  2271  04A2  1683               	bsf	3,5	;RP0=1, select bank1
  2272  04A3  1303               	bcf	3,6	;RP1=0, select bank1
  2273  04A4  00A9               	movwf	(_calendario^(0+128)+9)
  2274  04A5                     l2558:
  2275                           
  2276                           ;MAIN.c: 121:         calendario[8] = (mes/10) + 48;
  2277  04A5  300A               	movlw	10
  2278  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  2279  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  2280  04A8  00C7               	movwf	___awdiv@divisor
  2281  04A9  3000               	movlw	0
  2282  04AA  00C8               	movwf	___awdiv@divisor+1
  2283  04AB  0829               	movf	_mes+1,w
  2284  04AC  00CA               	movwf	___awdiv@dividend+1
  2285  04AD  0828               	movf	_mes,w
  2286  04AE  00C9               	movwf	___awdiv@dividend
  2287  04AF  120A  158A  271D  120A  118A  	fcall	___awdiv
  2288  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  2289  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  2290  04B6  0847               	movf	?___awdiv,w
  2291  04B7  3E30               	addlw	48
  2292  04B8  00D6               	movwf	??_main
  2293  04B9  0856               	movf	??_main,w
  2294  04BA  1683               	bsf	3,5	;RP0=1, select bank1
  2295  04BB  1303               	bcf	3,6	;RP1=0, select bank1
  2296  04BC  00A8               	movwf	(_calendario^(0+128)+8)
  2297  04BD                     l2560:
  2298                           
  2299                           ;MAIN.c: 122:         calendario[6] = (dia % 10) + 48;
  2300  04BD  300A               	movlw	10
  2301  04BE  00F3               	movwf	___awmod@divisor
  2302  04BF  3000               	movlw	0
  2303  04C0  00F4               	movwf	___awmod@divisor+1
  2304  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  2305  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  2306  04C3  082F               	movf	_dia+1,w
  2307  04C4  00F6               	movwf	___awmod@dividend+1
  2308  04C5  082E               	movf	_dia,w
  2309  04C6  00F5               	movwf	___awmod@dividend
  2310  04C7  120A  158A  2592  120A  118A  	fcall	___awmod
  2311  04CC  0873               	movf	?___awmod,w
  2312  04CD  3E30               	addlw	48
  2313  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  2314  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  2315  04D0  00D6               	movwf	??_main
  2316  04D1  0856               	movf	??_main,w
  2317  04D2  1683               	bsf	3,5	;RP0=1, select bank1
  2318  04D3  1303               	bcf	3,6	;RP1=0, select bank1
  2319  04D4  00A6               	movwf	(_calendario^(0+128)+6)
  2320  04D5                     l2562:
  2321                           
  2322                           ;MAIN.c: 123:         calendario[5] = (dia/10) + 48;
  2323  04D5  300A               	movlw	10
  2324  04D6  1283               	bcf	3,5	;RP0=0, select bank0
  2325  04D7  1303               	bcf	3,6	;RP1=0, select bank0
  2326  04D8  00C7               	movwf	___awdiv@divisor
  2327  04D9  3000               	movlw	0
  2328  04DA  00C8               	movwf	___awdiv@divisor+1
  2329  04DB  082F               	movf	_dia+1,w
  2330  04DC  00CA               	movwf	___awdiv@dividend+1
  2331  04DD  082E               	movf	_dia,w
  2332  04DE  00C9               	movwf	___awdiv@dividend
  2333  04DF  120A  158A  271D  120A  118A  	fcall	___awdiv
  2334  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  2335  04E5  1303               	bcf	3,6	;RP1=0, select bank0
  2336  04E6  0847               	movf	?___awdiv,w
  2337  04E7  3E30               	addlw	48
  2338  04E8  00D6               	movwf	??_main
  2339  04E9  0856               	movf	??_main,w
  2340  04EA  1683               	bsf	3,5	;RP0=1, select bank1
  2341  04EB  1303               	bcf	3,6	;RP1=0, select bank1
  2342  04EC  00A5               	movwf	(_calendario^(0+128)+5)
  2343  04ED                     l2564:
  2344                           
  2345                           ;MAIN.c: 126:         fotoresistencia1 = (decmil1*10000) + (mil1*1000) + (cen1*100) + (d
      +                          ec1*10) + (uni1);
  2346  04ED  087A               	movf	_decmil1,w
  2347  04EE  1283               	bcf	3,5	;RP0=0, select bank0
  2348  04EF  1303               	bcf	3,6	;RP1=0, select bank0
  2349  04F0  00D6               	movwf	??_main
  2350  04F1  01D7               	clrf	??_main+1
  2351  04F2  0856               	movf	??_main,w
  2352  04F3  00F3               	movwf	___wmul@multiplier
  2353  04F4  0857               	movf	??_main+1,w
  2354  04F5  00F4               	movwf	___wmul@multiplier+1
  2355  04F6  3010               	movlw	16
  2356  04F7  00F5               	movwf	___wmul@multiplicand
  2357  04F8  3027               	movlw	39
  2358  04F9  00F6               	movwf	___wmul@multiplicand+1
  2359  04FA  120A  158A  243E  120A  118A  	fcall	___wmul
  2360  04FF  0873               	movf	?___wmul,w
  2361  0500  1283               	bcf	3,5	;RP0=0, select bank0
  2362  0501  1303               	bcf	3,6	;RP1=0, select bank0
  2363  0502  00D8               	movwf	??_main+2
  2364  0503  0874               	movf	?___wmul+1,w
  2365  0504  00D9               	movwf	??_main+3
  2366  0505  0879               	movf	_mil1,w
  2367  0506  00DA               	movwf	??_main+4
  2368  0507  01DB               	clrf	??_main+5
  2369  0508  085A               	movf	??_main+4,w
  2370  0509  00F3               	movwf	___wmul@multiplier
  2371  050A  085B               	movf	??_main+5,w
  2372  050B  00F4               	movwf	___wmul@multiplier+1
  2373  050C  30E8               	movlw	232
  2374  050D  00F5               	movwf	___wmul@multiplicand
  2375  050E  3003               	movlw	3
  2376  050F  00F6               	movwf	___wmul@multiplicand+1
  2377  0510  120A  158A  243E  120A  118A  	fcall	___wmul
  2378  0515  0873               	movf	?___wmul,w
  2379  0516  1283               	bcf	3,5	;RP0=0, select bank0
  2380  0517  1303               	bcf	3,6	;RP1=0, select bank0
  2381  0518  0758               	addwf	??_main+2,w
  2382  0519  00DC               	movwf	??_main+6
  2383  051A  0874               	movf	?___wmul+1,w
  2384  051B  1803               	skipnc
  2385  051C  0A74               	incf	?___wmul+1,w
  2386  051D  0759               	addwf	??_main+3,w
  2387  051E  00DD               	movwf	??_main+7
  2388  051F  083F               	movf	_cen1,w
  2389  0520  00DE               	movwf	??_main+8
  2390  0521  01DF               	clrf	??_main+9
  2391  0522  085E               	movf	??_main+8,w
  2392  0523  00F3               	movwf	___wmul@multiplier
  2393  0524  085F               	movf	??_main+9,w
  2394  0525  00F4               	movwf	___wmul@multiplier+1
  2395  0526  3064               	movlw	100
  2396  0527  00F5               	movwf	___wmul@multiplicand
  2397  0528  3000               	movlw	0
  2398  0529  00F6               	movwf	___wmul@multiplicand+1
  2399  052A  120A  158A  243E  120A  118A  	fcall	___wmul
  2400  052F  0873               	movf	?___wmul,w
  2401  0530  1283               	bcf	3,5	;RP0=0, select bank0
  2402  0531  1303               	bcf	3,6	;RP1=0, select bank0
  2403  0532  075C               	addwf	??_main+6,w
  2404  0533  00E0               	movwf	??_main+10
  2405  0534  0874               	movf	?___wmul+1,w
  2406  0535  1803               	skipnc
  2407  0536  0A74               	incf	?___wmul+1,w
  2408  0537  075D               	addwf	??_main+7,w
  2409  0538  00E1               	movwf	??_main+11
  2410  0539  083E               	movf	_dec1,w
  2411  053A  00E2               	movwf	??_main+12
  2412  053B  01E3               	clrf	??_main+13
  2413  053C  0862               	movf	??_main+12,w
  2414  053D  00F3               	movwf	___wmul@multiplier
  2415  053E  0863               	movf	??_main+13,w
  2416  053F  00F4               	movwf	___wmul@multiplier+1
  2417  0540  300A               	movlw	10
  2418  0541  00F5               	movwf	___wmul@multiplicand
  2419  0542  3000               	movlw	0
  2420  0543  00F6               	movwf	___wmul@multiplicand+1
  2421  0544  120A  158A  243E  120A  118A  	fcall	___wmul
  2422  0549  0873               	movf	?___wmul,w
  2423  054A  1283               	bcf	3,5	;RP0=0, select bank0
  2424  054B  1303               	bcf	3,6	;RP1=0, select bank0
  2425  054C  0760               	addwf	??_main+10,w
  2426  054D  00E4               	movwf	??_main+14
  2427  054E  0874               	movf	?___wmul+1,w
  2428  054F  1803               	skipnc
  2429  0550  0A74               	incf	?___wmul+1,w
  2430  0551  0761               	addwf	??_main+11,w
  2431  0552  00E5               	movwf	??_main+15
  2432  0553  083D               	movf	_uni1,w
  2433  0554  0764               	addwf	??_main+14,w
  2434  0555  00A4               	movwf	_fotoresistencia1
  2435  0556  3000               	movlw	0
  2436  0557  1803               	skipnc
  2437  0558  3001               	movlw	1
  2438  0559  0765               	addwf	??_main+15,w
  2439  055A  00A5               	movwf	_fotoresistencia1+1
  2440  055B  01A6               	clrf	_fotoresistencia1+2
  2441  055C  1BA5               	btfsc	_fotoresistencia1+1,7
  2442  055D  03A6               	decf	_fotoresistencia1+2,f
  2443  055E  0826               	movf	_fotoresistencia1+2,w
  2444  055F  00A7               	movwf	_fotoresistencia1+3
  2445  0560                     l2566:
  2446                           
  2447                           ;MAIN.c: 127:         fotoresistencia2 = (decmil2*10000) + (mil2*1000) + (cen2*100) + (d
      +                          ec2*10) + (uni2);
  2448  0560  0878               	movf	_decmil2,w
  2449  0561  00D6               	movwf	??_main
  2450  0562  01D7               	clrf	??_main+1
  2451  0563  0856               	movf	??_main,w
  2452  0564  00F3               	movwf	___wmul@multiplier
  2453  0565  0857               	movf	??_main+1,w
  2454  0566  00F4               	movwf	___wmul@multiplier+1
  2455  0567  3010               	movlw	16
  2456  0568  00F5               	movwf	___wmul@multiplicand
  2457  0569  3027               	movlw	39
  2458  056A  00F6               	movwf	___wmul@multiplicand+1
  2459  056B  120A  158A  243E  120A  118A  	fcall	___wmul
  2460  0570  0873               	movf	?___wmul,w
  2461  0571  1283               	bcf	3,5	;RP0=0, select bank0
  2462  0572  1303               	bcf	3,6	;RP1=0, select bank0
  2463  0573  00D8               	movwf	??_main+2
  2464  0574  0874               	movf	?___wmul+1,w
  2465  0575  00D9               	movwf	??_main+3
  2466  0576  083C               	movf	_mil2,w
  2467  0577  00DA               	movwf	??_main+4
  2468  0578  01DB               	clrf	??_main+5
  2469  0579  085A               	movf	??_main+4,w
  2470  057A  00F3               	movwf	___wmul@multiplier
  2471  057B  085B               	movf	??_main+5,w
  2472  057C  00F4               	movwf	___wmul@multiplier+1
  2473  057D  30E8               	movlw	232
  2474  057E  00F5               	movwf	___wmul@multiplicand
  2475  057F  3003               	movlw	3
  2476  0580  00F6               	movwf	___wmul@multiplicand+1
  2477  0581  120A  158A  243E  120A  118A  	fcall	___wmul
  2478  0586  0873               	movf	?___wmul,w
  2479  0587  1283               	bcf	3,5	;RP0=0, select bank0
  2480  0588  1303               	bcf	3,6	;RP1=0, select bank0
  2481  0589  0758               	addwf	??_main+2,w
  2482  058A  00DC               	movwf	??_main+6
  2483  058B  0874               	movf	?___wmul+1,w
  2484  058C  1803               	skipnc
  2485  058D  0A74               	incf	?___wmul+1,w
  2486  058E  0759               	addwf	??_main+3,w
  2487  058F  00DD               	movwf	??_main+7
  2488  0590  083B               	movf	_cen2,w
  2489  0591  00DE               	movwf	??_main+8
  2490  0592  01DF               	clrf	??_main+9
  2491  0593  085E               	movf	??_main+8,w
  2492  0594  00F3               	movwf	___wmul@multiplier
  2493  0595  085F               	movf	??_main+9,w
  2494  0596  00F4               	movwf	___wmul@multiplier+1
  2495  0597  3064               	movlw	100
  2496  0598  00F5               	movwf	___wmul@multiplicand
  2497  0599  3000               	movlw	0
  2498  059A  00F6               	movwf	___wmul@multiplicand+1
  2499  059B  120A  158A  243E  120A  118A  	fcall	___wmul
  2500  05A0  0873               	movf	?___wmul,w
  2501  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  2502  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  2503  05A3  075C               	addwf	??_main+6,w
  2504  05A4  00E0               	movwf	??_main+10
  2505  05A5  0874               	movf	?___wmul+1,w
  2506  05A6  1803               	skipnc
  2507  05A7  0A74               	incf	?___wmul+1,w
  2508  05A8  075D               	addwf	??_main+7,w
  2509  05A9  00E1               	movwf	??_main+11
  2510  05AA  083A               	movf	_dec2,w
  2511  05AB  00E2               	movwf	??_main+12
  2512  05AC  01E3               	clrf	??_main+13
  2513  05AD  0862               	movf	??_main+12,w
  2514  05AE  00F3               	movwf	___wmul@multiplier
  2515  05AF  0863               	movf	??_main+13,w
  2516  05B0  00F4               	movwf	___wmul@multiplier+1
  2517  05B1  300A               	movlw	10
  2518  05B2  00F5               	movwf	___wmul@multiplicand
  2519  05B3  3000               	movlw	0
  2520  05B4  00F6               	movwf	___wmul@multiplicand+1
  2521  05B5  120A  158A  243E  120A  118A  	fcall	___wmul
  2522  05BA  0873               	movf	?___wmul,w
  2523  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  2524  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  2525  05BD  0760               	addwf	??_main+10,w
  2526  05BE  00E4               	movwf	??_main+14
  2527  05BF  0874               	movf	?___wmul+1,w
  2528  05C0  1803               	skipnc
  2529  05C1  0A74               	incf	?___wmul+1,w
  2530  05C2  0761               	addwf	??_main+11,w
  2531  05C3  00E5               	movwf	??_main+15
  2532  05C4  0839               	movf	_uni2,w
  2533  05C5  0764               	addwf	??_main+14,w
  2534  05C6  00A0               	movwf	_fotoresistencia2
  2535  05C7  3000               	movlw	0
  2536  05C8  1803               	skipnc
  2537  05C9  3001               	movlw	1
  2538  05CA  0765               	addwf	??_main+15,w
  2539  05CB  00A1               	movwf	_fotoresistencia2+1
  2540  05CC  01A2               	clrf	_fotoresistencia2+2
  2541  05CD  1BA1               	btfsc	_fotoresistencia2+1,7
  2542  05CE  03A2               	decf	_fotoresistencia2+2,f
  2543  05CF  0822               	movf	_fotoresistencia2+2,w
  2544  05D0  00A3               	movwf	_fotoresistencia2+3
  2545                           
  2546                           ;MAIN.c: 129:         if(cont ==0){
  2547  05D1  0840               	movf	_cont,w
  2548  05D2  1D03               	btfss	3,2
  2549  05D3  2DD5               	goto	u1451
  2550  05D4  2DD6               	goto	u1450
  2551  05D5                     u1451:
  2552  05D5  2E17               	goto	l2576
  2553  05D6                     u1450:
  2554  05D6                     l2568:
  2555                           
  2556                           ;MAIN.c: 130:             LCD_XY(0,0);
  2557  05D6  01F5               	clrf	LCD_XY@y
  2558  05D7  3000               	movlw	0
  2559  05D8  120A  158A  23D5  120A  118A  	fcall	_LCD_XY
  2560  05DD                     l2570:
  2561                           
  2562                           ;MAIN.c: 131:             LCD_Cadena("Foto1     Foto2");
  2563  05DD  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2564  05DE  00F5               	movwf	LCD_Cadena@dato
  2565  05DF  3080               	movlw	128
  2566  05E0  00F6               	movwf	LCD_Cadena@dato+1
  2567  05E1  120A  158A  2469  120A  118A  	fcall	_LCD_Cadena
  2568  05E6                     l2572:
  2569                           
  2570                           ;MAIN.c: 132:             valores(decmil1,mil1,cen1,dec1,uni1);
  2571  05E6  0879               	movf	_mil1,w
  2572  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  2573  05E8  1303               	bcf	3,6	;RP1=0, select bank0
  2574  05E9  00D6               	movwf	??_main
  2575  05EA  0856               	movf	??_main,w
  2576  05EB  00C5               	movwf	valores@miles
  2577  05EC  083F               	movf	_cen1,w
  2578  05ED  00D7               	movwf	??_main+1
  2579  05EE  0857               	movf	??_main+1,w
  2580  05EF  00C6               	movwf	valores@centenas
  2581  05F0  083E               	movf	_dec1,w
  2582  05F1  00D8               	movwf	??_main+2
  2583  05F2  0858               	movf	??_main+2,w
  2584  05F3  00C7               	movwf	valores@decenas
  2585  05F4  083D               	movf	_uni1,w
  2586  05F5  00D9               	movwf	??_main+3
  2587  05F6  0859               	movf	??_main+3,w
  2588  05F7  00C8               	movwf	valores@unidades
  2589  05F8  087A               	movf	_decmil1,w
  2590  05F9  120A  158A  2500  120A  118A  	fcall	_valores
  2591  05FE                     l2574:
  2592                           
  2593                           ;MAIN.c: 133:             valores2(decmil2,mil2,cen2,dec2,uni2);
  2594  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  2595  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  2596  0600  083C               	movf	_mil2,w
  2597  0601  00D6               	movwf	??_main
  2598  0602  0856               	movf	??_main,w
  2599  0603  00C5               	movwf	valores2@miles
  2600  0604  083B               	movf	_cen2,w
  2601  0605  00D7               	movwf	??_main+1
  2602  0606  0857               	movf	??_main+1,w
  2603  0607  00C6               	movwf	valores2@centenas
  2604  0608  083A               	movf	_dec2,w
  2605  0609  00D8               	movwf	??_main+2
  2606  060A  0858               	movf	??_main+2,w
  2607  060B  00C7               	movwf	valores2@decenas
  2608  060C  0839               	movf	_uni2,w
  2609  060D  00D9               	movwf	??_main+3
  2610  060E  0859               	movf	??_main+3,w
  2611  060F  00C8               	movwf	valores2@unidades
  2612  0610  0878               	movf	_decmil2,w
  2613  0611  120A  158A  2548  120A  118A  	fcall	_valores2
  2614                           
  2615                           ;MAIN.c: 135:         }else if (cont == 1){
  2616  0616  2E58               	goto	l2590
  2617  0617                     l2576:
  2618  0617  0340               	decf	_cont,w
  2619  0618  1D03               	btfss	3,2
  2620  0619  2E1B               	goto	u1461
  2621  061A  2E1C               	goto	u1460
  2622  061B                     u1461:
  2623  061B  2E3D               	goto	l2584
  2624  061C                     u1460:
  2625  061C                     l2578:
  2626                           
  2627                           ;MAIN.c: 136:             LCD_XY(0,0);
  2628  061C  01F5               	clrf	LCD_XY@y
  2629  061D  3000               	movlw	0
  2630  061E  120A  158A  23D5  120A  118A  	fcall	_LCD_XY
  2631  0623                     l2580:
  2632                           
  2633                           ;MAIN.c: 137:             LCD_Cadena(time);
  2634  0623  30B0               	movlw	(low (_time| 0))& (0+255)
  2635  0624  00F5               	movwf	LCD_Cadena@dato
  2636  0625  3000               	movlw	0
  2637  0626  00F6               	movwf	LCD_Cadena@dato+1
  2638  0627  120A  158A  2469  120A  118A  	fcall	_LCD_Cadena
  2639  062C                     l2582:
  2640                           
  2641                           ;MAIN.c: 138:             LCD_XY(2,0);
  2642  062C  01F5               	clrf	LCD_XY@y
  2643  062D  3002               	movlw	2
  2644  062E  120A  158A  23D5  120A  118A  	fcall	_LCD_XY
  2645                           
  2646                           ;MAIN.c: 139:             LCD_Cadena(calendario);
  2647  0633  30A0               	movlw	(low (_calendario| 0))& (0+255)
  2648  0634  00F5               	movwf	LCD_Cadena@dato
  2649  0635  3000               	movlw	0
  2650  0636  00F6               	movwf	LCD_Cadena@dato+1
  2651  0637  120A  158A  2469  120A  118A  	fcall	_LCD_Cadena
  2652                           
  2653                           ;MAIN.c: 140:         }else if (cont == 2){
  2654  063C  2E58               	goto	l2590
  2655  063D                     l2584:
  2656  063D  3002               	movlw	2
  2657  063E  0640               	xorwf	_cont,w
  2658  063F  1D03               	btfss	3,2
  2659  0640  2E42               	goto	u1471
  2660  0641  2E43               	goto	u1470
  2661  0642                     u1471:
  2662  0642  2E58               	goto	l2590
  2663  0643                     u1470:
  2664  0643                     l2586:
  2665                           
  2666                           ;MAIN.c: 141:             LCD_Cadena("           ");
  2667  0643  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2668  0644  00F5               	movwf	LCD_Cadena@dato
  2669  0645  3080               	movlw	128
  2670  0646  00F6               	movwf	LCD_Cadena@dato+1
  2671  0647  120A  158A  2469  120A  118A  	fcall	_LCD_Cadena
  2672                           
  2673                           ;MAIN.c: 142:             LCD_Cadena("           ");
  2674  064C  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2675  064D  00F5               	movwf	LCD_Cadena@dato
  2676  064E  3080               	movlw	128
  2677  064F  00F6               	movwf	LCD_Cadena@dato+1
  2678  0650  120A  158A  2469  120A  118A  	fcall	_LCD_Cadena
  2679  0655                     l2588:
  2680                           
  2681                           ;MAIN.c: 143:             cont = 0;
  2682  0655  1283               	bcf	3,5	;RP0=0, select bank0
  2683  0656  1303               	bcf	3,6	;RP1=0, select bank0
  2684  0657  01C0               	clrf	_cont
  2685  0658                     l2590:
  2686                           
  2687                           ;MAIN.c: 146:         if((fotoresistencia2 <= 100) && (fotoresistencia1 <= 100)){
  2688  0658  1283               	bcf	3,5	;RP0=0, select bank0
  2689  0659  1303               	bcf	3,6	;RP1=0, select bank0
  2690  065A  0823               	movf	_fotoresistencia2+3,w
  2691  065B  1D03               	btfss	3,2
  2692  065C  2E6A               	goto	u1481
  2693  065D  0822               	movf	_fotoresistencia2+2,w
  2694  065E  1D03               	btfss	3,2
  2695  065F  2E6A               	goto	u1481
  2696  0660  0821               	movf	_fotoresistencia2+1,w
  2697  0661  1D03               	btfss	3,2
  2698  0662  2E6A               	goto	u1481
  2699  0663  3065               	movlw	101
  2700  0664  0220               	subwf	_fotoresistencia2,w
  2701  0665  1D03               	skipz
  2702  0666  2E67               	goto	u1483
  2703  0667                     u1483:
  2704  0667  1803               	btfsc	3,0
  2705  0668  2E6A               	goto	u1481
  2706  0669  2E6B               	goto	u1480
  2707  066A                     u1481:
  2708  066A  2E85               	goto	l2600
  2709  066B                     u1480:
  2710  066B                     l2592:
  2711  066B  1283               	bcf	3,5	;RP0=0, select bank0
  2712  066C  1303               	bcf	3,6	;RP1=0, select bank0
  2713  066D  0827               	movf	_fotoresistencia1+3,w
  2714  066E  1D03               	btfss	3,2
  2715  066F  2E7D               	goto	u1491
  2716  0670  0826               	movf	_fotoresistencia1+2,w
  2717  0671  1D03               	btfss	3,2
  2718  0672  2E7D               	goto	u1491
  2719  0673  0825               	movf	_fotoresistencia1+1,w
  2720  0674  1D03               	btfss	3,2
  2721  0675  2E7D               	goto	u1491
  2722  0676  3065               	movlw	101
  2723  0677  0224               	subwf	_fotoresistencia1,w
  2724  0678  1D03               	skipz
  2725  0679  2E7A               	goto	u1493
  2726  067A                     u1493:
  2727  067A  1803               	btfsc	3,0
  2728  067B  2E7D               	goto	u1491
  2729  067C  2E7E               	goto	u1490
  2730  067D                     u1491:
  2731  067D  2E85               	goto	l2600
  2732  067E                     u1490:
  2733  067E                     l2594:
  2734                           
  2735                           ;MAIN.c: 148:                 CCPR1L = 187;
  2736  067E  30BB               	movlw	187
  2737  067F  1283               	bcf	3,5	;RP0=0, select bank0
  2738  0680  1303               	bcf	3,6	;RP1=0, select bank0
  2739  0681  0095               	movwf	21	;volatile
  2740  0682                     l2596:
  2741                           
  2742                           ;MAIN.c: 149:                 CCP1CONbits.DC1B0 = 1;
  2743  0682  1617               	bsf	23,4	;volatile
  2744  0683                     l2598:
  2745                           
  2746                           ;MAIN.c: 150:                 CCP1CONbits.DC1B1 = 0;
  2747  0683  1297               	bcf	23,5	;volatile
  2748                           
  2749                           ;MAIN.c: 152:         }else if((fotoresistencia2 >=9000) && (fotoresistencia1 >= 9000)){
  2750  0684  2EE4               	goto	l2626
  2751  0685                     l2600:
  2752  0685  1283               	bcf	3,5	;RP0=0, select bank0
  2753  0686  1303               	bcf	3,6	;RP1=0, select bank0
  2754  0687  0823               	movf	_fotoresistencia2+3,w
  2755  0688  1D03               	btfss	3,2
  2756  0689  2E99               	goto	u1500
  2757  068A  0822               	movf	_fotoresistencia2+2,w
  2758  068B  1D03               	btfss	3,2
  2759  068C  2E99               	goto	u1500
  2760  068D  3023               	movlw	35
  2761  068E  0221               	subwf	_fotoresistencia2+1,w
  2762  068F  1D03               	skipz
  2763  0690  2E95               	goto	u1503
  2764  0691  3028               	movlw	40
  2765  0692  0220               	subwf	_fotoresistencia2,w
  2766  0693  1D03               	skipz
  2767  0694  2E95               	goto	u1503
  2768  0695                     u1503:
  2769  0695  1C03               	btfss	3,0
  2770  0696  2E98               	goto	u1501
  2771  0697  2E99               	goto	u1500
  2772  0698                     u1501:
  2773  0698  2EB4               	goto	l2610
  2774  0699                     u1500:
  2775  0699                     l2602:
  2776  0699  1283               	bcf	3,5	;RP0=0, select bank0
  2777  069A  1303               	bcf	3,6	;RP1=0, select bank0
  2778  069B  0827               	movf	_fotoresistencia1+3,w
  2779  069C  1D03               	btfss	3,2
  2780  069D  2EAD               	goto	u1510
  2781  069E  0826               	movf	_fotoresistencia1+2,w
  2782  069F  1D03               	btfss	3,2
  2783  06A0  2EAD               	goto	u1510
  2784  06A1  3023               	movlw	35
  2785  06A2  0225               	subwf	_fotoresistencia1+1,w
  2786  06A3  1D03               	skipz
  2787  06A4  2EA9               	goto	u1513
  2788  06A5  3028               	movlw	40
  2789  06A6  0224               	subwf	_fotoresistencia1,w
  2790  06A7  1D03               	skipz
  2791  06A8  2EA9               	goto	u1513
  2792  06A9                     u1513:
  2793  06A9  1C03               	btfss	3,0
  2794  06AA  2EAC               	goto	u1511
  2795  06AB  2EAD               	goto	u1510
  2796  06AC                     u1511:
  2797  06AC  2EB4               	goto	l2610
  2798  06AD                     u1510:
  2799  06AD                     l2604:
  2800                           
  2801                           ;MAIN.c: 153:                 CCPR1L = 187;
  2802  06AD  30BB               	movlw	187
  2803  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  2804  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  2805  06B0  0095               	movwf	21	;volatile
  2806  06B1                     l2606:
  2807                           
  2808                           ;MAIN.c: 154:                 CCP1CONbits.DC1B0 = 1;
  2809  06B1  1617               	bsf	23,4	;volatile
  2810  06B2                     l2608:
  2811                           
  2812                           ;MAIN.c: 155:                 CCP1CONbits.DC1B1 = 0;
  2813  06B2  1297               	bcf	23,5	;volatile
  2814                           
  2815                           ;MAIN.c: 157:         }else if(fotoresistencia2 > fotoresistencia1){
  2816  06B3  2EE4               	goto	l2626
  2817  06B4                     l2610:
  2818  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  2819  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  2820  06B6  0823               	movf	_fotoresistencia2+3,w
  2821  06B7  0227               	subwf	_fotoresistencia1+3,w
  2822  06B8  1D03               	skipz
  2823  06B9  2EC4               	goto	u1525
  2824  06BA  0822               	movf	_fotoresistencia2+2,w
  2825  06BB  0226               	subwf	_fotoresistencia1+2,w
  2826  06BC  1D03               	skipz
  2827  06BD  2EC4               	goto	u1525
  2828  06BE  0821               	movf	_fotoresistencia2+1,w
  2829  06BF  0225               	subwf	_fotoresistencia1+1,w
  2830  06C0  1D03               	skipz
  2831  06C1  2EC4               	goto	u1525
  2832  06C2  0820               	movf	_fotoresistencia2,w
  2833  06C3  0224               	subwf	_fotoresistencia1,w
  2834  06C4                     u1525:
  2835  06C4  1803               	skipnc
  2836  06C5  2EC7               	goto	u1521
  2837  06C6  2EC8               	goto	u1520
  2838  06C7                     u1521:
  2839  06C7  2ECD               	goto	l2618
  2840  06C8                     u1520:
  2841  06C8                     l2612:
  2842                           
  2843                           ;MAIN.c: 158:                 CCPR1L = 157;
  2844  06C8  309D               	movlw	157
  2845  06C9  0095               	movwf	21	;volatile
  2846  06CA                     l2614:
  2847                           
  2848                           ;MAIN.c: 159:                 CCP1CONbits.DC1B0 = 1;
  2849  06CA  1617               	bsf	23,4	;volatile
  2850  06CB                     l2616:
  2851                           
  2852                           ;MAIN.c: 160:                 CCP1CONbits.DC1B1 = 1;
  2853  06CB  1697               	bsf	23,5	;volatile
  2854                           
  2855                           ;MAIN.c: 161:         }else if(fotoresistencia2 < fotoresistencia1){
  2856  06CC  2EE4               	goto	l2626
  2857  06CD                     l2618:
  2858  06CD  0827               	movf	_fotoresistencia1+3,w
  2859  06CE  0223               	subwf	_fotoresistencia2+3,w
  2860  06CF  1D03               	skipz
  2861  06D0  2EDB               	goto	u1535
  2862  06D1  0826               	movf	_fotoresistencia1+2,w
  2863  06D2  0222               	subwf	_fotoresistencia2+2,w
  2864  06D3  1D03               	skipz
  2865  06D4  2EDB               	goto	u1535
  2866  06D5  0825               	movf	_fotoresistencia1+1,w
  2867  06D6  0221               	subwf	_fotoresistencia2+1,w
  2868  06D7  1D03               	skipz
  2869  06D8  2EDB               	goto	u1535
  2870  06D9  0824               	movf	_fotoresistencia1,w
  2871  06DA  0220               	subwf	_fotoresistencia2,w
  2872  06DB                     u1535:
  2873  06DB  1803               	skipnc
  2874  06DC  2EDE               	goto	u1531
  2875  06DD  2EDF               	goto	u1530
  2876  06DE                     u1531:
  2877  06DE  2EE4               	goto	l175
  2878  06DF                     u1530:
  2879  06DF                     l2620:
  2880                           
  2881                           ;MAIN.c: 162:                 CCPR1L = 218;
  2882  06DF  30DA               	movlw	218
  2883  06E0  0095               	movwf	21	;volatile
  2884  06E1                     l2622:
  2885                           
  2886                           ;MAIN.c: 163:                 CCP1CONbits.DC1B0 = 1;
  2887  06E1  1617               	bsf	23,4	;volatile
  2888  06E2                     l2624:
  2889                           
  2890                           ;MAIN.c: 164:                 CCP1CONbits.DC1B1 = 1;
  2891  06E2  1697               	bsf	23,5	;volatile
  2892  06E3  2EE4               	goto	l2626
  2893  06E4                     l175:
  2894  06E4                     l2626:
  2895                           
  2896                           ;MAIN.c: 167:         if (PIR1bits.RCIF == 1){
  2897  06E4  1E8C               	btfss	12,5	;volatile
  2898  06E5  2EE7               	goto	u1541
  2899  06E6  2EE8               	goto	u1540
  2900  06E7                     u1541:
  2901  06E7  2831               	goto	l2478
  2902  06E8                     u1540:
  2903  06E8                     l2628:
  2904                           
  2905                           ;MAIN.c: 169:             listo = USART_Rx();
  2906  06E8  120A  158A  232B  120A  118A  	fcall	_USART_Rx
  2907  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  2908  06EE  1303               	bcf	3,6	;RP1=0, select bank0
  2909  06EF  00D6               	movwf	??_main
  2910  06F0  0856               	movf	??_main,w
  2911  06F1  00B6               	movwf	_listo
  2912  06F2                     l2630:
  2913                           
  2914                           ;MAIN.c: 171:                 if(listo == 'f'){
  2915  06F2  3066               	movlw	102
  2916  06F3  0636               	xorwf	_listo,w
  2917  06F4  1D03               	btfss	3,2
  2918  06F5  2EF7               	goto	u1551
  2919  06F6  2EF8               	goto	u1550
  2920  06F7                     u1551:
  2921  06F7  2F22               	goto	l2634
  2922  06F8                     u1550:
  2923  06F8                     l2632:
  2924                           
  2925                           ;MAIN.c: 172:                     USART_Tx(decmil1 + 48);
  2926  06F8  087A               	movf	_decmil1,w
  2927  06F9  3E30               	addlw	48
  2928  06FA  120A  158A  2353  120A  118A  	fcall	_USART_Tx
  2929                           
  2930                           ;MAIN.c: 173:                     USART_Tx(mil1 + 48);
  2931  06FF  0879               	movf	_mil1,w
  2932  0700  3E30               	addlw	48
  2933  0701  120A  158A  2353  120A  118A  	fcall	_USART_Tx
  2934                           
  2935                           ;MAIN.c: 174:                     USART_Tx(cen1 + 48);
  2936  0706  1283               	bcf	3,5	;RP0=0, select bank0
  2937  0707  1303               	bcf	3,6	;RP1=0, select bank0
  2938  0708  083F               	movf	_cen1,w
  2939  0709  3E30               	addlw	48
  2940  070A  120A  158A  2353  120A  118A  	fcall	_USART_Tx
  2941                           
  2942                           ;MAIN.c: 175:                     USART_Tx(dec1 + 48);
  2943  070F  1283               	bcf	3,5	;RP0=0, select bank0
  2944  0710  1303               	bcf	3,6	;RP1=0, select bank0
  2945  0711  083E               	movf	_dec1,w
  2946  0712  3E30               	addlw	48
  2947  0713  120A  158A  2353  120A  118A  	fcall	_USART_Tx
  2948                           
  2949                           ;MAIN.c: 176:                     USART_Tx(uni1 + 48);
  2950  0718  1283               	bcf	3,5	;RP0=0, select bank0
  2951  0719  1303               	bcf	3,6	;RP1=0, select bank0
  2952  071A  083D               	movf	_uni1,w
  2953  071B  3E30               	addlw	48
  2954  071C  120A  158A  2353  120A  118A  	fcall	_USART_Tx
  2955                           
  2956                           ;MAIN.c: 178:                 }else if(listo == 'd'){
  2957  0721  2F56               	goto	l2640
  2958  0722                     l2634:
  2959  0722  3064               	movlw	100
  2960  0723  0636               	xorwf	_listo,w
  2961  0724  1D03               	btfss	3,2
  2962  0725  2F27               	goto	u1561
  2963  0726  2F28               	goto	u1560
  2964  0727                     u1561:
  2965  0727  2F56               	goto	l2640
  2966  0728                     u1560:
  2967  0728                     l2636:
  2968                           
  2969                           ;MAIN.c: 179:                     USART_Tx(decmil2 + 48);
  2970  0728  0878               	movf	_decmil2,w
  2971  0729  3E30               	addlw	48
  2972  072A  120A  158A  2353  120A  118A  	fcall	_USART_Tx
  2973                           
  2974                           ;MAIN.c: 180:                     USART_Tx(mil2 + 48);
  2975  072F  1283               	bcf	3,5	;RP0=0, select bank0
  2976  0730  1303               	bcf	3,6	;RP1=0, select bank0
  2977  0731  083C               	movf	_mil2,w
  2978  0732  3E30               	addlw	48
  2979  0733  120A  158A  2353  120A  118A  	fcall	_USART_Tx
  2980                           
  2981                           ;MAIN.c: 181:                     USART_Tx(cen2 + 48);
  2982  0738  1283               	bcf	3,5	;RP0=0, select bank0
  2983  0739  1303               	bcf	3,6	;RP1=0, select bank0
  2984  073A  083B               	movf	_cen2,w
  2985  073B  3E30               	addlw	48
  2986  073C  120A  158A  2353  120A  118A  	fcall	_USART_Tx
  2987                           
  2988                           ;MAIN.c: 182:                     USART_Tx(dec2 + 48);
  2989  0741  1283               	bcf	3,5	;RP0=0, select bank0
  2990  0742  1303               	bcf	3,6	;RP1=0, select bank0
  2991  0743  083A               	movf	_dec2,w
  2992  0744  3E30               	addlw	48
  2993  0745  120A  158A  2353  120A  118A  	fcall	_USART_Tx
  2994                           
  2995                           ;MAIN.c: 183:                     USART_Tx(uni2 + 48);
  2996  074A  1283               	bcf	3,5	;RP0=0, select bank0
  2997  074B  1303               	bcf	3,6	;RP1=0, select bank0
  2998  074C  0839               	movf	_uni2,w
  2999  074D  3E30               	addlw	48
  3000  074E  120A  158A  2353  120A  118A  	fcall	_USART_Tx
  3001  0753                     l2638:
  3002                           
  3003                           ;MAIN.c: 184:                     listo = 0;
  3004  0753  1283               	bcf	3,5	;RP0=0, select bank0
  3005  0754  1303               	bcf	3,6	;RP1=0, select bank0
  3006  0755  01B6               	clrf	_listo
  3007  0756                     l2640:
  3008                           
  3009                           ;MAIN.c: 186:             PIR1bits.RCIF = 0;
  3010  0756  1283               	bcf	3,5	;RP0=0, select bank0
  3011  0757  1303               	bcf	3,6	;RP1=0, select bank0
  3012  0758  128C               	bcf	12,5	;volatile
  3013  0759  2831               	goto	l2478
  3014  075A  120A  118A  280C   	ljmp	start
  3015  075D                     __end_of_main:
  3016                           
  3017                           	psect	text1
  3018  0D48                     __ptext1:	
  3019 ;; *************** function _valores2 *****************
  3020 ;; Defined at:
  3021 ;;		line 294 in file "MAIN.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;  decenasdemil    1    wreg     unsigned char 
  3024 ;;  miles           1    0[BANK0 ] unsigned char 
  3025 ;;  centenas        1    1[BANK0 ] unsigned char 
  3026 ;;  decenas         1    2[BANK0 ] unsigned char 
  3027 ;;  unidades        1    3[BANK0 ] unsigned char 
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;  decenasdemil    1    4[BANK0 ] unsigned char 
  3030 ;; Return value:  Size  Location     Type
  3031 ;;                  1    wreg      void 
  3032 ;; Registers used:
  3033 ;;		wreg, status,2, status,0, pclath, cstack
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3039 ;;      Params:         0       4       0       0       0
  3040 ;;      Locals:         0       1       0       0       0
  3041 ;;      Temps:          1       0       0       0       0
  3042 ;;      Totals:         1       5       0       0       0
  3043 ;;Total ram usage:        6 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; Hardware stack levels required when called:    3
  3046 ;; This function calls:
  3047 ;;		_LCD_Data
  3048 ;;		_LCD_XY
  3049 ;; This function is called by:
  3050 ;;		_main
  3051 ;; This function uses a non-reentrant model
  3052 ;;
  3053                           
  3054                           
  3055                           ;psect for function _valores2
  3056  0D48                     _valores2:
  3057                           
  3058                           ;incstack = 0
  3059                           ; Regs used in _valores2: [wreg+status,2+status,0+pclath+cstack]
  3060                           ;valores2@decenasdemiles stored from wreg
  3061  0D48  1283               	bcf	3,5	;RP0=0, select bank0
  3062  0D49  1303               	bcf	3,6	;RP1=0, select bank0
  3063  0D4A  00C9               	movwf	valores2@decenasdemiles
  3064  0D4B                     l2402:
  3065                           
  3066                           ;MAIN.c: 296:     decenasdemiles +=48;
  3067  0D4B  3030               	movlw	48
  3068  0D4C  00F7               	movwf	??_valores2
  3069  0D4D  0877               	movf	??_valores2,w
  3070  0D4E  07C9               	addwf	valores2@decenasdemiles,f
  3071  0D4F                     l2404:
  3072                           
  3073                           ;MAIN.c: 297:     miles += 48;
  3074  0D4F  3030               	movlw	48
  3075  0D50  00F7               	movwf	??_valores2
  3076  0D51  0877               	movf	??_valores2,w
  3077  0D52  07C5               	addwf	valores2@miles,f
  3078  0D53                     l2406:
  3079                           
  3080                           ;MAIN.c: 298:     centenas += 48;
  3081  0D53  3030               	movlw	48
  3082  0D54  00F7               	movwf	??_valores2
  3083  0D55  0877               	movf	??_valores2,w
  3084  0D56  07C6               	addwf	valores2@centenas,f
  3085  0D57                     l2408:
  3086                           
  3087                           ;MAIN.c: 299:     decenas += 48;
  3088  0D57  3030               	movlw	48
  3089  0D58  00F7               	movwf	??_valores2
  3090  0D59  0877               	movf	??_valores2,w
  3091  0D5A  07C7               	addwf	valores2@decenas,f
  3092  0D5B                     l2410:
  3093                           
  3094                           ;MAIN.c: 300:     unidades += 48;
  3095  0D5B  3030               	movlw	48
  3096  0D5C  00F7               	movwf	??_valores2
  3097  0D5D  0877               	movf	??_valores2,w
  3098  0D5E  07C8               	addwf	valores2@unidades,f
  3099  0D5F                     l2412:
  3100                           
  3101                           ;MAIN.c: 302:     LCD_XY(2,9);
  3102  0D5F  3009               	movlw	9
  3103  0D60  00F7               	movwf	??_valores2
  3104  0D61  0877               	movf	??_valores2,w
  3105  0D62  00F5               	movwf	LCD_XY@y
  3106  0D63  3002               	movlw	2
  3107  0D64  120A  158A  23D5  120A  158A  	fcall	_LCD_XY
  3108  0D69                     l2414:
  3109                           
  3110                           ;MAIN.c: 303:     LCD_Data(decenasdemiles);
  3111  0D69  1283               	bcf	3,5	;RP0=0, select bank0
  3112  0D6A  1303               	bcf	3,6	;RP1=0, select bank0
  3113  0D6B  0849               	movf	valores2@decenasdemiles,w
  3114  0D6C  120A  158A  2403  120A  158A  	fcall	_LCD_Data
  3115  0D71                     l2416:
  3116                           
  3117                           ;MAIN.c: 304:     LCD_Data(miles);
  3118  0D71  1283               	bcf	3,5	;RP0=0, select bank0
  3119  0D72  1303               	bcf	3,6	;RP1=0, select bank0
  3120  0D73  0845               	movf	valores2@miles,w
  3121  0D74  120A  158A  2403  120A  158A  	fcall	_LCD_Data
  3122  0D79                     l2418:
  3123                           
  3124                           ;MAIN.c: 305:     LCD_Data(centenas);
  3125  0D79  1283               	bcf	3,5	;RP0=0, select bank0
  3126  0D7A  1303               	bcf	3,6	;RP1=0, select bank0
  3127  0D7B  0846               	movf	valores2@centenas,w
  3128  0D7C  120A  158A  2403  120A  158A  	fcall	_LCD_Data
  3129  0D81                     l2420:
  3130                           
  3131                           ;MAIN.c: 306:     LCD_Data(decenas);
  3132  0D81  1283               	bcf	3,5	;RP0=0, select bank0
  3133  0D82  1303               	bcf	3,6	;RP1=0, select bank0
  3134  0D83  0847               	movf	valores2@decenas,w
  3135  0D84  120A  158A  2403  120A  158A  	fcall	_LCD_Data
  3136  0D89                     l2422:
  3137                           
  3138                           ;MAIN.c: 307:     LCD_Data(unidades);
  3139  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  3140  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  3141  0D8B  0848               	movf	valores2@unidades,w
  3142  0D8C  120A  158A  2403  120A  158A  	fcall	_LCD_Data
  3143  0D91                     l200:
  3144  0D91  0008               	return
  3145  0D92                     __end_of_valores2:
  3146                           
  3147                           	psect	text2
  3148  0D00                     __ptext2:	
  3149 ;; *************** function _valores *****************
  3150 ;; Defined at:
  3151 ;;		line 277 in file "MAIN.c"
  3152 ;; Parameters:    Size  Location     Type
  3153 ;;  decenasdemil    1    wreg     unsigned char 
  3154 ;;  miles           1    0[BANK0 ] unsigned char 
  3155 ;;  centenas        1    1[BANK0 ] unsigned char 
  3156 ;;  decenas         1    2[BANK0 ] unsigned char 
  3157 ;;  unidades        1    3[BANK0 ] unsigned char 
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;  decenasdemil    1    4[BANK0 ] unsigned char 
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  1    wreg      void 
  3162 ;; Registers used:
  3163 ;;		wreg, status,2, status,0, pclath, cstack
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3169 ;;      Params:         0       4       0       0       0
  3170 ;;      Locals:         0       1       0       0       0
  3171 ;;      Temps:          1       0       0       0       0
  3172 ;;      Totals:         1       5       0       0       0
  3173 ;;Total ram usage:        6 bytes
  3174 ;; Hardware stack levels used:    1
  3175 ;; Hardware stack levels required when called:    3
  3176 ;; This function calls:
  3177 ;;		_LCD_Data
  3178 ;;		_LCD_XY
  3179 ;; This function is called by:
  3180 ;;		_main
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           
  3185                           ;psect for function _valores
  3186  0D00                     _valores:
  3187                           
  3188                           ;incstack = 0
  3189                           ; Regs used in _valores: [wreg+status,2+status,0+pclath+cstack]
  3190                           ;valores@decenasdemiles stored from wreg
  3191  0D00  1283               	bcf	3,5	;RP0=0, select bank0
  3192  0D01  1303               	bcf	3,6	;RP1=0, select bank0
  3193  0D02  00C9               	movwf	valores@decenasdemiles
  3194  0D03                     l2380:
  3195                           
  3196                           ;MAIN.c: 279:     decenasdemiles +=48;
  3197  0D03  3030               	movlw	48
  3198  0D04  00F7               	movwf	??_valores
  3199  0D05  0877               	movf	??_valores,w
  3200  0D06  07C9               	addwf	valores@decenasdemiles,f
  3201  0D07                     l2382:
  3202                           
  3203                           ;MAIN.c: 280:     miles += 48;
  3204  0D07  3030               	movlw	48
  3205  0D08  00F7               	movwf	??_valores
  3206  0D09  0877               	movf	??_valores,w
  3207  0D0A  07C5               	addwf	valores@miles,f
  3208  0D0B                     l2384:
  3209                           
  3210                           ;MAIN.c: 281:     centenas += 48;
  3211  0D0B  3030               	movlw	48
  3212  0D0C  00F7               	movwf	??_valores
  3213  0D0D  0877               	movf	??_valores,w
  3214  0D0E  07C6               	addwf	valores@centenas,f
  3215  0D0F                     l2386:
  3216                           
  3217                           ;MAIN.c: 282:     decenas += 48;
  3218  0D0F  3030               	movlw	48
  3219  0D10  00F7               	movwf	??_valores
  3220  0D11  0877               	movf	??_valores,w
  3221  0D12  07C7               	addwf	valores@decenas,f
  3222  0D13                     l2388:
  3223                           
  3224                           ;MAIN.c: 283:     unidades += 48;
  3225  0D13  3030               	movlw	48
  3226  0D14  00F7               	movwf	??_valores
  3227  0D15  0877               	movf	??_valores,w
  3228  0D16  07C8               	addwf	valores@unidades,f
  3229  0D17                     l2390:
  3230                           
  3231                           ;MAIN.c: 285:     LCD_XY(2,1);
  3232  0D17  01F5               	clrf	LCD_XY@y
  3233  0D18  0AF5               	incf	LCD_XY@y,f
  3234  0D19  3002               	movlw	2
  3235  0D1A  120A  158A  23D5  120A  158A  	fcall	_LCD_XY
  3236  0D1F                     l2392:
  3237                           
  3238                           ;MAIN.c: 286:     LCD_Data(decenasdemiles);
  3239  0D1F  1283               	bcf	3,5	;RP0=0, select bank0
  3240  0D20  1303               	bcf	3,6	;RP1=0, select bank0
  3241  0D21  0849               	movf	valores@decenasdemiles,w
  3242  0D22  120A  158A  2403  120A  158A  	fcall	_LCD_Data
  3243  0D27                     l2394:
  3244                           
  3245                           ;MAIN.c: 287:     LCD_Data(miles);
  3246  0D27  1283               	bcf	3,5	;RP0=0, select bank0
  3247  0D28  1303               	bcf	3,6	;RP1=0, select bank0
  3248  0D29  0845               	movf	valores@miles,w
  3249  0D2A  120A  158A  2403  120A  158A  	fcall	_LCD_Data
  3250  0D2F                     l2396:
  3251                           
  3252                           ;MAIN.c: 288:     LCD_Data(centenas);
  3253  0D2F  1283               	bcf	3,5	;RP0=0, select bank0
  3254  0D30  1303               	bcf	3,6	;RP1=0, select bank0
  3255  0D31  0846               	movf	valores@centenas,w
  3256  0D32  120A  158A  2403  120A  158A  	fcall	_LCD_Data
  3257  0D37                     l2398:
  3258                           
  3259                           ;MAIN.c: 289:     LCD_Data(decenas);
  3260  0D37  1283               	bcf	3,5	;RP0=0, select bank0
  3261  0D38  1303               	bcf	3,6	;RP1=0, select bank0
  3262  0D39  0847               	movf	valores@decenas,w
  3263  0D3A  120A  158A  2403  120A  158A  	fcall	_LCD_Data
  3264  0D3F                     l2400:
  3265                           
  3266                           ;MAIN.c: 290:     LCD_Data(unidades);
  3267  0D3F  1283               	bcf	3,5	;RP0=0, select bank0
  3268  0D40  1303               	bcf	3,6	;RP1=0, select bank0
  3269  0D41  0848               	movf	valores@unidades,w
  3270  0D42  120A  158A  2403  120A  158A  	fcall	_LCD_Data
  3271  0D47                     l197:
  3272  0D47  0008               	return
  3273  0D48                     __end_of_valores:
  3274                           
  3275                           	psect	text3
  3276  0BD5                     __ptext3:	
  3277 ;; *************** function _LCD_XY *****************
  3278 ;; Defined at:
  3279 ;;		line 59 in file "LCD.c"
  3280 ;; Parameters:    Size  Location     Type
  3281 ;;  x               1    wreg     unsigned char 
  3282 ;;  y               1    5[COMMON] unsigned char 
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;  x               1    6[COMMON] unsigned char 
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  1    wreg      void 
  3287 ;; Registers used:
  3288 ;;		wreg, status,2, status,0, pclath, cstack
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3294 ;;      Params:         1       0       0       0       0
  3295 ;;      Locals:         1       0       0       0       0
  3296 ;;      Temps:          0       0       0       0       0
  3297 ;;      Totals:         2       0       0       0       0
  3298 ;;Total ram usage:        2 bytes
  3299 ;; Hardware stack levels used:    1
  3300 ;; Hardware stack levels required when called:    2
  3301 ;; This function calls:
  3302 ;;		_LCD_comando
  3303 ;; This function is called by:
  3304 ;;		_main
  3305 ;;		_valores
  3306 ;;		_valores2
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           
  3310                           
  3311                           ;psect for function _LCD_XY
  3312  0BD5                     _LCD_XY:
  3313                           
  3314                           ;incstack = 0
  3315                           ; Regs used in _LCD_XY: [wreg+status,2+status,0+pclath+cstack]
  3316                           ;LCD_XY@x stored from wreg
  3317  0BD5  00F6               	movwf	LCD_XY@x
  3318  0BD6                     l1634:
  3319                           
  3320                           ;LCD.c: 60:     if(x>0){
  3321  0BD6  0876               	movf	LCD_XY@x,w
  3322  0BD7  1903               	btfsc	3,2
  3323  0BD8  2BDA               	goto	u681
  3324  0BD9  2BDB               	goto	u680
  3325  0BDA                     u681:
  3326  0BDA  2BE3               	goto	l1638
  3327  0BDB                     u680:
  3328  0BDB                     l1636:
  3329                           
  3330                           ;LCD.c: 61:         LCD_comando(0xC0 + y);
  3331  0BDB  0875               	movf	LCD_XY@y,w
  3332  0BDC  3EC0               	addlw	192
  3333  0BDD  120A  158A  23EB  120A  158A  	fcall	_LCD_comando
  3334                           
  3335                           ;LCD.c: 62:     }
  3336  0BE2  2BEA               	goto	l257
  3337  0BE3                     l1638:
  3338                           
  3339                           ;LCD.c: 64:         LCD_comando(0x80 + y);
  3340  0BE3  0875               	movf	LCD_XY@y,w
  3341  0BE4  3E80               	addlw	128
  3342  0BE5  120A  158A  23EB  120A  158A  	fcall	_LCD_comando
  3343  0BEA                     l257:
  3344  0BEA  0008               	return
  3345  0BEB                     __end_of_LCD_XY:
  3346                           
  3347                           	psect	text4
  3348  0E51                     __ptext4:	
  3349 ;; *************** function _setup *****************
  3350 ;; Defined at:
  3351 ;;		line 192 in file "MAIN.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;		None
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;		None
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  1    wreg      void 
  3358 ;; Registers used:
  3359 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3365 ;;      Params:         0       0       0       0       0
  3366 ;;      Locals:         0       0       0       0       0
  3367 ;;      Temps:          0       0       0       0       0
  3368 ;;      Totals:         0       0       0       0       0
  3369 ;;Total ram usage:        0 bytes
  3370 ;; Hardware stack levels used:    1
  3371 ;; Hardware stack levels required when called:    3
  3372 ;; This function calls:
  3373 ;;		_ADC_Int
  3374 ;;		_I2C_Master_Init
  3375 ;;		_LCD_Init
  3376 ;;		_USART_Int
  3377 ;;		_canal
  3378 ;; This function is called by:
  3379 ;;		_main
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           
  3384                           ;psect for function _setup
  3385  0E51                     _setup:
  3386  0E51                     l2300:	
  3387                           ;incstack = 0
  3388                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3389                           
  3390                           
  3391                           ;MAIN.c: 193:     ANSEL = 0x00;
  3392  0E51  1683               	bsf	3,5	;RP0=1, select bank3
  3393  0E52  1703               	bsf	3,6	;RP1=1, select bank3
  3394  0E53  0188               	clrf	8	;volatile
  3395  0E54                     l2302:
  3396                           
  3397                           ;MAIN.c: 194:     ANSELH = 0b00010100;
  3398  0E54  3014               	movlw	20
  3399  0E55  0089               	movwf	9	;volatile
  3400  0E56                     l2304:
  3401                           
  3402                           ;MAIN.c: 196:     TRISA = 0x00;
  3403  0E56  1683               	bsf	3,5	;RP0=1, select bank1
  3404  0E57  1303               	bcf	3,6	;RP1=0, select bank1
  3405  0E58  0185               	clrf	5	;volatile
  3406                           
  3407                           ;MAIN.c: 197:     TRISE = 0x01;
  3408  0E59  3001               	movlw	1
  3409  0E5A  0089               	movwf	9	;volatile
  3410                           
  3411                           ;MAIN.c: 198:     TRISB = 0x07;
  3412  0E5B  3007               	movlw	7
  3413  0E5C  0086               	movwf	6	;volatile
  3414                           
  3415                           ;MAIN.c: 199:     TRISC = 0b10000000;
  3416  0E5D  3080               	movlw	128
  3417  0E5E  0087               	movwf	7	;volatile
  3418  0E5F                     l2306:
  3419                           
  3420                           ;MAIN.c: 200:     TRISD = 0;
  3421  0E5F  0188               	clrf	8	;volatile
  3422  0E60                     l2308:
  3423                           
  3424                           ;MAIN.c: 202:     PORTA = 0x00;
  3425  0E60  1283               	bcf	3,5	;RP0=0, select bank0
  3426  0E61  1303               	bcf	3,6	;RP1=0, select bank0
  3427  0E62  0185               	clrf	5	;volatile
  3428  0E63                     l2310:
  3429                           
  3430                           ;MAIN.c: 203:     PORTE = 0x00;
  3431  0E63  0189               	clrf	9	;volatile
  3432  0E64                     l2312:
  3433                           
  3434                           ;MAIN.c: 204:     PORTB = 0x00;
  3435  0E64  0186               	clrf	6	;volatile
  3436  0E65                     l2314:
  3437                           
  3438                           ;MAIN.c: 205:     PORTC = 0x00;
  3439  0E65  0187               	clrf	7	;volatile
  3440  0E66                     l2316:
  3441                           
  3442                           ;MAIN.c: 206:     PORTD = 0x00;
  3443  0E66  0188               	clrf	8	;volatile
  3444  0E67                     l2318:
  3445                           
  3446                           ;MAIN.c: 210:     TRISCbits.TRISC1 = 1;
  3447  0E67  1683               	bsf	3,5	;RP0=1, select bank1
  3448  0E68  1303               	bcf	3,6	;RP1=0, select bank1
  3449  0E69  1487               	bsf	7,1	;volatile
  3450                           
  3451                           ;MAIN.c: 213:     PR2 = 250;
  3452  0E6A  30FA               	movlw	250
  3453  0E6B  0092               	movwf	18	;volatile
  3454  0E6C                     l2320:
  3455                           
  3456                           ;MAIN.c: 216:     CCP1CONbits.P1M = 0b00;
  3457  0E6C  303F               	movlw	-193
  3458  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3459  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  3460  0E6F  0597               	andwf	23,f	;volatile
  3461  0E70                     l2322:
  3462                           
  3463                           ;MAIN.c: 217:     CCP1CONbits.CCP1M = 0b00001100;
  3464  0E70  0817               	movf	23,w	;volatile
  3465  0E71  39F0               	andlw	-16
  3466  0E72  380C               	iorlw	12
  3467  0E73  0097               	movwf	23	;volatile
  3468                           
  3469                           ;MAIN.c: 220:     CCPR1L = 125;
  3470  0E74  307D               	movlw	125
  3471  0E75  0095               	movwf	21	;volatile
  3472  0E76                     l2324:
  3473                           
  3474                           ;MAIN.c: 221:     CCP1CONbits.DC1B0 = 0;
  3475  0E76  1217               	bcf	23,4	;volatile
  3476  0E77                     l2326:
  3477                           
  3478                           ;MAIN.c: 222:     CCP1CONbits.DC1B1 = 0;
  3479  0E77  1297               	bcf	23,5	;volatile
  3480  0E78                     l2328:
  3481                           
  3482                           ;MAIN.c: 226:     PIR1bits.TMR2IF = 0;
  3483  0E78  108C               	bcf	12,1	;volatile
  3484  0E79                     l2330:
  3485                           
  3486                           ;MAIN.c: 227:     T2CONbits.T2CKPS = 0b11;
  3487  0E79  3003               	movlw	3
  3488  0E7A  0492               	iorwf	18,f	;volatile
  3489  0E7B                     l2332:
  3490                           
  3491                           ;MAIN.c: 228:     T2CONbits.TMR2ON = 1;
  3492  0E7B  1512               	bsf	18,2	;volatile
  3493  0E7C                     l188:	
  3494                           ;MAIN.c: 231:     while(!PIR1bits.TMR2IF);
  3495                           
  3496  0E7C  1C8C               	btfss	12,1	;volatile
  3497  0E7D  2E7F               	goto	u1281
  3498  0E7E  2E80               	goto	u1280
  3499  0E7F                     u1281:
  3500  0E7F  2E7C               	goto	l188
  3501  0E80                     u1280:
  3502  0E80                     l190:
  3503                           
  3504                           ;MAIN.c: 232:     PIR1bits.TMR2IF = 0;
  3505  0E80  108C               	bcf	12,1	;volatile
  3506                           
  3507                           ;MAIN.c: 235:     TRISCbits.TRISC1 = 0;
  3508  0E81  1683               	bsf	3,5	;RP0=1, select bank1
  3509  0E82  1303               	bcf	3,6	;RP1=0, select bank1
  3510  0E83  1087               	bcf	7,1	;volatile
  3511  0E84                     l2334:
  3512                           
  3513                           ;MAIN.c: 237:     OSCCONbits.IRCF = 0b111;
  3514  0E84  3070               	movlw	112
  3515  0E85  048F               	iorwf	15,f	;volatile
  3516  0E86                     l2336:
  3517                           
  3518                           ;MAIN.c: 238:     OSCCONbits.SCS = 1;
  3519  0E86  140F               	bsf	15,0	;volatile
  3520  0E87                     l2338:
  3521                           
  3522                           ;MAIN.c: 241:     OPTION_REGbits.nRBPU = 0;
  3523  0E87  1381               	bcf	1,7	;volatile
  3524  0E88                     l2340:
  3525                           
  3526                           ;MAIN.c: 242:     WPUBbits.WPUB2 = 1;
  3527  0E88  1515               	bsf	21,2	;volatile
  3528  0E89                     l2342:
  3529                           
  3530                           ;MAIN.c: 243:     IOCBbits.IOCB2 = 1;
  3531  0E89  1516               	bsf	22,2	;volatile
  3532  0E8A                     l2344:
  3533                           
  3534                           ;MAIN.c: 245:     INTCONbits.GIE = 1;
  3535  0E8A  178B               	bsf	11,7	;volatile
  3536  0E8B                     l2346:
  3537                           
  3538                           ;MAIN.c: 246:     INTCONbits.RBIE = 1;
  3539  0E8B  158B               	bsf	11,3	;volatile
  3540  0E8C                     l2348:
  3541                           
  3542                           ;MAIN.c: 247:     INTCONbits.RBIF = 0;
  3543  0E8C  100B               	bcf	11,0	;volatile
  3544  0E8D                     l2350:
  3545                           
  3546                           ;MAIN.c: 249:     cont = 0;
  3547  0E8D  1283               	bcf	3,5	;RP0=0, select bank0
  3548  0E8E  1303               	bcf	3,6	;RP1=0, select bank0
  3549  0E8F  01C0               	clrf	_cont
  3550  0E90                     l2352:
  3551                           
  3552                           ;MAIN.c: 251:     canal(12);
  3553  0E90  300C               	movlw	12
  3554  0E91  120A  118A  275D  120A  158A  	fcall	_canal
  3555  0E96                     l2354:
  3556                           
  3557                           ;MAIN.c: 252:     ADC_Int();
  3558  0E96  120A  158A  23BF  120A  158A  	fcall	_ADC_Int
  3559  0E9B                     l2356:
  3560                           
  3561                           ;MAIN.c: 254:     USART_Int();
  3562  0E9B  120A  158A  2394  120A  158A  	fcall	_USART_Int
  3563  0EA0                     l2358:
  3564                           
  3565                           ;MAIN.c: 255:     LCD_Init();
  3566  0EA0  120A  158A  2786  120A  158A  	fcall	_LCD_Init
  3567  0EA5                     l2360:
  3568                           
  3569                           ;MAIN.c: 256:     I2C_Master_Init(100000);
  3570  0EA5  3000               	movlw	0
  3571  0EA6  1283               	bcf	3,5	;RP0=0, select bank0
  3572  0EA7  1303               	bcf	3,6	;RP1=0, select bank0
  3573  0EA8  00D5               	movwf	I2C_Master_Init@c+3
  3574  0EA9  3001               	movlw	1
  3575  0EAA  00D4               	movwf	I2C_Master_Init@c+2
  3576  0EAB  3086               	movlw	134
  3577  0EAC  00D3               	movwf	I2C_Master_Init@c+1
  3578  0EAD  30A0               	movlw	160
  3579  0EAE  00D2               	movwf	I2C_Master_Init@c
  3580  0EAF  120A  158A  24C6  120A  158A  	fcall	_I2C_Master_Init
  3581  0EB4                     l191:
  3582  0EB4  0008               	return
  3583  0EB5                     __end_of_setup:
  3584                           
  3585                           	psect	text5
  3586  075D                     __ptext5:	
  3587 ;; *************** function _canal *****************
  3588 ;; Defined at:
  3589 ;;		line 32 in file "ADC.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;  c               1    wreg     unsigned char 
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;  c               1    5[COMMON] unsigned char 
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  1    wreg      void 
  3596 ;; Registers used:
  3597 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3603 ;;      Params:         0       0       0       0       0
  3604 ;;      Locals:         1       0       0       0       0
  3605 ;;      Temps:          2       0       0       0       0
  3606 ;;      Totals:         3       0       0       0       0
  3607 ;;Total ram usage:        3 bytes
  3608 ;; Hardware stack levels used:    1
  3609 ;; Hardware stack levels required when called:    1
  3610 ;; This function calls:
  3611 ;;		Nothing
  3612 ;; This function is called by:
  3613 ;;		_setup
  3614 ;; This function uses a non-reentrant model
  3615 ;;
  3616                           
  3617                           
  3618                           ;psect for function _canal
  3619  075D                     _canal:
  3620                           
  3621                           ;incstack = 0
  3622                           ; Regs used in _canal: [wreg-fsr0h+status,2+status,0]
  3623                           ;canal@c stored from wreg
  3624  075D  00F5               	movwf	canal@c
  3625  075E                     l1640:
  3626                           
  3627                           ;ADC.c: 34:     switch(c){
  3628  075E  2FC8               	goto	l1644
  3629  075F                     l334:	
  3630                           ;ADC.c: 35:         case 0:
  3631                           
  3632                           
  3633                           ;ADC.c: 36:             ADCON0bits.CHS3 = 0;
  3634  075F  1283               	bcf	3,5	;RP0=0, select bank0
  3635  0760  1303               	bcf	3,6	;RP1=0, select bank0
  3636  0761  129F               	bcf	31,5	;volatile
  3637                           
  3638                           ;ADC.c: 37:             ADCON0bits.CHS2 = 0;
  3639  0762  121F               	bcf	31,4	;volatile
  3640                           
  3641                           ;ADC.c: 38:             ADCON0bits.CHS1 = 0;
  3642  0763  119F               	bcf	31,3	;volatile
  3643                           
  3644                           ;ADC.c: 39:             ADCON0bits.CHS0 = 0;
  3645  0764  111F               	bcf	31,2	;volatile
  3646                           
  3647                           ;ADC.c: 40:             break;
  3648  0765  2FFC               	goto	l350
  3649  0766                     l336:	
  3650                           ;ADC.c: 42:         case 1:
  3651                           
  3652                           
  3653                           ;ADC.c: 43:             ADCON0bits.CHS3 = 0;
  3654  0766  1283               	bcf	3,5	;RP0=0, select bank0
  3655  0767  1303               	bcf	3,6	;RP1=0, select bank0
  3656  0768  129F               	bcf	31,5	;volatile
  3657                           
  3658                           ;ADC.c: 44:             ADCON0bits.CHS2 = 0;
  3659  0769  121F               	bcf	31,4	;volatile
  3660                           
  3661                           ;ADC.c: 45:             ADCON0bits.CHS1 = 0;
  3662  076A  119F               	bcf	31,3	;volatile
  3663                           
  3664                           ;ADC.c: 46:             ADCON0bits.CHS0 = 1;
  3665  076B  151F               	bsf	31,2	;volatile
  3666                           
  3667                           ;ADC.c: 47:             break;
  3668  076C  2FFC               	goto	l350
  3669  076D                     l337:	
  3670                           ;ADC.c: 49:         case 2:
  3671                           
  3672                           
  3673                           ;ADC.c: 50:             ADCON0bits.CHS3 = 0;
  3674  076D  1283               	bcf	3,5	;RP0=0, select bank0
  3675  076E  1303               	bcf	3,6	;RP1=0, select bank0
  3676  076F  129F               	bcf	31,5	;volatile
  3677                           
  3678                           ;ADC.c: 51:             ADCON0bits.CHS2 = 0;
  3679  0770  121F               	bcf	31,4	;volatile
  3680                           
  3681                           ;ADC.c: 52:             ADCON0bits.CHS1 = 1;
  3682  0771  159F               	bsf	31,3	;volatile
  3683                           
  3684                           ;ADC.c: 53:             ADCON0bits.CHS0 = 0;
  3685  0772  111F               	bcf	31,2	;volatile
  3686                           
  3687                           ;ADC.c: 54:             break;
  3688  0773  2FFC               	goto	l350
  3689  0774                     l338:	
  3690                           ;ADC.c: 56:         case 3:
  3691                           
  3692                           
  3693                           ;ADC.c: 57:             ADCON0bits.CHS3 = 0;
  3694  0774  1283               	bcf	3,5	;RP0=0, select bank0
  3695  0775  1303               	bcf	3,6	;RP1=0, select bank0
  3696  0776  129F               	bcf	31,5	;volatile
  3697                           
  3698                           ;ADC.c: 58:             ADCON0bits.CHS2 = 0;
  3699  0777  121F               	bcf	31,4	;volatile
  3700                           
  3701                           ;ADC.c: 59:             ADCON0bits.CHS1 = 1;
  3702  0778  159F               	bsf	31,3	;volatile
  3703                           
  3704                           ;ADC.c: 60:             ADCON0bits.CHS0 = 1;
  3705  0779  151F               	bsf	31,2	;volatile
  3706                           
  3707                           ;ADC.c: 61:             break;
  3708  077A  2FFC               	goto	l350
  3709  077B                     l339:	
  3710                           ;ADC.c: 63:         case 4:
  3711                           
  3712                           
  3713                           ;ADC.c: 64:             ADCON0bits.CHS3 = 0;
  3714  077B  1283               	bcf	3,5	;RP0=0, select bank0
  3715  077C  1303               	bcf	3,6	;RP1=0, select bank0
  3716  077D  129F               	bcf	31,5	;volatile
  3717                           
  3718                           ;ADC.c: 65:             ADCON0bits.CHS2 = 1;
  3719  077E  161F               	bsf	31,4	;volatile
  3720                           
  3721                           ;ADC.c: 66:             ADCON0bits.CHS1 = 0;
  3722  077F  119F               	bcf	31,3	;volatile
  3723                           
  3724                           ;ADC.c: 67:             ADCON0bits.CHS0 = 0;
  3725  0780  111F               	bcf	31,2	;volatile
  3726                           
  3727                           ;ADC.c: 68:             break;
  3728  0781  2FFC               	goto	l350
  3729  0782                     l340:	
  3730                           ;ADC.c: 70:         case 5:
  3731                           
  3732                           
  3733                           ;ADC.c: 71:             ADCON0bits.CHS3 = 0;
  3734  0782  1283               	bcf	3,5	;RP0=0, select bank0
  3735  0783  1303               	bcf	3,6	;RP1=0, select bank0
  3736  0784  129F               	bcf	31,5	;volatile
  3737                           
  3738                           ;ADC.c: 72:             ADCON0bits.CHS2 = 1;
  3739  0785  161F               	bsf	31,4	;volatile
  3740                           
  3741                           ;ADC.c: 73:             ADCON0bits.CHS1 = 0;
  3742  0786  119F               	bcf	31,3	;volatile
  3743                           
  3744                           ;ADC.c: 74:             ADCON0bits.CHS0 = 1;
  3745  0787  151F               	bsf	31,2	;volatile
  3746                           
  3747                           ;ADC.c: 75:             break;
  3748  0788  2FFC               	goto	l350
  3749  0789                     l341:	
  3750                           ;ADC.c: 77:         case 6:
  3751                           
  3752                           
  3753                           ;ADC.c: 78:             ADCON0bits.CHS3 = 0;
  3754  0789  1283               	bcf	3,5	;RP0=0, select bank0
  3755  078A  1303               	bcf	3,6	;RP1=0, select bank0
  3756  078B  129F               	bcf	31,5	;volatile
  3757                           
  3758                           ;ADC.c: 79:             ADCON0bits.CHS2 = 1;
  3759  078C  161F               	bsf	31,4	;volatile
  3760                           
  3761                           ;ADC.c: 80:             ADCON0bits.CHS1 = 1;
  3762  078D  159F               	bsf	31,3	;volatile
  3763                           
  3764                           ;ADC.c: 81:             ADCON0bits.CHS0 = 0;
  3765  078E  111F               	bcf	31,2	;volatile
  3766                           
  3767                           ;ADC.c: 82:             break;
  3768  078F  2FFC               	goto	l350
  3769  0790                     l342:	
  3770                           ;ADC.c: 84:         case 7:
  3771                           
  3772                           
  3773                           ;ADC.c: 85:             ADCON0bits.CHS3 = 0;
  3774  0790  1283               	bcf	3,5	;RP0=0, select bank0
  3775  0791  1303               	bcf	3,6	;RP1=0, select bank0
  3776  0792  129F               	bcf	31,5	;volatile
  3777                           
  3778                           ;ADC.c: 86:             ADCON0bits.CHS2 = 1;
  3779  0793  161F               	bsf	31,4	;volatile
  3780                           
  3781                           ;ADC.c: 87:             ADCON0bits.CHS1 = 1;
  3782  0794  159F               	bsf	31,3	;volatile
  3783                           
  3784                           ;ADC.c: 88:             ADCON0bits.CHS0 = 1;
  3785  0795  151F               	bsf	31,2	;volatile
  3786                           
  3787                           ;ADC.c: 89:             break;
  3788  0796  2FFC               	goto	l350
  3789  0797                     l343:	
  3790                           ;ADC.c: 91:         case 8:
  3791                           
  3792                           
  3793                           ;ADC.c: 92:             ADCON0bits.CHS3 = 1;
  3794  0797  1283               	bcf	3,5	;RP0=0, select bank0
  3795  0798  1303               	bcf	3,6	;RP1=0, select bank0
  3796  0799  169F               	bsf	31,5	;volatile
  3797                           
  3798                           ;ADC.c: 93:             ADCON0bits.CHS2 = 0;
  3799  079A  121F               	bcf	31,4	;volatile
  3800                           
  3801                           ;ADC.c: 94:             ADCON0bits.CHS1 = 0;
  3802  079B  119F               	bcf	31,3	;volatile
  3803                           
  3804                           ;ADC.c: 95:             ADCON0bits.CHS0 = 0;
  3805  079C  111F               	bcf	31,2	;volatile
  3806                           
  3807                           ;ADC.c: 96:             break;
  3808  079D  2FFC               	goto	l350
  3809  079E                     l344:	
  3810                           ;ADC.c: 98:         case 9:
  3811                           
  3812                           
  3813                           ;ADC.c: 99:             ADCON0bits.CHS3 = 1;
  3814  079E  1283               	bcf	3,5	;RP0=0, select bank0
  3815  079F  1303               	bcf	3,6	;RP1=0, select bank0
  3816  07A0  169F               	bsf	31,5	;volatile
  3817                           
  3818                           ;ADC.c: 100:             ADCON0bits.CHS2 = 0;
  3819  07A1  121F               	bcf	31,4	;volatile
  3820                           
  3821                           ;ADC.c: 101:             ADCON0bits.CHS1 = 0;
  3822  07A2  119F               	bcf	31,3	;volatile
  3823                           
  3824                           ;ADC.c: 102:             ADCON0bits.CHS0 = 1;
  3825  07A3  151F               	bsf	31,2	;volatile
  3826                           
  3827                           ;ADC.c: 103:             break;
  3828  07A4  2FFC               	goto	l350
  3829  07A5                     l345:	
  3830                           ;ADC.c: 105:         case 10:
  3831                           
  3832                           
  3833                           ;ADC.c: 106:             ADCON0bits.CHS3 = 1;
  3834  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  3835  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  3836  07A7  169F               	bsf	31,5	;volatile
  3837                           
  3838                           ;ADC.c: 107:             ADCON0bits.CHS2 = 0;
  3839  07A8  121F               	bcf	31,4	;volatile
  3840                           
  3841                           ;ADC.c: 108:             ADCON0bits.CHS1 = 1;
  3842  07A9  159F               	bsf	31,3	;volatile
  3843                           
  3844                           ;ADC.c: 109:             ADCON0bits.CHS0 = 0;
  3845  07AA  111F               	bcf	31,2	;volatile
  3846                           
  3847                           ;ADC.c: 110:             break;
  3848  07AB  2FFC               	goto	l350
  3849  07AC                     l346:	
  3850                           ;ADC.c: 112:         case 11:
  3851                           
  3852                           
  3853                           ;ADC.c: 113:             ADCON0bits.CHS3 = 1;
  3854  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  3855  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  3856  07AE  169F               	bsf	31,5	;volatile
  3857                           
  3858                           ;ADC.c: 114:             ADCON0bits.CHS2 = 0;
  3859  07AF  121F               	bcf	31,4	;volatile
  3860                           
  3861                           ;ADC.c: 115:             ADCON0bits.CHS1 = 1;
  3862  07B0  159F               	bsf	31,3	;volatile
  3863                           
  3864                           ;ADC.c: 116:             ADCON0bits.CHS0 = 1;
  3865  07B1  151F               	bsf	31,2	;volatile
  3866                           
  3867                           ;ADC.c: 117:             break;
  3868  07B2  2FFC               	goto	l350
  3869  07B3                     l347:	
  3870                           ;ADC.c: 119:         case 12:
  3871                           
  3872                           
  3873                           ;ADC.c: 120:             ADCON0bits.CHS3 = 1;
  3874  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  3875  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  3876  07B5  169F               	bsf	31,5	;volatile
  3877                           
  3878                           ;ADC.c: 121:             ADCON0bits.CHS2 = 1;
  3879  07B6  161F               	bsf	31,4	;volatile
  3880                           
  3881                           ;ADC.c: 122:             ADCON0bits.CHS1 = 0;
  3882  07B7  119F               	bcf	31,3	;volatile
  3883                           
  3884                           ;ADC.c: 123:             ADCON0bits.CHS0 = 0;
  3885  07B8  111F               	bcf	31,2	;volatile
  3886                           
  3887                           ;ADC.c: 124:             break;
  3888  07B9  2FFC               	goto	l350
  3889  07BA                     l348:	
  3890                           ;ADC.c: 126:         case 13:
  3891                           
  3892                           
  3893                           ;ADC.c: 127:             ADCON0bits.CHS3 = 1;
  3894  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  3895  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  3896  07BC  169F               	bsf	31,5	;volatile
  3897                           
  3898                           ;ADC.c: 128:             ADCON0bits.CHS2 = 1;
  3899  07BD  161F               	bsf	31,4	;volatile
  3900                           
  3901                           ;ADC.c: 129:             ADCON0bits.CHS1 = 0;
  3902  07BE  119F               	bcf	31,3	;volatile
  3903                           
  3904                           ;ADC.c: 130:             ADCON0bits.CHS0 = 1;
  3905  07BF  151F               	bsf	31,2	;volatile
  3906                           
  3907                           ;ADC.c: 131:             break;
  3908  07C0  2FFC               	goto	l350
  3909  07C1                     l349:	
  3910                           ;ADC.c: 133:         default:
  3911                           
  3912                           
  3913                           ;ADC.c: 134:             ADCON0bits.CHS3 = 0;
  3914  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  3915  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  3916  07C3  129F               	bcf	31,5	;volatile
  3917                           
  3918                           ;ADC.c: 135:             ADCON0bits.CHS2 = 0;
  3919  07C4  121F               	bcf	31,4	;volatile
  3920                           
  3921                           ;ADC.c: 136:             ADCON0bits.CHS1 = 0;
  3922  07C5  119F               	bcf	31,3	;volatile
  3923                           
  3924                           ;ADC.c: 137:             ADCON0bits.CHS0 = 0;
  3925  07C6  111F               	bcf	31,2	;volatile
  3926                           
  3927                           ;ADC.c: 138:             break;
  3928  07C7  2FFC               	goto	l350
  3929  07C8                     l1644:
  3930  07C8  0875               	movf	canal@c,w
  3931  07C9  00F3               	movwf	??_canal
  3932  07CA  01F4               	clrf	??_canal+1
  3933                           
  3934                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3935                           ; Switch size 1, requested type "simple"
  3936                           ; Number of cases is 1, Range of values is 0 to 0
  3937                           ; switch strategies available:
  3938                           ; Name         Instructions Cycles
  3939                           ; simple_byte            4     3 (average)
  3940                           ; direct_byte           11     8 (fixed)
  3941                           ; jumptable            260     6 (fixed)
  3942                           ;	Chosen strategy is simple_byte
  3943  07CB  0874               	movf	??_canal+1,w
  3944  07CC  3A00               	xorlw	0	; case 0
  3945  07CD  1903               	skipnz
  3946  07CE  2FD0               	goto	l2666
  3947  07CF  2FC1               	goto	l349
  3948  07D0                     l2666:
  3949                           
  3950                           ; Switch size 1, requested type "simple"
  3951                           ; Number of cases is 14, Range of values is 0 to 13
  3952                           ; switch strategies available:
  3953                           ; Name         Instructions Cycles
  3954                           ; simple_byte           43    22 (average)
  3955                           ; direct_byte           50     8 (fixed)
  3956                           ; jumptable            260     6 (fixed)
  3957                           ;	Chosen strategy is simple_byte
  3958  07D0  0873               	movf	??_canal,w
  3959  07D1  3A00               	xorlw	0	; case 0
  3960  07D2  1903               	skipnz
  3961  07D3  2F5F               	goto	l334
  3962  07D4  3A01               	xorlw	1	; case 1
  3963  07D5  1903               	skipnz
  3964  07D6  2F66               	goto	l336
  3965  07D7  3A03               	xorlw	3	; case 2
  3966  07D8  1903               	skipnz
  3967  07D9  2F6D               	goto	l337
  3968  07DA  3A01               	xorlw	1	; case 3
  3969  07DB  1903               	skipnz
  3970  07DC  2F74               	goto	l338
  3971  07DD  3A07               	xorlw	7	; case 4
  3972  07DE  1903               	skipnz
  3973  07DF  2F7B               	goto	l339
  3974  07E0  3A01               	xorlw	1	; case 5
  3975  07E1  1903               	skipnz
  3976  07E2  2F82               	goto	l340
  3977  07E3  3A03               	xorlw	3	; case 6
  3978  07E4  1903               	skipnz
  3979  07E5  2F89               	goto	l341
  3980  07E6  3A01               	xorlw	1	; case 7
  3981  07E7  1903               	skipnz
  3982  07E8  2F90               	goto	l342
  3983  07E9  3A0F               	xorlw	15	; case 8
  3984  07EA  1903               	skipnz
  3985  07EB  2F97               	goto	l343
  3986  07EC  3A01               	xorlw	1	; case 9
  3987  07ED  1903               	skipnz
  3988  07EE  2F9E               	goto	l344
  3989  07EF  3A03               	xorlw	3	; case 10
  3990  07F0  1903               	skipnz
  3991  07F1  2FA5               	goto	l345
  3992  07F2  3A01               	xorlw	1	; case 11
  3993  07F3  1903               	skipnz
  3994  07F4  2FAC               	goto	l346
  3995  07F5  3A07               	xorlw	7	; case 12
  3996  07F6  1903               	skipnz
  3997  07F7  2FB3               	goto	l347
  3998  07F8  3A01               	xorlw	1	; case 13
  3999  07F9  1903               	skipnz
  4000  07FA  2FBA               	goto	l348
  4001  07FB  2FC1               	goto	l349
  4002  07FC                     l350:
  4003  07FC  0008               	return
  4004  07FD                     __end_of_canal:
  4005                           
  4006                           	psect	text6
  4007  0B94                     __ptext6:	
  4008 ;; *************** function _USART_Int *****************
  4009 ;; Defined at:
  4010 ;;		line 11 in file "USART.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;		None
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;		None
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  1    wreg      void 
  4017 ;; Registers used:
  4018 ;;		wreg, status,2
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4024 ;;      Params:         0       0       0       0       0
  4025 ;;      Locals:         0       0       0       0       0
  4026 ;;      Temps:          0       0       0       0       0
  4027 ;;      Totals:         0       0       0       0       0
  4028 ;;Total ram usage:        0 bytes
  4029 ;; Hardware stack levels used:    1
  4030 ;; Hardware stack levels required when called:    1
  4031 ;; This function calls:
  4032 ;;		Nothing
  4033 ;; This function is called by:
  4034 ;;		_setup
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           
  4039                           ;psect for function _USART_Int
  4040  0B94                     _USART_Int:
  4041  0B94                     l1656:	
  4042                           ;incstack = 0
  4043                           ; Regs used in _USART_Int: [wreg+status,2]
  4044                           
  4045                           
  4046                           ;USART.c: 13:     TXSTAbits.SYNC = 0;
  4047  0B94  1683               	bsf	3,5	;RP0=1, select bank1
  4048  0B95  1303               	bcf	3,6	;RP1=0, select bank1
  4049  0B96  1218               	bcf	24,4	;volatile
  4050                           
  4051                           ;USART.c: 14:     TXSTAbits.BRGH = 1;
  4052  0B97  1518               	bsf	24,2	;volatile
  4053                           
  4054                           ;USART.c: 15:     BAUDCTLbits.BRG16 = 1;
  4055  0B98  1683               	bsf	3,5	;RP0=1, select bank3
  4056  0B99  1703               	bsf	3,6	;RP1=1, select bank3
  4057  0B9A  1587               	bsf	7,3	;volatile
  4058  0B9B                     l1658:
  4059                           
  4060                           ;USART.c: 17:     SPBRG = 207;
  4061  0B9B  30CF               	movlw	207
  4062  0B9C  1683               	bsf	3,5	;RP0=1, select bank1
  4063  0B9D  1303               	bcf	3,6	;RP1=0, select bank1
  4064  0B9E  0099               	movwf	25	;volatile
  4065  0B9F                     l1660:
  4066                           
  4067                           ;USART.c: 18:     SPBRGH = 0;
  4068  0B9F  019A               	clrf	26	;volatile
  4069  0BA0                     l1662:
  4070                           
  4071                           ;USART.c: 20:     RCSTAbits.SPEN = 1;
  4072  0BA0  1283               	bcf	3,5	;RP0=0, select bank0
  4073  0BA1  1303               	bcf	3,6	;RP1=0, select bank0
  4074  0BA2  1798               	bsf	24,7	;volatile
  4075  0BA3                     l1664:
  4076                           
  4077                           ;USART.c: 21:     RCSTAbits.RX9 = 0;
  4078  0BA3  1318               	bcf	24,6	;volatile
  4079  0BA4                     l1666:
  4080                           
  4081                           ;USART.c: 22:     RCSTAbits.CREN = 1;
  4082  0BA4  1618               	bsf	24,4	;volatile
  4083  0BA5                     l1668:
  4084                           
  4085                           ;USART.c: 23:     TXSTAbits.TXEN = 1;
  4086  0BA5  1683               	bsf	3,5	;RP0=1, select bank1
  4087  0BA6  1303               	bcf	3,6	;RP1=0, select bank1
  4088  0BA7  1698               	bsf	24,5	;volatile
  4089  0BA8                     l217:
  4090  0BA8  0008               	return
  4091  0BA9                     __end_of_USART_Int:
  4092                           
  4093                           	psect	text7
  4094  0F86                     __ptext7:	
  4095 ;; *************** function _LCD_Init *****************
  4096 ;; Defined at:
  4097 ;;		line 14 in file "LCD.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;		None
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;		None
  4102 ;; Return value:  Size  Location     Type
  4103 ;;                  1    wreg      void 
  4104 ;; Registers used:
  4105 ;;		wreg, status,2, status,0, pclath, cstack
  4106 ;; Tracked objects:
  4107 ;;		On entry : 0/0
  4108 ;;		On exit  : 0/0
  4109 ;;		Unchanged: 0/0
  4110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4111 ;;      Params:         0       0       0       0       0
  4112 ;;      Locals:         0       0       0       0       0
  4113 ;;      Temps:          2       0       0       0       0
  4114 ;;      Totals:         2       0       0       0       0
  4115 ;;Total ram usage:        2 bytes
  4116 ;; Hardware stack levels used:    1
  4117 ;; Hardware stack levels required when called:    2
  4118 ;; This function calls:
  4119 ;;		_LCD_comando
  4120 ;; This function is called by:
  4121 ;;		_setup
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125                           
  4126                           ;psect for function _LCD_Init
  4127  0F86                     _LCD_Init:
  4128  0F86                     l1670:	
  4129                           ;incstack = 0
  4130                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  4131                           
  4132                           
  4133                           ;LCD.c: 15:     PORTD = PORTD & 0x00;
  4134  0F86  1283               	bcf	3,5	;RP0=0, select bank0
  4135  0F87  1303               	bcf	3,6	;RP1=0, select bank0
  4136  0F88  0188               	clrf	8	;volatile
  4137                           
  4138                           ;LCD.c: 16:     TRISD = 0x00;
  4139  0F89  1683               	bsf	3,5	;RP0=1, select bank1
  4140  0F8A  1303               	bcf	3,6	;RP1=0, select bank1
  4141  0F8B  0188               	clrf	8	;volatile
  4142  0F8C                     l1672:
  4143                           
  4144                           ;LCD.c: 17:     TRISEbits.TRISE0 = 0;
  4145  0F8C  1009               	bcf	9,0	;volatile
  4146  0F8D                     l1674:
  4147                           
  4148                           ;LCD.c: 18:     TRISEbits.TRISE1 = 0;
  4149  0F8D  1089               	bcf	9,1	;volatile
  4150  0F8E                     l1676:
  4151                           
  4152                           ;LCD.c: 19:     TRISEbits.TRISE2 = 0;
  4153  0F8E  1109               	bcf	9,2	;volatile
  4154  0F8F                     l1678:
  4155                           
  4156                           ;LCD.c: 20:     PORTEbits.RE0 = 0;
  4157  0F8F  1283               	bcf	3,5	;RP0=0, select bank0
  4158  0F90  1303               	bcf	3,6	;RP1=0, select bank0
  4159  0F91  1009               	bcf	9,0	;volatile
  4160  0F92                     l1680:
  4161                           
  4162                           ;LCD.c: 21:     PORTEbits.RE1 = 0;
  4163  0F92  1089               	bcf	9,1	;volatile
  4164  0F93                     l1682:
  4165                           
  4166                           ;LCD.c: 22:     PORTEbits.RE2 = 0;
  4167  0F93  1109               	bcf	9,2	;volatile
  4168  0F94                     l1684:
  4169                           
  4170                           ;LCD.c: 24:     _delay((unsigned long)((16)*(8000000/4000.0)));
  4171  0F94  302A               	movlw	42
  4172  0F95  00F6               	movwf	??_LCD_Init+1
  4173  0F96  308D               	movlw	141
  4174  0F97  00F5               	movwf	??_LCD_Init
  4175  0F98                     u1587:
  4176  0F98  0BF5               	decfsz	??_LCD_Init,f
  4177  0F99  2F98               	goto	u1587
  4178  0F9A  0BF6               	decfsz	??_LCD_Init+1,f
  4179  0F9B  2F98               	goto	u1587
  4180  0F9C  2F9D               	nop2
  4181  0F9D                     l1686:
  4182                           
  4183                           ;LCD.c: 25:     LCD_comando(0b00110000);
  4184  0F9D  3030               	movlw	48
  4185  0F9E  120A  158A  23EB  120A  158A  	fcall	_LCD_comando
  4186  0FA3                     l1688:
  4187                           
  4188                           ;LCD.c: 26:     _delay((unsigned long)((5)*(8000000/4000.0)));
  4189  0FA3  300D               	movlw	13
  4190  0FA4  00F6               	movwf	??_LCD_Init+1
  4191  0FA5  30FB               	movlw	251
  4192  0FA6  00F5               	movwf	??_LCD_Init
  4193  0FA7                     u1597:
  4194  0FA7  0BF5               	decfsz	??_LCD_Init,f
  4195  0FA8  2FA7               	goto	u1597
  4196  0FA9  0BF6               	decfsz	??_LCD_Init+1,f
  4197  0FAA  2FA7               	goto	u1597
  4198  0FAB  2FAC               	nop2
  4199  0FAC                     l1690:
  4200                           
  4201                           ;LCD.c: 27:     LCD_comando(0b00110000);
  4202  0FAC  3030               	movlw	48
  4203  0FAD  120A  158A  23EB  120A  158A  	fcall	_LCD_comando
  4204  0FB2                     l1692:
  4205                           
  4206                           ;LCD.c: 28:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  4207  0FB2  3042               	movlw	66
  4208  0FB3  00F5               	movwf	??_LCD_Init
  4209  0FB4                     u1607:
  4210  0FB4  0BF5               	decfsz	??_LCD_Init,f
  4211  0FB5  2FB4               	goto	u1607
  4212  0FB6  0000               	nop
  4213  0FB7                     l1694:
  4214                           
  4215                           ;LCD.c: 29:     LCD_comando(0b00110000);
  4216  0FB7  3030               	movlw	48
  4217  0FB8  120A  158A  23EB  120A  158A  	fcall	_LCD_comando
  4218  0FBD                     l1696:
  4219                           
  4220                           ;LCD.c: 30:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  4221  0FBD  3042               	movlw	66
  4222  0FBE  00F5               	movwf	??_LCD_Init
  4223  0FBF                     u1617:
  4224  0FBF  0BF5               	decfsz	??_LCD_Init,f
  4225  0FC0  2FBF               	goto	u1617
  4226  0FC1  0000               	nop
  4227  0FC2                     l1698:
  4228                           
  4229                           ;LCD.c: 33:     LCD_comando(0b00111000);
  4230  0FC2  3038               	movlw	56
  4231  0FC3  120A  158A  23EB  120A  158A  	fcall	_LCD_comando
  4232  0FC8                     l1700:
  4233                           
  4234                           ;LCD.c: 34:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  4235  0FC8  3042               	movlw	66
  4236  0FC9  00F5               	movwf	??_LCD_Init
  4237  0FCA                     u1627:
  4238  0FCA  0BF5               	decfsz	??_LCD_Init,f
  4239  0FCB  2FCA               	goto	u1627
  4240  0FCC  0000               	nop
  4241  0FCD                     l1702:
  4242                           
  4243                           ;LCD.c: 35:     LCD_comando(0b00001000);
  4244  0FCD  3008               	movlw	8
  4245  0FCE  120A  158A  23EB  120A  158A  	fcall	_LCD_comando
  4246  0FD3                     l1704:
  4247                           
  4248                           ;LCD.c: 36:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  4249  0FD3  3042               	movlw	66
  4250  0FD4  00F5               	movwf	??_LCD_Init
  4251  0FD5                     u1637:
  4252  0FD5  0BF5               	decfsz	??_LCD_Init,f
  4253  0FD6  2FD5               	goto	u1637
  4254  0FD7  0000               	nop
  4255  0FD8                     l1706:
  4256                           
  4257                           ;LCD.c: 37:     LCD_comando(0b00000001);
  4258  0FD8  3001               	movlw	1
  4259  0FD9  120A  158A  23EB  120A  158A  	fcall	_LCD_comando
  4260  0FDE                     l1708:
  4261                           
  4262                           ;LCD.c: 38:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  4263  0FDE  3042               	movlw	66
  4264  0FDF  00F5               	movwf	??_LCD_Init
  4265  0FE0                     u1647:
  4266  0FE0  0BF5               	decfsz	??_LCD_Init,f
  4267  0FE1  2FE0               	goto	u1647
  4268  0FE2  0000               	nop
  4269  0FE3                     l1710:
  4270                           
  4271                           ;LCD.c: 39:     LCD_comando(0b00000100);
  4272  0FE3  3004               	movlw	4
  4273  0FE4  120A  158A  23EB  120A  158A  	fcall	_LCD_comando
  4274  0FE9                     l1712:
  4275                           
  4276                           ;LCD.c: 40:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  4277  0FE9  3042               	movlw	66
  4278  0FEA  00F5               	movwf	??_LCD_Init
  4279  0FEB                     u1657:
  4280  0FEB  0BF5               	decfsz	??_LCD_Init,f
  4281  0FEC  2FEB               	goto	u1657
  4282  0FED  0000               	nop
  4283  0FEE                     l1714:
  4284                           
  4285                           ;LCD.c: 41:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  4286  0FEE  3042               	movlw	66
  4287  0FEF  00F5               	movwf	??_LCD_Init
  4288  0FF0                     u1667:
  4289  0FF0  0BF5               	decfsz	??_LCD_Init,f
  4290  0FF1  2FF0               	goto	u1667
  4291  0FF2  0000               	nop
  4292  0FF3                     l1716:
  4293                           
  4294                           ;LCD.c: 42:     LCD_comando(0x06);
  4295  0FF3  3006               	movlw	6
  4296  0FF4  120A  158A  23EB  120A  158A  	fcall	_LCD_comando
  4297  0FF9                     l1718:
  4298                           
  4299                           ;LCD.c: 43:     LCD_comando(0x0C);
  4300  0FF9  300C               	movlw	12
  4301  0FFA  120A  158A  23EB  120A  158A  	fcall	_LCD_comando
  4302  0FFF                     l249:
  4303  0FFF  0008               	return
  4304  1000                     __end_of_LCD_Init:
  4305                           
  4306                           	psect	text8
  4307  0BEB                     __ptext8:	
  4308 ;; *************** function _LCD_comando *****************
  4309 ;; Defined at:
  4310 ;;		line 47 in file "LCD.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;  dato            1    wreg     unsigned char 
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;  dato            1    4[COMMON] unsigned char 
  4315 ;; Return value:  Size  Location     Type
  4316 ;;                  1    wreg      void 
  4317 ;; Registers used:
  4318 ;;		wreg
  4319 ;; Tracked objects:
  4320 ;;		On entry : 0/0
  4321 ;;		On exit  : 0/0
  4322 ;;		Unchanged: 0/0
  4323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4324 ;;      Params:         0       0       0       0       0
  4325 ;;      Locals:         1       0       0       0       0
  4326 ;;      Temps:          1       0       0       0       0
  4327 ;;      Totals:         2       0       0       0       0
  4328 ;;Total ram usage:        2 bytes
  4329 ;; Hardware stack levels used:    1
  4330 ;; Hardware stack levels required when called:    1
  4331 ;; This function calls:
  4332 ;;		Nothing
  4333 ;; This function is called by:
  4334 ;;		_LCD_Init
  4335 ;;		_LCD_XY
  4336 ;; This function uses a non-reentrant model
  4337 ;;
  4338                           
  4339                           
  4340                           ;psect for function _LCD_comando
  4341  0BEB                     _LCD_comando:
  4342                           
  4343                           ;incstack = 0
  4344                           ; Regs used in _LCD_comando: [wreg]
  4345                           ;LCD_comando@dato stored from wreg
  4346  0BEB  00F4               	movwf	LCD_comando@dato
  4347  0BEC                     l1594:
  4348                           
  4349                           ;LCD.c: 48:     PORTD = dato;
  4350  0BEC  0874               	movf	LCD_comando@dato,w
  4351  0BED  1283               	bcf	3,5	;RP0=0, select bank0
  4352  0BEE  1303               	bcf	3,6	;RP1=0, select bank0
  4353  0BEF  0088               	movwf	8	;volatile
  4354  0BF0                     l1596:
  4355                           
  4356                           ;LCD.c: 49:     PORTEbits.RE0 = 0;
  4357  0BF0  1009               	bcf	9,0	;volatile
  4358  0BF1                     l1598:
  4359                           
  4360                           ;LCD.c: 50:     PORTEbits.RE1 = 0;
  4361  0BF1  1089               	bcf	9,1	;volatile
  4362                           
  4363                           ;LCD.c: 51:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  4364  0BF2  3006               	movlw	6
  4365  0BF3  00F3               	movwf	??_LCD_comando
  4366  0BF4                     u1677:
  4367  0BF4  0BF3               	decfsz	??_LCD_comando,f
  4368  0BF5  2BF4               	goto	u1677
  4369  0BF6  0000               	nop
  4370  0BF7                     l1600:
  4371                           
  4372                           ;LCD.c: 52:     PORTEbits.RE2 = 1;
  4373  0BF7  1283               	bcf	3,5	;RP0=0, select bank0
  4374  0BF8  1303               	bcf	3,6	;RP1=0, select bank0
  4375  0BF9  1509               	bsf	9,2	;volatile
  4376                           
  4377                           ;LCD.c: 53:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  4378  0BFA  3006               	movlw	6
  4379  0BFB  00F3               	movwf	??_LCD_comando
  4380  0BFC                     u1687:
  4381  0BFC  0BF3               	decfsz	??_LCD_comando,f
  4382  0BFD  2BFC               	goto	u1687
  4383  0BFE  0000               	nop
  4384  0BFF                     l1602:
  4385                           
  4386                           ;LCD.c: 54:     PORTEbits.RE2 = 0;
  4387  0BFF  1283               	bcf	3,5	;RP0=0, select bank0
  4388  0C00  1303               	bcf	3,6	;RP1=0, select bank0
  4389  0C01  1109               	bcf	9,2	;volatile
  4390  0C02                     l252:
  4391  0C02  0008               	return
  4392  0C03                     __end_of_LCD_comando:
  4393                           
  4394                           	psect	text9
  4395  0CC6                     __ptext9:	
  4396 ;; *************** function _I2C_Master_Init *****************
  4397 ;; Defined at:
  4398 ;;		line 14 in file "I2C.c"
  4399 ;; Parameters:    Size  Location     Type
  4400 ;;  c               4   13[BANK0 ] const unsigned long 
  4401 ;; Auto vars:     Size  Location     Type
  4402 ;;		None
  4403 ;; Return value:  Size  Location     Type
  4404 ;;                  1    wreg      void 
  4405 ;; Registers used:
  4406 ;;		wreg, status,2, status,0, pclath, cstack
  4407 ;; Tracked objects:
  4408 ;;		On entry : 0/0
  4409 ;;		On exit  : 0/0
  4410 ;;		Unchanged: 0/0
  4411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4412 ;;      Params:         0       4       0       0       0
  4413 ;;      Locals:         0       0       0       0       0
  4414 ;;      Temps:          4       0       0       0       0
  4415 ;;      Totals:         4       4       0       0       0
  4416 ;;Total ram usage:        8 bytes
  4417 ;; Hardware stack levels used:    1
  4418 ;; Hardware stack levels required when called:    2
  4419 ;; This function calls:
  4420 ;;		___lldiv
  4421 ;; This function is called by:
  4422 ;;		_setup
  4423 ;; This function uses a non-reentrant model
  4424 ;;
  4425                           
  4426                           
  4427                           ;psect for function _I2C_Master_Init
  4428  0CC6                     _I2C_Master_Init:
  4429  0CC6                     l2260:	
  4430                           ;incstack = 0
  4431                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  4432                           
  4433                           
  4434                           ;I2C.c: 14: void I2C_Master_Init(const unsigned long c);I2C.c: 15: {;I2C.c: 16:     SSPC
      +                          ON = 0b00101000;
  4435  0CC6  3028               	movlw	40
  4436  0CC7  1283               	bcf	3,5	;RP0=0, select bank0
  4437  0CC8  1303               	bcf	3,6	;RP1=0, select bank0
  4438  0CC9  0094               	movwf	20	;volatile
  4439  0CCA                     l2262:
  4440                           
  4441                           ;I2C.c: 17:     SSPCON2 = 0;
  4442  0CCA  1683               	bsf	3,5	;RP0=1, select bank1
  4443  0CCB  1303               	bcf	3,6	;RP1=0, select bank1
  4444  0CCC  0191               	clrf	17	;volatile
  4445  0CCD                     l2264:
  4446                           
  4447                           ;I2C.c: 18:     SSPADD = (8000000/(4*c))-1;
  4448  0CCD  1283               	bcf	3,5	;RP0=0, select bank0
  4449  0CCE  1303               	bcf	3,6	;RP1=0, select bank0
  4450  0CCF  0852               	movf	I2C_Master_Init@c,w
  4451  0CD0  00F4               	movwf	??_I2C_Master_Init
  4452  0CD1  0853               	movf	I2C_Master_Init@c+1,w
  4453  0CD2  00F5               	movwf	??_I2C_Master_Init+1
  4454  0CD3  0854               	movf	I2C_Master_Init@c+2,w
  4455  0CD4  00F6               	movwf	??_I2C_Master_Init+2
  4456  0CD5  0855               	movf	I2C_Master_Init@c+3,w
  4457  0CD6  00F7               	movwf	??_I2C_Master_Init+3
  4458  0CD7  3002               	movlw	2
  4459  0CD8                     u1265:
  4460  0CD8  1003               	clrc
  4461  0CD9  0DF4               	rlf	??_I2C_Master_Init,f
  4462  0CDA  0DF5               	rlf	??_I2C_Master_Init+1,f
  4463  0CDB  0DF6               	rlf	??_I2C_Master_Init+2,f
  4464  0CDC  0DF7               	rlf	??_I2C_Master_Init+3,f
  4465  0CDD                     u1260:
  4466  0CDD  3EFF               	addlw	-1
  4467  0CDE  1D03               	skipz
  4468  0CDF  2CD8               	goto	u1265
  4469  0CE0  0877               	movf	??_I2C_Master_Init+3,w
  4470  0CE1  00C8               	movwf	___lldiv@divisor+3
  4471  0CE2  0876               	movf	??_I2C_Master_Init+2,w
  4472  0CE3  00C7               	movwf	___lldiv@divisor+2
  4473  0CE4  0875               	movf	??_I2C_Master_Init+1,w
  4474  0CE5  00C6               	movwf	___lldiv@divisor+1
  4475  0CE6  0874               	movf	??_I2C_Master_Init,w
  4476  0CE7  00C5               	movwf	___lldiv@divisor
  4477  0CE8  3000               	movlw	0
  4478  0CE9  00CC               	movwf	___lldiv@dividend+3
  4479  0CEA  307A               	movlw	122
  4480  0CEB  00CB               	movwf	___lldiv@dividend+2
  4481  0CEC  3012               	movlw	18
  4482  0CED  00CA               	movwf	___lldiv@dividend+1
  4483  0CEE  3000               	movlw	0
  4484  0CEF  00C9               	movwf	___lldiv@dividend
  4485  0CF0  120A  158A  26B5  120A  158A  	fcall	___lldiv
  4486  0CF5  1283               	bcf	3,5	;RP0=0, select bank0
  4487  0CF6  1303               	bcf	3,6	;RP1=0, select bank0
  4488  0CF7  0845               	movf	?___lldiv,w
  4489  0CF8  3EFF               	addlw	255
  4490  0CF9  1683               	bsf	3,5	;RP0=1, select bank1
  4491  0CFA  1303               	bcf	3,6	;RP1=0, select bank1
  4492  0CFB  0093               	movwf	19	;volatile
  4493  0CFC                     l2266:
  4494                           
  4495                           ;I2C.c: 19:     SSPSTAT = 0;
  4496  0CFC  0194               	clrf	20	;volatile
  4497  0CFD                     l2268:
  4498                           
  4499                           ;I2C.c: 20:     TRISCbits.TRISC3 = 1;
  4500  0CFD  1587               	bsf	7,3	;volatile
  4501  0CFE                     l2270:
  4502                           
  4503                           ;I2C.c: 21:     TRISCbits.TRISC4 = 1;
  4504  0CFE  1607               	bsf	7,4	;volatile
  4505  0CFF                     l295:
  4506  0CFF  0008               	return
  4507  0D00                     __end_of_I2C_Master_Init:
  4508                           
  4509                           	psect	text10
  4510  0EB5                     __ptext10:	
  4511 ;; *************** function ___lldiv *****************
  4512 ;; Defined at:
  4513 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  4514 ;; Parameters:    Size  Location     Type
  4515 ;;  divisor         4    0[BANK0 ] unsigned long 
  4516 ;;  dividend        4    4[BANK0 ] unsigned long 
  4517 ;; Auto vars:     Size  Location     Type
  4518 ;;  quotient        4    8[BANK0 ] unsigned long 
  4519 ;;  counter         1   12[BANK0 ] unsigned char 
  4520 ;; Return value:  Size  Location     Type
  4521 ;;                  4    0[BANK0 ] unsigned long 
  4522 ;; Registers used:
  4523 ;;		wreg, status,2, status,0
  4524 ;; Tracked objects:
  4525 ;;		On entry : 0/0
  4526 ;;		On exit  : 0/0
  4527 ;;		Unchanged: 0/0
  4528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4529 ;;      Params:         0       8       0       0       0
  4530 ;;      Locals:         0       5       0       0       0
  4531 ;;      Temps:          1       0       0       0       0
  4532 ;;      Totals:         1      13       0       0       0
  4533 ;;Total ram usage:       14 bytes
  4534 ;; Hardware stack levels used:    1
  4535 ;; Hardware stack levels required when called:    1
  4536 ;; This function calls:
  4537 ;;		Nothing
  4538 ;; This function is called by:
  4539 ;;		_I2C_Master_Init
  4540 ;; This function uses a non-reentrant model
  4541 ;;
  4542                           
  4543                           
  4544                           ;psect for function ___lldiv
  4545  0EB5                     ___lldiv:
  4546  0EB5                     l2236:	
  4547                           ;incstack = 0
  4548                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4549                           
  4550  0EB5  3000               	movlw	0
  4551  0EB6  1283               	bcf	3,5	;RP0=0, select bank0
  4552  0EB7  1303               	bcf	3,6	;RP1=0, select bank0
  4553  0EB8  00D0               	movwf	___lldiv@quotient+3
  4554  0EB9  3000               	movlw	0
  4555  0EBA  00CF               	movwf	___lldiv@quotient+2
  4556  0EBB  3000               	movlw	0
  4557  0EBC  00CE               	movwf	___lldiv@quotient+1
  4558  0EBD  3000               	movlw	0
  4559  0EBE  00CD               	movwf	___lldiv@quotient
  4560  0EBF  0848               	movf	___lldiv@divisor+3,w
  4561  0EC0  0447               	iorwf	___lldiv@divisor+2,w
  4562  0EC1  0446               	iorwf	___lldiv@divisor+1,w
  4563  0EC2  0445               	iorwf	___lldiv@divisor,w
  4564  0EC3  1903               	skipnz
  4565  0EC4  2EC6               	goto	u1191
  4566  0EC5  2EC7               	goto	u1190
  4567  0EC6                     u1191:
  4568  0EC6  2F14               	goto	l2256
  4569  0EC7                     u1190:
  4570  0EC7                     l2238:
  4571  0EC7  01D1               	clrf	___lldiv@counter
  4572  0EC8  0AD1               	incf	___lldiv@counter,f
  4573  0EC9  2ED7               	goto	l2242
  4574  0ECA                     l2240:
  4575  0ECA  3001               	movlw	1
  4576  0ECB  00F3               	movwf	??___lldiv
  4577  0ECC                     u1205:
  4578  0ECC  1003               	clrc
  4579  0ECD  0DC5               	rlf	___lldiv@divisor,f
  4580  0ECE  0DC6               	rlf	___lldiv@divisor+1,f
  4581  0ECF  0DC7               	rlf	___lldiv@divisor+2,f
  4582  0ED0  0DC8               	rlf	___lldiv@divisor+3,f
  4583  0ED1  0BF3               	decfsz	??___lldiv,f
  4584  0ED2  2ECC               	goto	u1205
  4585  0ED3  3001               	movlw	1
  4586  0ED4  00F3               	movwf	??___lldiv
  4587  0ED5  0873               	movf	??___lldiv,w
  4588  0ED6  07D1               	addwf	___lldiv@counter,f
  4589  0ED7                     l2242:
  4590  0ED7  1FC8               	btfss	___lldiv@divisor+3,7
  4591  0ED8  2EDA               	goto	u1211
  4592  0ED9  2EDB               	goto	u1210
  4593  0EDA                     u1211:
  4594  0EDA  2ECA               	goto	l2240
  4595  0EDB                     u1210:
  4596  0EDB                     l2244:
  4597  0EDB  3001               	movlw	1
  4598  0EDC  00F3               	movwf	??___lldiv
  4599  0EDD                     u1225:
  4600  0EDD  1003               	clrc
  4601  0EDE  0DCD               	rlf	___lldiv@quotient,f
  4602  0EDF  0DCE               	rlf	___lldiv@quotient+1,f
  4603  0EE0  0DCF               	rlf	___lldiv@quotient+2,f
  4604  0EE1  0DD0               	rlf	___lldiv@quotient+3,f
  4605  0EE2  0BF3               	decfsz	??___lldiv,f
  4606  0EE3  2EDD               	goto	u1225
  4607  0EE4                     l2246:
  4608  0EE4  0848               	movf	___lldiv@divisor+3,w
  4609  0EE5  024C               	subwf	___lldiv@dividend+3,w
  4610  0EE6  1D03               	skipz
  4611  0EE7  2EF2               	goto	u1235
  4612  0EE8  0847               	movf	___lldiv@divisor+2,w
  4613  0EE9  024B               	subwf	___lldiv@dividend+2,w
  4614  0EEA  1D03               	skipz
  4615  0EEB  2EF2               	goto	u1235
  4616  0EEC  0846               	movf	___lldiv@divisor+1,w
  4617  0EED  024A               	subwf	___lldiv@dividend+1,w
  4618  0EEE  1D03               	skipz
  4619  0EEF  2EF2               	goto	u1235
  4620  0EF0  0845               	movf	___lldiv@divisor,w
  4621  0EF1  0249               	subwf	___lldiv@dividend,w
  4622  0EF2                     u1235:
  4623  0EF2  1C03               	skipc
  4624  0EF3  2EF5               	goto	u1231
  4625  0EF4  2EF6               	goto	u1230
  4626  0EF5                     u1231:
  4627  0EF5  2F05               	goto	l2252
  4628  0EF6                     u1230:
  4629  0EF6                     l2248:
  4630  0EF6  0845               	movf	___lldiv@divisor,w
  4631  0EF7  02C9               	subwf	___lldiv@dividend,f
  4632  0EF8  0846               	movf	___lldiv@divisor+1,w
  4633  0EF9  1C03               	skipc
  4634  0EFA  0F46               	incfsz	___lldiv@divisor+1,w
  4635  0EFB  02CA               	subwf	___lldiv@dividend+1,f
  4636  0EFC  0847               	movf	___lldiv@divisor+2,w
  4637  0EFD  1C03               	skipc
  4638  0EFE  0F47               	incfsz	___lldiv@divisor+2,w
  4639  0EFF  02CB               	subwf	___lldiv@dividend+2,f
  4640  0F00  0848               	movf	___lldiv@divisor+3,w
  4641  0F01  1C03               	skipc
  4642  0F02  0F48               	incfsz	___lldiv@divisor+3,w
  4643  0F03  02CC               	subwf	___lldiv@dividend+3,f
  4644  0F04                     l2250:
  4645  0F04  144D               	bsf	___lldiv@quotient,0
  4646  0F05                     l2252:
  4647  0F05  3001               	movlw	1
  4648  0F06                     u1245:
  4649  0F06  1003               	clrc
  4650  0F07  0CC8               	rrf	___lldiv@divisor+3,f
  4651  0F08  0CC7               	rrf	___lldiv@divisor+2,f
  4652  0F09  0CC6               	rrf	___lldiv@divisor+1,f
  4653  0F0A  0CC5               	rrf	___lldiv@divisor,f
  4654  0F0B  3EFF               	addlw	-1
  4655  0F0C  1D03               	skipz
  4656  0F0D  2F06               	goto	u1245
  4657  0F0E                     l2254:
  4658  0F0E  3001               	movlw	1
  4659  0F0F  02D1               	subwf	___lldiv@counter,f
  4660  0F10  1D03               	btfss	3,2
  4661  0F11  2F13               	goto	u1251
  4662  0F12  2F14               	goto	u1250
  4663  0F13                     u1251:
  4664  0F13  2EDB               	goto	l2244
  4665  0F14                     u1250:
  4666  0F14                     l2256:
  4667  0F14  0850               	movf	___lldiv@quotient+3,w
  4668  0F15  00C8               	movwf	?___lldiv+3
  4669  0F16  084F               	movf	___lldiv@quotient+2,w
  4670  0F17  00C7               	movwf	?___lldiv+2
  4671  0F18  084E               	movf	___lldiv@quotient+1,w
  4672  0F19  00C6               	movwf	?___lldiv+1
  4673  0F1A  084D               	movf	___lldiv@quotient,w
  4674  0F1B  00C5               	movwf	?___lldiv
  4675  0F1C                     l472:
  4676  0F1C  0008               	return
  4677  0F1D                     __end_of___lldiv:
  4678                           
  4679                           	psect	text11
  4680  0BBF                     __ptext11:	
  4681 ;; *************** function _ADC_Int *****************
  4682 ;; Defined at:
  4683 ;;		line 12 in file "ADC.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;		None
  4686 ;; Auto vars:     Size  Location     Type
  4687 ;;		None
  4688 ;; Return value:  Size  Location     Type
  4689 ;;                  1    wreg      void 
  4690 ;; Registers used:
  4691 ;;		wreg
  4692 ;; Tracked objects:
  4693 ;;		On entry : 0/0
  4694 ;;		On exit  : 0/0
  4695 ;;		Unchanged: 0/0
  4696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4697 ;;      Params:         0       0       0       0       0
  4698 ;;      Locals:         0       0       0       0       0
  4699 ;;      Temps:          1       0       0       0       0
  4700 ;;      Totals:         1       0       0       0       0
  4701 ;;Total ram usage:        1 bytes
  4702 ;; Hardware stack levels used:    1
  4703 ;; Hardware stack levels required when called:    1
  4704 ;; This function calls:
  4705 ;;		Nothing
  4706 ;; This function is called by:
  4707 ;;		_setup
  4708 ;; This function uses a non-reentrant model
  4709 ;;
  4710                           
  4711                           
  4712                           ;psect for function _ADC_Int
  4713  0BBF                     _ADC_Int:
  4714  0BBF                     l1650:	
  4715                           ;incstack = 0
  4716                           ; Regs used in _ADC_Int: [wreg]
  4717                           
  4718                           
  4719                           ;ADC.c: 15:     ADCON1bits.VCFG0 = 0;
  4720  0BBF  1683               	bsf	3,5	;RP0=1, select bank1
  4721  0BC0  1303               	bcf	3,6	;RP1=0, select bank1
  4722  0BC1  121F               	bcf	31,4	;volatile
  4723                           
  4724                           ;ADC.c: 16:     ADCON1bits.VCFG1 = 0;
  4725  0BC2  129F               	bcf	31,5	;volatile
  4726                           
  4727                           ;ADC.c: 18:     ADCON0bits.ADCS0 = 0;
  4728  0BC3  1283               	bcf	3,5	;RP0=0, select bank0
  4729  0BC4  1303               	bcf	3,6	;RP1=0, select bank0
  4730  0BC5  131F               	bcf	31,6	;volatile
  4731                           
  4732                           ;ADC.c: 19:     ADCON0bits.ADCS1 = 1;
  4733  0BC6  179F               	bsf	31,7	;volatile
  4734                           
  4735                           ;ADC.c: 25:     ADCON1bits.ADFM =0;
  4736  0BC7  1683               	bsf	3,5	;RP0=1, select bank1
  4737  0BC8  1303               	bcf	3,6	;RP1=0, select bank1
  4738  0BC9  139F               	bcf	31,7	;volatile
  4739                           
  4740                           ;ADC.c: 27:     ADCON0bits.ADON = 1;
  4741  0BCA  1283               	bcf	3,5	;RP0=0, select bank0
  4742  0BCB  1303               	bcf	3,6	;RP1=0, select bank0
  4743  0BCC  141F               	bsf	31,0	;volatile
  4744  0BCD                     l1652:
  4745                           
  4746                           ;ADC.c: 28:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  4747  0BCD  3021               	movlw	33
  4748  0BCE  00F3               	movwf	??_ADC_Int
  4749  0BCF                     u1697:
  4750  0BCF  0BF3               	decfsz	??_ADC_Int,f
  4751  0BD0  2BCF               	goto	u1697
  4752  0BD1                     l1654:
  4753                           
  4754                           ;ADC.c: 29:     ADCON0bits.GO_nDONE = 1;
  4755  0BD1  1283               	bcf	3,5	;RP0=0, select bank0
  4756  0BD2  1303               	bcf	3,6	;RP1=0, select bank0
  4757  0BD3  149F               	bsf	31,1	;volatile
  4758  0BD4                     l330:
  4759  0BD4  0008               	return
  4760  0BD5                     __end_of_ADC_Int:
  4761                           
  4762                           	psect	text12
  4763  0DED                     __ptext12:	
  4764 ;; *************** function _read_rtc *****************
  4765 ;; Defined at:
  4766 ;;		line 259 in file "MAIN.c"
  4767 ;; Parameters:    Size  Location     Type
  4768 ;;  address         2    2[BANK0 ] unsigned short 
  4769 ;; Auto vars:     Size  Location     Type
  4770 ;;  data            2    7[BANK0 ] unsigned short 
  4771 ;; Return value:  Size  Location     Type
  4772 ;;                  2    2[BANK0 ] unsigned short 
  4773 ;; Registers used:
  4774 ;;		wreg, status,2, status,0, pclath, cstack
  4775 ;; Tracked objects:
  4776 ;;		On entry : 0/0
  4777 ;;		On exit  : 0/0
  4778 ;;		Unchanged: 0/0
  4779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4780 ;;      Params:         0       2       0       0       0
  4781 ;;      Locals:         0       2       0       0       0
  4782 ;;      Temps:          0       3       0       0       0
  4783 ;;      Totals:         0       7       0       0       0
  4784 ;;Total ram usage:        7 bytes
  4785 ;; Hardware stack levels used:    1
  4786 ;; Hardware stack levels required when called:    3
  4787 ;; This function calls:
  4788 ;;		_I2C_Master_Read
  4789 ;;		_I2C_Master_Start
  4790 ;;		_I2C_Master_Stop
  4791 ;;		_I2C_Master_Write
  4792 ;; This function is called by:
  4793 ;;		_main
  4794 ;; This function uses a non-reentrant model
  4795 ;;
  4796                           
  4797                           
  4798                           ;psect for function _read_rtc
  4799  0DED                     _read_rtc:
  4800  0DED                     l2362:	
  4801                           ;incstack = 0
  4802                           ; Regs used in _read_rtc: [wreg+status,2+status,0+pclath+cstack]
  4803                           
  4804                           
  4805                           ;MAIN.c: 261:     unsigned short data;;MAIN.c: 262:     I2C_Master_Start();
  4806  0DED  120A  158A  2337  120A  158A  	fcall	_I2C_Master_Start
  4807                           
  4808                           ;MAIN.c: 263:     I2C_Master_Write(0xD0);
  4809  0DF2  30D0               	movlw	208
  4810  0DF3  00F3               	movwf	I2C_Master_Write@d
  4811  0DF4  3000               	movlw	0
  4812  0DF5  00F4               	movwf	I2C_Master_Write@d+1
  4813  0DF6  120A  158A  2349  120A  158A  	fcall	_I2C_Master_Write
  4814                           
  4815                           ;MAIN.c: 264:     I2C_Master_Write(address);
  4816  0DFB  1283               	bcf	3,5	;RP0=0, select bank0
  4817  0DFC  1303               	bcf	3,6	;RP1=0, select bank0
  4818  0DFD  0848               	movf	read_rtc@address+1,w
  4819  0DFE  00F4               	movwf	I2C_Master_Write@d+1
  4820  0DFF  0847               	movf	read_rtc@address,w
  4821  0E00  00F3               	movwf	I2C_Master_Write@d
  4822  0E01  120A  158A  2349  120A  158A  	fcall	_I2C_Master_Write
  4823                           
  4824                           ;MAIN.c: 265:     I2C_Master_Stop();
  4825  0E06  120A  158A  2340  120A  158A  	fcall	_I2C_Master_Stop
  4826  0E0B                     l2364:
  4827                           
  4828                           ;MAIN.c: 266:     _delay((unsigned long)((200)*(8000000/4000.0)));
  4829  0E0B  3003               	movlw	3
  4830  0E0C  1283               	bcf	3,5	;RP0=0, select bank0
  4831  0E0D  1303               	bcf	3,6	;RP1=0, select bank0
  4832  0E0E  00CB               	movwf	??_read_rtc+2
  4833  0E0F  3008               	movlw	8
  4834  0E10  00CA               	movwf	??_read_rtc+1
  4835  0E11  3076               	movlw	118
  4836  0E12  00C9               	movwf	??_read_rtc
  4837  0E13                     u1707:
  4838  0E13  0BC9               	decfsz	??_read_rtc,f
  4839  0E14  2E13               	goto	u1707
  4840  0E15  0BCA               	decfsz	??_read_rtc+1,f
  4841  0E16  2E13               	goto	u1707
  4842  0E17  0BCB               	decfsz	??_read_rtc+2,f
  4843  0E18  2E13               	goto	u1707
  4844  0E19  0000               	nop
  4845  0E1A                     l2366:
  4846                           
  4847                           ;MAIN.c: 268:     I2C_Master_Start();
  4848  0E1A  120A  158A  2337  120A  158A  	fcall	_I2C_Master_Start
  4849  0E1F                     l2368:
  4850                           
  4851                           ;MAIN.c: 269:     I2C_Master_Write(0xD1);
  4852  0E1F  30D1               	movlw	209
  4853  0E20  00F3               	movwf	I2C_Master_Write@d
  4854  0E21  3000               	movlw	0
  4855  0E22  00F4               	movwf	I2C_Master_Write@d+1
  4856  0E23  120A  158A  2349  120A  158A  	fcall	_I2C_Master_Write
  4857  0E28                     l2370:
  4858                           
  4859                           ;MAIN.c: 270:     data = I2C_Master_Read(0);
  4860  0E28  3000               	movlw	0
  4861  0E29  00F3               	movwf	I2C_Master_Read@a
  4862  0E2A  00F4               	movwf	I2C_Master_Read@a+1
  4863  0E2B  120A  158A  2496  120A  158A  	fcall	_I2C_Master_Read
  4864  0E30  0874               	movf	?_I2C_Master_Read+1,w
  4865  0E31  1283               	bcf	3,5	;RP0=0, select bank0
  4866  0E32  1303               	bcf	3,6	;RP1=0, select bank0
  4867  0E33  00CD               	movwf	read_rtc@data+1
  4868  0E34  0873               	movf	?_I2C_Master_Read,w
  4869  0E35  00CC               	movwf	read_rtc@data
  4870  0E36                     l2372:
  4871                           
  4872                           ;MAIN.c: 271:     I2C_Master_Stop();
  4873  0E36  120A  158A  2340  120A  158A  	fcall	_I2C_Master_Stop
  4874  0E3B                     l2374:
  4875                           
  4876                           ;MAIN.c: 272:     _delay((unsigned long)((200)*(8000000/4000.0)));
  4877  0E3B  3003               	movlw	3
  4878  0E3C  1283               	bcf	3,5	;RP0=0, select bank0
  4879  0E3D  1303               	bcf	3,6	;RP1=0, select bank0
  4880  0E3E  00CB               	movwf	??_read_rtc+2
  4881  0E3F  3008               	movlw	8
  4882  0E40  00CA               	movwf	??_read_rtc+1
  4883  0E41  3076               	movlw	118
  4884  0E42  00C9               	movwf	??_read_rtc
  4885  0E43                     u1717:
  4886  0E43  0BC9               	decfsz	??_read_rtc,f
  4887  0E44  2E43               	goto	u1717
  4888  0E45  0BCA               	decfsz	??_read_rtc+1,f
  4889  0E46  2E43               	goto	u1717
  4890  0E47  0BCB               	decfsz	??_read_rtc+2,f
  4891  0E48  2E43               	goto	u1717
  4892  0E49  0000               	nop
  4893  0E4A                     l2376:
  4894                           
  4895                           ;MAIN.c: 273:     return data;
  4896  0E4A  1283               	bcf	3,5	;RP0=0, select bank0
  4897  0E4B  1303               	bcf	3,6	;RP1=0, select bank0
  4898  0E4C  084D               	movf	read_rtc@data+1,w
  4899  0E4D  00C8               	movwf	?_read_rtc+1
  4900  0E4E  084C               	movf	read_rtc@data,w
  4901  0E4F  00C7               	movwf	?_read_rtc
  4902  0E50                     l194:
  4903  0E50  0008               	return
  4904  0E51                     __end_of_read_rtc:
  4905                           
  4906                           	psect	text13
  4907  0B49                     __ptext13:	
  4908 ;; *************** function _I2C_Master_Write *****************
  4909 ;; Defined at:
  4910 ;;		line 63 in file "I2C.c"
  4911 ;; Parameters:    Size  Location     Type
  4912 ;;  d               2    3[COMMON] unsigned int 
  4913 ;; Auto vars:     Size  Location     Type
  4914 ;;		None
  4915 ;; Return value:  Size  Location     Type
  4916 ;;                  1    wreg      void 
  4917 ;; Registers used:
  4918 ;;		wreg, status,2, status,0, pclath, cstack
  4919 ;; Tracked objects:
  4920 ;;		On entry : 0/0
  4921 ;;		On exit  : 0/0
  4922 ;;		Unchanged: 0/0
  4923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4924 ;;      Params:         2       0       0       0       0
  4925 ;;      Locals:         0       0       0       0       0
  4926 ;;      Temps:          0       0       0       0       0
  4927 ;;      Totals:         2       0       0       0       0
  4928 ;;Total ram usage:        2 bytes
  4929 ;; Hardware stack levels used:    1
  4930 ;; Hardware stack levels required when called:    2
  4931 ;; This function calls:
  4932 ;;		_I2C_Master_Wait
  4933 ;; This function is called by:
  4934 ;;		_read_rtc
  4935 ;; This function uses a non-reentrant model
  4936 ;;
  4937                           
  4938                           
  4939                           ;psect for function _I2C_Master_Write
  4940  0B49                     _I2C_Master_Write:
  4941  0B49                     l2276:	
  4942                           ;incstack = 0
  4943                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  4944                           
  4945                           
  4946                           ;I2C.c: 63: void I2C_Master_Write(unsigned d);I2C.c: 64: {;I2C.c: 65:     I2C_Master_Wai
      +                          t();
  4947  0B49  120A  158A  235F  120A  158A  	fcall	_I2C_Master_Wait
  4948  0B4E                     l2278:
  4949                           
  4950                           ;I2C.c: 66:     SSPBUF = d;
  4951  0B4E  0873               	movf	I2C_Master_Write@d,w
  4952  0B4F  1283               	bcf	3,5	;RP0=0, select bank0
  4953  0B50  1303               	bcf	3,6	;RP1=0, select bank0
  4954  0B51  0093               	movwf	19	;volatile
  4955  0B52                     l313:
  4956  0B52  0008               	return
  4957  0B53                     __end_of_I2C_Master_Write:
  4958                           
  4959                           	psect	text14
  4960  0B40                     __ptext14:	
  4961 ;; *************** function _I2C_Master_Stop *****************
  4962 ;; Defined at:
  4963 ;;		line 53 in file "I2C.c"
  4964 ;; Parameters:    Size  Location     Type
  4965 ;;		None
  4966 ;; Auto vars:     Size  Location     Type
  4967 ;;		None
  4968 ;; Return value:  Size  Location     Type
  4969 ;;                  1    wreg      void 
  4970 ;; Registers used:
  4971 ;;		wreg, status,2, status,0, pclath, cstack
  4972 ;; Tracked objects:
  4973 ;;		On entry : 0/0
  4974 ;;		On exit  : 0/0
  4975 ;;		Unchanged: 0/0
  4976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4977 ;;      Params:         0       0       0       0       0
  4978 ;;      Locals:         0       0       0       0       0
  4979 ;;      Temps:          0       0       0       0       0
  4980 ;;      Totals:         0       0       0       0       0
  4981 ;;Total ram usage:        0 bytes
  4982 ;; Hardware stack levels used:    1
  4983 ;; Hardware stack levels required when called:    2
  4984 ;; This function calls:
  4985 ;;		_I2C_Master_Wait
  4986 ;; This function is called by:
  4987 ;;		_read_rtc
  4988 ;; This function uses a non-reentrant model
  4989 ;;
  4990                           
  4991                           
  4992                           ;psect for function _I2C_Master_Stop
  4993  0B40                     _I2C_Master_Stop:
  4994  0B40                     l2280:	
  4995                           ;incstack = 0
  4996                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4997                           
  4998                           
  4999                           ;I2C.c: 55:     I2C_Master_Wait();
  5000  0B40  120A  158A  235F  120A  158A  	fcall	_I2C_Master_Wait
  5001  0B45                     l2282:
  5002                           
  5003                           ;I2C.c: 56:     SSPCON2bits.PEN = 1;
  5004  0B45  1683               	bsf	3,5	;RP0=1, select bank1
  5005  0B46  1303               	bcf	3,6	;RP1=0, select bank1
  5006  0B47  1511               	bsf	17,2	;volatile
  5007  0B48                     l310:
  5008  0B48  0008               	return
  5009  0B49                     __end_of_I2C_Master_Stop:
  5010                           
  5011                           	psect	text15
  5012  0B37                     __ptext15:	
  5013 ;; *************** function _I2C_Master_Start *****************
  5014 ;; Defined at:
  5015 ;;		line 37 in file "I2C.c"
  5016 ;; Parameters:    Size  Location     Type
  5017 ;;		None
  5018 ;; Auto vars:     Size  Location     Type
  5019 ;;		None
  5020 ;; Return value:  Size  Location     Type
  5021 ;;                  1    wreg      void 
  5022 ;; Registers used:
  5023 ;;		wreg, status,2, status,0, pclath, cstack
  5024 ;; Tracked objects:
  5025 ;;		On entry : 0/0
  5026 ;;		On exit  : 0/0
  5027 ;;		Unchanged: 0/0
  5028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5029 ;;      Params:         0       0       0       0       0
  5030 ;;      Locals:         0       0       0       0       0
  5031 ;;      Temps:          0       0       0       0       0
  5032 ;;      Totals:         0       0       0       0       0
  5033 ;;Total ram usage:        0 bytes
  5034 ;; Hardware stack levels used:    1
  5035 ;; Hardware stack levels required when called:    2
  5036 ;; This function calls:
  5037 ;;		_I2C_Master_Wait
  5038 ;; This function is called by:
  5039 ;;		_read_rtc
  5040 ;; This function uses a non-reentrant model
  5041 ;;
  5042                           
  5043                           
  5044                           ;psect for function _I2C_Master_Start
  5045  0B37                     _I2C_Master_Start:
  5046  0B37                     l2272:	
  5047                           ;incstack = 0
  5048                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  5049                           
  5050                           
  5051                           ;I2C.c: 39:     I2C_Master_Wait();
  5052  0B37  120A  158A  235F  120A  158A  	fcall	_I2C_Master_Wait
  5053  0B3C                     l2274:
  5054                           
  5055                           ;I2C.c: 40:     SSPCON2bits.SEN = 1;
  5056  0B3C  1683               	bsf	3,5	;RP0=1, select bank1
  5057  0B3D  1303               	bcf	3,6	;RP1=0, select bank1
  5058  0B3E  1411               	bsf	17,0	;volatile
  5059  0B3F                     l304:
  5060  0B3F  0008               	return
  5061  0B40                     __end_of_I2C_Master_Start:
  5062                           
  5063                           	psect	text16
  5064  0C96                     __ptext16:	
  5065 ;; *************** function _I2C_Master_Read *****************
  5066 ;; Defined at:
  5067 ;;		line 72 in file "I2C.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;  a               2    3[COMMON] unsigned short 
  5070 ;; Auto vars:     Size  Location     Type
  5071 ;;  temp            2    0[BANK0 ] unsigned short 
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  2    3[COMMON] unsigned short 
  5074 ;; Registers used:
  5075 ;;		wreg, status,2, status,0, pclath, cstack
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5081 ;;      Params:         2       0       0       0       0
  5082 ;;      Locals:         0       2       0       0       0
  5083 ;;      Temps:          2       0       0       0       0
  5084 ;;      Totals:         4       2       0       0       0
  5085 ;;Total ram usage:        6 bytes
  5086 ;; Hardware stack levels used:    1
  5087 ;; Hardware stack levels required when called:    2
  5088 ;; This function calls:
  5089 ;;		_I2C_Master_Wait
  5090 ;; This function is called by:
  5091 ;;		_read_rtc
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           
  5096                           ;psect for function _I2C_Master_Read
  5097  0C96                     _I2C_Master_Read:
  5098  0C96                     l2284:	
  5099                           ;incstack = 0
  5100                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  5101                           
  5102                           
  5103                           ;I2C.c: 72: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 73: {;I2C.c: 74:    
      +                           unsigned short temp;;I2C.c: 75:     I2C_Master_Wait();
  5104  0C96  120A  158A  235F  120A  158A  	fcall	_I2C_Master_Wait
  5105  0C9B                     l2286:
  5106                           
  5107                           ;I2C.c: 76:     SSPCON2bits.RCEN = 1;
  5108  0C9B  1683               	bsf	3,5	;RP0=1, select bank1
  5109  0C9C  1303               	bcf	3,6	;RP1=0, select bank1
  5110  0C9D  1591               	bsf	17,3	;volatile
  5111                           
  5112                           ;I2C.c: 77:     I2C_Master_Wait();
  5113  0C9E  120A  158A  235F  120A  158A  	fcall	_I2C_Master_Wait
  5114  0CA3                     l2288:
  5115                           
  5116                           ;I2C.c: 78:     temp = SSPBUF;
  5117  0CA3  1283               	bcf	3,5	;RP0=0, select bank0
  5118  0CA4  1303               	bcf	3,6	;RP1=0, select bank0
  5119  0CA5  0813               	movf	19,w	;volatile
  5120  0CA6  00F5               	movwf	??_I2C_Master_Read
  5121  0CA7  01F6               	clrf	??_I2C_Master_Read+1
  5122  0CA8  0875               	movf	??_I2C_Master_Read,w
  5123  0CA9  00C5               	movwf	I2C_Master_Read@temp
  5124  0CAA  0876               	movf	??_I2C_Master_Read+1,w
  5125  0CAB  00C6               	movwf	I2C_Master_Read@temp+1
  5126  0CAC                     l2290:
  5127                           
  5128                           ;I2C.c: 79:     I2C_Master_Wait();
  5129  0CAC  120A  158A  235F  120A  158A  	fcall	_I2C_Master_Wait
  5130  0CB1                     l2292:
  5131                           
  5132                           ;I2C.c: 80:     if(a == 1){
  5133  0CB1  0373               	decf	I2C_Master_Read@a,w
  5134  0CB2  0474               	iorwf	I2C_Master_Read@a+1,w
  5135  0CB3  1D03               	btfss	3,2
  5136  0CB4  2CB6               	goto	u1271
  5137  0CB5  2CB7               	goto	u1270
  5138  0CB6                     u1271:
  5139  0CB6  2CBB               	goto	l316
  5140  0CB7                     u1270:
  5141  0CB7                     l2294:
  5142                           
  5143                           ;I2C.c: 81:         SSPCON2bits.ACKDT = 0;
  5144  0CB7  1683               	bsf	3,5	;RP0=1, select bank1
  5145  0CB8  1303               	bcf	3,6	;RP1=0, select bank1
  5146  0CB9  1291               	bcf	17,5	;volatile
  5147                           
  5148                           ;I2C.c: 82:     }else{
  5149  0CBA  2CBE               	goto	l317
  5150  0CBB                     l316:
  5151                           
  5152                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 1;
  5153  0CBB  1683               	bsf	3,5	;RP0=1, select bank1
  5154  0CBC  1303               	bcf	3,6	;RP1=0, select bank1
  5155  0CBD  1691               	bsf	17,5	;volatile
  5156  0CBE                     l317:	
  5157                           ;I2C.c: 84:     }
  5158                           
  5159                           
  5160                           ;I2C.c: 85:     SSPCON2bits.ACKEN = 1;
  5161  0CBE  1611               	bsf	17,4	;volatile
  5162  0CBF                     l2296:
  5163                           
  5164                           ;I2C.c: 86:     return temp;
  5165  0CBF  1283               	bcf	3,5	;RP0=0, select bank0
  5166  0CC0  1303               	bcf	3,6	;RP1=0, select bank0
  5167  0CC1  0846               	movf	I2C_Master_Read@temp+1,w
  5168  0CC2  00F4               	movwf	?_I2C_Master_Read+1
  5169  0CC3  0845               	movf	I2C_Master_Read@temp,w
  5170  0CC4  00F3               	movwf	?_I2C_Master_Read
  5171  0CC5                     l318:
  5172  0CC5  0008               	return
  5173  0CC6                     __end_of_I2C_Master_Read:
  5174                           
  5175                           	psect	text17
  5176  0B5F                     __ptext17:	
  5177 ;; *************** function _I2C_Master_Wait *****************
  5178 ;; Defined at:
  5179 ;;		line 30 in file "I2C.c"
  5180 ;; Parameters:    Size  Location     Type
  5181 ;;		None
  5182 ;; Auto vars:     Size  Location     Type
  5183 ;;		None
  5184 ;; Return value:  Size  Location     Type
  5185 ;;                  1    wreg      void 
  5186 ;; Registers used:
  5187 ;;		wreg, status,2
  5188 ;; Tracked objects:
  5189 ;;		On entry : 0/0
  5190 ;;		On exit  : 0/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5193 ;;      Params:         0       0       0       0       0
  5194 ;;      Locals:         0       0       0       0       0
  5195 ;;      Temps:          0       0       0       0       0
  5196 ;;      Totals:         0       0       0       0       0
  5197 ;;Total ram usage:        0 bytes
  5198 ;; Hardware stack levels used:    1
  5199 ;; Hardware stack levels required when called:    1
  5200 ;; This function calls:
  5201 ;;		Nothing
  5202 ;; This function is called by:
  5203 ;;		_I2C_Master_Start
  5204 ;;		_I2C_Master_Stop
  5205 ;;		_I2C_Master_Write
  5206 ;;		_I2C_Master_Read
  5207 ;;		_I2C_Master_RepeatedStart
  5208 ;; This function uses a non-reentrant model
  5209 ;;
  5210                           
  5211                           
  5212                           ;psect for function _I2C_Master_Wait
  5213  0B5F                     _I2C_Master_Wait:
  5214  0B5F                     l2232:	
  5215                           ;incstack = 0
  5216                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  5217                           
  5218  0B5F                     l298:	
  5219                           ;I2C.c: 32:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  5220                           
  5221  0B5F  1683               	bsf	3,5	;RP0=1, select bank1
  5222  0B60  1303               	bcf	3,6	;RP1=0, select bank1
  5223  0B61  1914               	btfsc	20,2	;volatile
  5224  0B62  2B64               	goto	u1171
  5225  0B63  2B65               	goto	u1170
  5226  0B64                     u1171:
  5227  0B64  2B5F               	goto	l298
  5228  0B65                     u1170:
  5229  0B65                     l2234:
  5230  0B65  0811               	movf	17,w	;volatile
  5231  0B66  391F               	andlw	31
  5232  0B67  1D03               	btfss	3,2
  5233  0B68  2B6A               	goto	u1181
  5234  0B69  2B6B               	goto	u1180
  5235  0B6A                     u1181:
  5236  0B6A  2B5F               	goto	l298
  5237  0B6B                     u1180:
  5238  0B6B                     l301:
  5239  0B6B  0008               	return
  5240  0B6C                     __end_of_I2C_Master_Wait:
  5241                           
  5242                           	psect	text18
  5243  0C3E                     __ptext18:	
  5244 ;; *************** function ___wmul *****************
  5245 ;; Defined at:
  5246 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;  multiplier      2    3[COMMON] unsigned int 
  5249 ;;  multiplicand    2    5[COMMON] unsigned int 
  5250 ;; Auto vars:     Size  Location     Type
  5251 ;;  product         2    0[BANK0 ] unsigned int 
  5252 ;; Return value:  Size  Location     Type
  5253 ;;                  2    3[COMMON] unsigned int 
  5254 ;; Registers used:
  5255 ;;		wreg, status,2, status,0
  5256 ;; Tracked objects:
  5257 ;;		On entry : 0/0
  5258 ;;		On exit  : 0/0
  5259 ;;		Unchanged: 0/0
  5260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5261 ;;      Params:         4       0       0       0       0
  5262 ;;      Locals:         0       2       0       0       0
  5263 ;;      Temps:          0       0       0       0       0
  5264 ;;      Totals:         4       2       0       0       0
  5265 ;;Total ram usage:        6 bytes
  5266 ;; Hardware stack levels used:    1
  5267 ;; Hardware stack levels required when called:    1
  5268 ;; This function calls:
  5269 ;;		Nothing
  5270 ;; This function is called by:
  5271 ;;		_main
  5272 ;; This function uses a non-reentrant model
  5273 ;;
  5274                           
  5275                           
  5276                           ;psect for function ___wmul
  5277  0C3E                     ___wmul:
  5278  0C3E                     l2424:	
  5279                           ;incstack = 0
  5280                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5281                           
  5282  0C3E  1283               	bcf	3,5	;RP0=0, select bank0
  5283  0C3F  1303               	bcf	3,6	;RP1=0, select bank0
  5284  0C40  01C5               	clrf	___wmul@product
  5285  0C41  01C6               	clrf	___wmul@product+1
  5286  0C42                     l2426:
  5287  0C42  1C73               	btfss	___wmul@multiplier,0
  5288  0C43  2C45               	goto	u1291
  5289  0C44  2C46               	goto	u1290
  5290  0C45                     u1291:
  5291  0C45  2C4E               	goto	l436
  5292  0C46                     u1290:
  5293  0C46                     l2428:
  5294  0C46  0875               	movf	___wmul@multiplicand,w
  5295  0C47  1283               	bcf	3,5	;RP0=0, select bank0
  5296  0C48  1303               	bcf	3,6	;RP1=0, select bank0
  5297  0C49  07C5               	addwf	___wmul@product,f
  5298  0C4A  1803               	skipnc
  5299  0C4B  0AC6               	incf	___wmul@product+1,f
  5300  0C4C  0876               	movf	___wmul@multiplicand+1,w
  5301  0C4D  07C6               	addwf	___wmul@product+1,f
  5302  0C4E                     l436:
  5303  0C4E  3001               	movlw	1
  5304  0C4F                     u1305:
  5305  0C4F  1003               	clrc
  5306  0C50  0DF5               	rlf	___wmul@multiplicand,f
  5307  0C51  0DF6               	rlf	___wmul@multiplicand+1,f
  5308  0C52  3EFF               	addlw	-1
  5309  0C53  1D03               	skipz
  5310  0C54  2C4F               	goto	u1305
  5311  0C55                     l2430:
  5312  0C55  3001               	movlw	1
  5313  0C56                     u1315:
  5314  0C56  1003               	clrc
  5315  0C57  0CF4               	rrf	___wmul@multiplier+1,f
  5316  0C58  0CF3               	rrf	___wmul@multiplier,f
  5317  0C59  3EFF               	addlw	-1
  5318  0C5A  1D03               	skipz
  5319  0C5B  2C56               	goto	u1315
  5320  0C5C                     l2432:
  5321  0C5C  0873               	movf	___wmul@multiplier,w
  5322  0C5D  0474               	iorwf	___wmul@multiplier+1,w
  5323  0C5E  1D03               	btfss	3,2
  5324  0C5F  2C61               	goto	u1321
  5325  0C60  2C62               	goto	u1320
  5326  0C61                     u1321:
  5327  0C61  2C42               	goto	l2426
  5328  0C62                     u1320:
  5329  0C62                     l2434:
  5330  0C62  1283               	bcf	3,5	;RP0=0, select bank0
  5331  0C63  1303               	bcf	3,6	;RP1=0, select bank0
  5332  0C64  0846               	movf	___wmul@product+1,w
  5333  0C65  00F4               	movwf	?___wmul+1
  5334  0C66  0845               	movf	___wmul@product,w
  5335  0C67  00F3               	movwf	?___wmul
  5336  0C68                     l438:
  5337  0C68  0008               	return
  5338  0C69                     __end_of___wmul:
  5339                           
  5340                           	psect	text19
  5341  0B7F                     __ptext19:	
  5342 ;; *************** function ___bmul *****************
  5343 ;; Defined at:
  5344 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  5345 ;; Parameters:    Size  Location     Type
  5346 ;;  multiplier      1    wreg     unsigned char 
  5347 ;;  multiplicand    1    3[COMMON] unsigned char 
  5348 ;; Auto vars:     Size  Location     Type
  5349 ;;  multiplier      1    6[COMMON] unsigned char 
  5350 ;;  product         1    5[COMMON] unsigned char 
  5351 ;; Return value:  Size  Location     Type
  5352 ;;                  1    wreg      unsigned char 
  5353 ;; Registers used:
  5354 ;;		wreg, status,2, status,0
  5355 ;; Tracked objects:
  5356 ;;		On entry : 0/0
  5357 ;;		On exit  : 0/0
  5358 ;;		Unchanged: 0/0
  5359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5360 ;;      Params:         1       0       0       0       0
  5361 ;;      Locals:         2       0       0       0       0
  5362 ;;      Temps:          1       0       0       0       0
  5363 ;;      Totals:         4       0       0       0       0
  5364 ;;Total ram usage:        4 bytes
  5365 ;; Hardware stack levels used:    1
  5366 ;; Hardware stack levels required when called:    1
  5367 ;; This function calls:
  5368 ;;		Nothing
  5369 ;; This function is called by:
  5370 ;;		_main
  5371 ;; This function uses a non-reentrant model
  5372 ;;
  5373                           
  5374                           
  5375                           ;psect for function ___bmul
  5376  0B7F                     ___bmul:
  5377                           
  5378                           ;incstack = 0
  5379                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5380                           ;___bmul@multiplier stored from wreg
  5381  0B7F  00F6               	movwf	___bmul@multiplier
  5382  0B80                     l1930:
  5383  0B80  01F5               	clrf	___bmul@product
  5384  0B81                     l1932:
  5385  0B81  1C76               	btfss	___bmul@multiplier,0
  5386  0B82  2B84               	goto	u781
  5387  0B83  2B85               	goto	u780
  5388  0B84                     u781:
  5389  0B84  2B89               	goto	l1936
  5390  0B85                     u780:
  5391  0B85                     l1934:
  5392  0B85  0873               	movf	___bmul@multiplicand,w
  5393  0B86  00F4               	movwf	??___bmul
  5394  0B87  0874               	movf	??___bmul,w
  5395  0B88  07F5               	addwf	___bmul@product,f
  5396  0B89                     l1936:
  5397  0B89  1003               	clrc
  5398  0B8A  0DF3               	rlf	___bmul@multiplicand,f
  5399  0B8B                     l1938:
  5400  0B8B  1003               	clrc
  5401  0B8C  0CF6               	rrf	___bmul@multiplier,f
  5402  0B8D  0876               	movf	___bmul@multiplier,w
  5403  0B8E  1D03               	btfss	3,2
  5404  0B8F  2B91               	goto	u791
  5405  0B90  2B92               	goto	u790
  5406  0B91                     u791:
  5407  0B91  2B81               	goto	l1932
  5408  0B92                     u790:
  5409  0B92                     l1940:
  5410  0B92  0875               	movf	___bmul@product,w
  5411  0B93                     l462:
  5412  0B93  0008               	return
  5413  0B94                     __end_of___bmul:
  5414                           
  5415                           	psect	text20
  5416  0D92                     __ptext20:	
  5417 ;; *************** function ___awmod *****************
  5418 ;; Defined at:
  5419 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  5420 ;; Parameters:    Size  Location     Type
  5421 ;;  divisor         2    3[COMMON] int 
  5422 ;;  dividend        2    5[COMMON] int 
  5423 ;; Auto vars:     Size  Location     Type
  5424 ;;  sign            1    1[BANK0 ] unsigned char 
  5425 ;;  counter         1    0[BANK0 ] unsigned char 
  5426 ;; Return value:  Size  Location     Type
  5427 ;;                  2    3[COMMON] int 
  5428 ;; Registers used:
  5429 ;;		wreg, status,2, status,0
  5430 ;; Tracked objects:
  5431 ;;		On entry : 0/0
  5432 ;;		On exit  : 0/0
  5433 ;;		Unchanged: 0/0
  5434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5435 ;;      Params:         4       0       0       0       0
  5436 ;;      Locals:         0       2       0       0       0
  5437 ;;      Temps:          1       0       0       0       0
  5438 ;;      Totals:         5       2       0       0       0
  5439 ;;Total ram usage:        7 bytes
  5440 ;; Hardware stack levels used:    1
  5441 ;; Hardware stack levels required when called:    1
  5442 ;; This function calls:
  5443 ;;		Nothing
  5444 ;; This function is called by:
  5445 ;;		_main
  5446 ;; This function uses a non-reentrant model
  5447 ;;
  5448                           
  5449                           
  5450                           ;psect for function ___awmod
  5451  0D92                     ___awmod:
  5452  0D92                     l2438:	
  5453                           ;incstack = 0
  5454                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5455                           
  5456  0D92  1283               	bcf	3,5	;RP0=0, select bank0
  5457  0D93  1303               	bcf	3,6	;RP1=0, select bank0
  5458  0D94  01C6               	clrf	___awmod@sign
  5459  0D95                     l2440:
  5460  0D95  1FF6               	btfss	___awmod@dividend+1,7
  5461  0D96  2D98               	goto	u1331
  5462  0D97  2D99               	goto	u1330
  5463  0D98                     u1331:
  5464  0D98  2DA0               	goto	l2446
  5465  0D99                     u1330:
  5466  0D99                     l2442:
  5467  0D99  09F5               	comf	___awmod@dividend,f
  5468  0D9A  09F6               	comf	___awmod@dividend+1,f
  5469  0D9B  0AF5               	incf	___awmod@dividend,f
  5470  0D9C  1903               	skipnz
  5471  0D9D  0AF6               	incf	___awmod@dividend+1,f
  5472  0D9E                     l2444:
  5473  0D9E  01C6               	clrf	___awmod@sign
  5474  0D9F  0AC6               	incf	___awmod@sign,f
  5475  0DA0                     l2446:
  5476  0DA0  1FF4               	btfss	___awmod@divisor+1,7
  5477  0DA1  2DA3               	goto	u1341
  5478  0DA2  2DA4               	goto	u1340
  5479  0DA3                     u1341:
  5480  0DA3  2DA9               	goto	l2450
  5481  0DA4                     u1340:
  5482  0DA4                     l2448:
  5483  0DA4  09F3               	comf	___awmod@divisor,f
  5484  0DA5  09F4               	comf	___awmod@divisor+1,f
  5485  0DA6  0AF3               	incf	___awmod@divisor,f
  5486  0DA7  1903               	skipnz
  5487  0DA8  0AF4               	incf	___awmod@divisor+1,f
  5488  0DA9                     l2450:
  5489  0DA9  0873               	movf	___awmod@divisor,w
  5490  0DAA  0474               	iorwf	___awmod@divisor+1,w
  5491  0DAB  1903               	btfsc	3,2
  5492  0DAC  2DAE               	goto	u1351
  5493  0DAD  2DAF               	goto	u1350
  5494  0DAE                     u1351:
  5495  0DAE  2DDE               	goto	l2468
  5496  0DAF                     u1350:
  5497  0DAF                     l2452:
  5498  0DAF  01C5               	clrf	___awmod@counter
  5499  0DB0  0AC5               	incf	___awmod@counter,f
  5500  0DB1  2DBD               	goto	l2458
  5501  0DB2                     l2454:
  5502  0DB2  3001               	movlw	1
  5503  0DB3                     u1365:
  5504  0DB3  1003               	clrc
  5505  0DB4  0DF3               	rlf	___awmod@divisor,f
  5506  0DB5  0DF4               	rlf	___awmod@divisor+1,f
  5507  0DB6  3EFF               	addlw	-1
  5508  0DB7  1D03               	skipz
  5509  0DB8  2DB3               	goto	u1365
  5510  0DB9                     l2456:
  5511  0DB9  3001               	movlw	1
  5512  0DBA  00F7               	movwf	??___awmod
  5513  0DBB  0877               	movf	??___awmod,w
  5514  0DBC  07C5               	addwf	___awmod@counter,f
  5515  0DBD                     l2458:
  5516  0DBD  1FF4               	btfss	___awmod@divisor+1,7
  5517  0DBE  2DC0               	goto	u1371
  5518  0DBF  2DC1               	goto	u1370
  5519  0DC0                     u1371:
  5520  0DC0  2DB2               	goto	l2454
  5521  0DC1                     u1370:
  5522  0DC1                     l2460:
  5523  0DC1  0874               	movf	___awmod@divisor+1,w
  5524  0DC2  0276               	subwf	___awmod@dividend+1,w
  5525  0DC3  1D03               	skipz
  5526  0DC4  2DC7               	goto	u1385
  5527  0DC5  0873               	movf	___awmod@divisor,w
  5528  0DC6  0275               	subwf	___awmod@dividend,w
  5529  0DC7                     u1385:
  5530  0DC7  1C03               	skipc
  5531  0DC8  2DCA               	goto	u1381
  5532  0DC9  2DCB               	goto	u1380
  5533  0DCA                     u1381:
  5534  0DCA  2DD1               	goto	l2464
  5535  0DCB                     u1380:
  5536  0DCB                     l2462:
  5537  0DCB  0873               	movf	___awmod@divisor,w
  5538  0DCC  02F5               	subwf	___awmod@dividend,f
  5539  0DCD  0874               	movf	___awmod@divisor+1,w
  5540  0DCE  1C03               	skipc
  5541  0DCF  03F6               	decf	___awmod@dividend+1,f
  5542  0DD0  02F6               	subwf	___awmod@dividend+1,f
  5543  0DD1                     l2464:
  5544  0DD1  3001               	movlw	1
  5545  0DD2                     u1395:
  5546  0DD2  1003               	clrc
  5547  0DD3  0CF4               	rrf	___awmod@divisor+1,f
  5548  0DD4  0CF3               	rrf	___awmod@divisor,f
  5549  0DD5  3EFF               	addlw	-1
  5550  0DD6  1D03               	skipz
  5551  0DD7  2DD2               	goto	u1395
  5552  0DD8                     l2466:
  5553  0DD8  3001               	movlw	1
  5554  0DD9  02C5               	subwf	___awmod@counter,f
  5555  0DDA  1D03               	btfss	3,2
  5556  0DDB  2DDD               	goto	u1401
  5557  0DDC  2DDE               	goto	u1400
  5558  0DDD                     u1401:
  5559  0DDD  2DC1               	goto	l2460
  5560  0DDE                     u1400:
  5561  0DDE                     l2468:
  5562  0DDE  0846               	movf	___awmod@sign,w
  5563  0DDF  1903               	btfsc	3,2
  5564  0DE0  2DE2               	goto	u1411
  5565  0DE1  2DE3               	goto	u1410
  5566  0DE2                     u1411:
  5567  0DE2  2DE8               	goto	l2472
  5568  0DE3                     u1410:
  5569  0DE3                     l2470:
  5570  0DE3  09F5               	comf	___awmod@dividend,f
  5571  0DE4  09F6               	comf	___awmod@dividend+1,f
  5572  0DE5  0AF5               	incf	___awmod@dividend,f
  5573  0DE6  1903               	skipnz
  5574  0DE7  0AF6               	incf	___awmod@dividend+1,f
  5575  0DE8                     l2472:
  5576  0DE8  0876               	movf	___awmod@dividend+1,w
  5577  0DE9  00F4               	movwf	?___awmod+1
  5578  0DEA  0875               	movf	___awmod@dividend,w
  5579  0DEB  00F3               	movwf	?___awmod
  5580  0DEC                     l602:
  5581  0DEC  0008               	return
  5582  0DED                     __end_of___awmod:
  5583                           
  5584                           	psect	text21
  5585  0F1D                     __ptext21:	
  5586 ;; *************** function ___awdiv *****************
  5587 ;; Defined at:
  5588 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  5589 ;; Parameters:    Size  Location     Type
  5590 ;;  divisor         2    2[BANK0 ] int 
  5591 ;;  dividend        2    4[BANK0 ] int 
  5592 ;; Auto vars:     Size  Location     Type
  5593 ;;  quotient        2    8[BANK0 ] int 
  5594 ;;  sign            1    7[BANK0 ] unsigned char 
  5595 ;;  counter         1    6[BANK0 ] unsigned char 
  5596 ;; Return value:  Size  Location     Type
  5597 ;;                  2    2[BANK0 ] int 
  5598 ;; Registers used:
  5599 ;;		wreg, status,2, status,0
  5600 ;; Tracked objects:
  5601 ;;		On entry : 0/0
  5602 ;;		On exit  : 0/0
  5603 ;;		Unchanged: 0/0
  5604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5605 ;;      Params:         0       4       0       0       0
  5606 ;;      Locals:         0       4       0       0       0
  5607 ;;      Temps:          1       0       0       0       0
  5608 ;;      Totals:         1       8       0       0       0
  5609 ;;Total ram usage:        9 bytes
  5610 ;; Hardware stack levels used:    1
  5611 ;; Hardware stack levels required when called:    1
  5612 ;; This function calls:
  5613 ;;		Nothing
  5614 ;; This function is called by:
  5615 ;;		_main
  5616 ;; This function uses a non-reentrant model
  5617 ;;
  5618                           
  5619                           
  5620                           ;psect for function ___awdiv
  5621  0F1D                     ___awdiv:
  5622  0F1D                     l1944:	
  5623                           ;incstack = 0
  5624                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5625                           
  5626  0F1D  1283               	bcf	3,5	;RP0=0, select bank0
  5627  0F1E  1303               	bcf	3,6	;RP1=0, select bank0
  5628  0F1F  01CC               	clrf	___awdiv@sign
  5629  0F20                     l1946:
  5630  0F20  1FC8               	btfss	___awdiv@divisor+1,7
  5631  0F21  2F23               	goto	u801
  5632  0F22  2F24               	goto	u800
  5633  0F23                     u801:
  5634  0F23  2F2B               	goto	l1952
  5635  0F24                     u800:
  5636  0F24                     l1948:
  5637  0F24  09C7               	comf	___awdiv@divisor,f
  5638  0F25  09C8               	comf	___awdiv@divisor+1,f
  5639  0F26  0AC7               	incf	___awdiv@divisor,f
  5640  0F27  1903               	skipnz
  5641  0F28  0AC8               	incf	___awdiv@divisor+1,f
  5642  0F29                     l1950:
  5643  0F29  01CC               	clrf	___awdiv@sign
  5644  0F2A  0ACC               	incf	___awdiv@sign,f
  5645  0F2B                     l1952:
  5646  0F2B  1FCA               	btfss	___awdiv@dividend+1,7
  5647  0F2C  2F2E               	goto	u811
  5648  0F2D  2F2F               	goto	u810
  5649  0F2E                     u811:
  5650  0F2E  2F38               	goto	l1958
  5651  0F2F                     u810:
  5652  0F2F                     l1954:
  5653  0F2F  09C9               	comf	___awdiv@dividend,f
  5654  0F30  09CA               	comf	___awdiv@dividend+1,f
  5655  0F31  0AC9               	incf	___awdiv@dividend,f
  5656  0F32  1903               	skipnz
  5657  0F33  0ACA               	incf	___awdiv@dividend+1,f
  5658  0F34                     l1956:
  5659  0F34  3001               	movlw	1
  5660  0F35  00F7               	movwf	??___awdiv
  5661  0F36  0877               	movf	??___awdiv,w
  5662  0F37  06CC               	xorwf	___awdiv@sign,f
  5663  0F38                     l1958:
  5664  0F38  01CD               	clrf	___awdiv@quotient
  5665  0F39  01CE               	clrf	___awdiv@quotient+1
  5666  0F3A                     l1960:
  5667  0F3A  0847               	movf	___awdiv@divisor,w
  5668  0F3B  0448               	iorwf	___awdiv@divisor+1,w
  5669  0F3C  1903               	btfsc	3,2
  5670  0F3D  2F3F               	goto	u821
  5671  0F3E  2F40               	goto	u820
  5672  0F3F                     u821:
  5673  0F3F  2F77               	goto	l1980
  5674  0F40                     u820:
  5675  0F40                     l1962:
  5676  0F40  01CB               	clrf	___awdiv@counter
  5677  0F41  0ACB               	incf	___awdiv@counter,f
  5678  0F42  2F4E               	goto	l1968
  5679  0F43                     l1964:
  5680  0F43  3001               	movlw	1
  5681  0F44                     u835:
  5682  0F44  1003               	clrc
  5683  0F45  0DC7               	rlf	___awdiv@divisor,f
  5684  0F46  0DC8               	rlf	___awdiv@divisor+1,f
  5685  0F47  3EFF               	addlw	-1
  5686  0F48  1D03               	skipz
  5687  0F49  2F44               	goto	u835
  5688  0F4A                     l1966:
  5689  0F4A  3001               	movlw	1
  5690  0F4B  00F7               	movwf	??___awdiv
  5691  0F4C  0877               	movf	??___awdiv,w
  5692  0F4D  07CB               	addwf	___awdiv@counter,f
  5693  0F4E                     l1968:
  5694  0F4E  1FC8               	btfss	___awdiv@divisor+1,7
  5695  0F4F  2F51               	goto	u841
  5696  0F50  2F52               	goto	u840
  5697  0F51                     u841:
  5698  0F51  2F43               	goto	l1964
  5699  0F52                     u840:
  5700  0F52                     l1970:
  5701  0F52  3001               	movlw	1
  5702  0F53                     u855:
  5703  0F53  1003               	clrc
  5704  0F54  0DCD               	rlf	___awdiv@quotient,f
  5705  0F55  0DCE               	rlf	___awdiv@quotient+1,f
  5706  0F56  3EFF               	addlw	-1
  5707  0F57  1D03               	skipz
  5708  0F58  2F53               	goto	u855
  5709  0F59  0848               	movf	___awdiv@divisor+1,w
  5710  0F5A  024A               	subwf	___awdiv@dividend+1,w
  5711  0F5B  1D03               	skipz
  5712  0F5C  2F5F               	goto	u865
  5713  0F5D  0847               	movf	___awdiv@divisor,w
  5714  0F5E  0249               	subwf	___awdiv@dividend,w
  5715  0F5F                     u865:
  5716  0F5F  1C03               	skipc
  5717  0F60  2F62               	goto	u861
  5718  0F61  2F63               	goto	u860
  5719  0F62                     u861:
  5720  0F62  2F6A               	goto	l1976
  5721  0F63                     u860:
  5722  0F63                     l1972:
  5723  0F63  0847               	movf	___awdiv@divisor,w
  5724  0F64  02C9               	subwf	___awdiv@dividend,f
  5725  0F65  0848               	movf	___awdiv@divisor+1,w
  5726  0F66  1C03               	skipc
  5727  0F67  03CA               	decf	___awdiv@dividend+1,f
  5728  0F68  02CA               	subwf	___awdiv@dividend+1,f
  5729  0F69                     l1974:
  5730  0F69  144D               	bsf	___awdiv@quotient,0
  5731  0F6A                     l1976:
  5732  0F6A  3001               	movlw	1
  5733  0F6B                     u875:
  5734  0F6B  1003               	clrc
  5735  0F6C  0CC8               	rrf	___awdiv@divisor+1,f
  5736  0F6D  0CC7               	rrf	___awdiv@divisor,f
  5737  0F6E  3EFF               	addlw	-1
  5738  0F6F  1D03               	skipz
  5739  0F70  2F6B               	goto	u875
  5740  0F71                     l1978:
  5741  0F71  3001               	movlw	1
  5742  0F72  02CB               	subwf	___awdiv@counter,f
  5743  0F73  1D03               	btfss	3,2
  5744  0F74  2F76               	goto	u881
  5745  0F75  2F77               	goto	u880
  5746  0F76                     u881:
  5747  0F76  2F52               	goto	l1970
  5748  0F77                     u880:
  5749  0F77                     l1980:
  5750  0F77  084C               	movf	___awdiv@sign,w
  5751  0F78  1903               	btfsc	3,2
  5752  0F79  2F7B               	goto	u891
  5753  0F7A  2F7C               	goto	u890
  5754  0F7B                     u891:
  5755  0F7B  2F81               	goto	l1984
  5756  0F7C                     u890:
  5757  0F7C                     l1982:
  5758  0F7C  09CD               	comf	___awdiv@quotient,f
  5759  0F7D  09CE               	comf	___awdiv@quotient+1,f
  5760  0F7E  0ACD               	incf	___awdiv@quotient,f
  5761  0F7F  1903               	skipnz
  5762  0F80  0ACE               	incf	___awdiv@quotient+1,f
  5763  0F81                     l1984:
  5764  0F81  084E               	movf	___awdiv@quotient+1,w
  5765  0F82  00C8               	movwf	?___awdiv+1
  5766  0F83  084D               	movf	___awdiv@quotient,w
  5767  0F84  00C7               	movwf	?___awdiv
  5768  0F85                     l589:
  5769  0F85  0008               	return
  5770  0F86                     __end_of___awdiv:
  5771                           
  5772                           	psect	text22
  5773  0B53                     __ptext22:	
  5774 ;; *************** function _USART_Tx *****************
  5775 ;; Defined at:
  5776 ;;		line 27 in file "USART.c"
  5777 ;; Parameters:    Size  Location     Type
  5778 ;;  data            1    wreg     unsigned char 
  5779 ;; Auto vars:     Size  Location     Type
  5780 ;;  data            1    3[COMMON] unsigned char 
  5781 ;; Return value:  Size  Location     Type
  5782 ;;                  1    wreg      void 
  5783 ;; Registers used:
  5784 ;;		wreg
  5785 ;; Tracked objects:
  5786 ;;		On entry : 0/0
  5787 ;;		On exit  : 0/0
  5788 ;;		Unchanged: 0/0
  5789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5790 ;;      Params:         0       0       0       0       0
  5791 ;;      Locals:         1       0       0       0       0
  5792 ;;      Temps:          0       0       0       0       0
  5793 ;;      Totals:         1       0       0       0       0
  5794 ;;Total ram usage:        1 bytes
  5795 ;; Hardware stack levels used:    1
  5796 ;; Hardware stack levels required when called:    1
  5797 ;; This function calls:
  5798 ;;		Nothing
  5799 ;; This function is called by:
  5800 ;;		_main
  5801 ;;		_USART_string
  5802 ;; This function uses a non-reentrant model
  5803 ;;
  5804                           
  5805                           
  5806                           ;psect for function _USART_Tx
  5807  0B53                     _USART_Tx:
  5808                           
  5809                           ;incstack = 0
  5810                           ; Regs used in _USART_Tx: [wreg]
  5811                           ;USART_Tx@data stored from wreg
  5812  0B53  00F3               	movwf	USART_Tx@data
  5813  0B54                     l1912:
  5814  0B54                     l220:	
  5815                           ;USART.c: 28:     while(TXSTAbits.TRMT == 0);
  5816                           
  5817  0B54  1683               	bsf	3,5	;RP0=1, select bank1
  5818  0B55  1303               	bcf	3,6	;RP1=0, select bank1
  5819  0B56  1C98               	btfss	24,1	;volatile
  5820  0B57  2B59               	goto	u731
  5821  0B58  2B5A               	goto	u730
  5822  0B59                     u731:
  5823  0B59  2B54               	goto	l220
  5824  0B5A                     u730:
  5825  0B5A                     l1914:
  5826                           
  5827                           ;USART.c: 29:     TXREG = data;
  5828  0B5A  0873               	movf	USART_Tx@data,w
  5829  0B5B  1283               	bcf	3,5	;RP0=0, select bank0
  5830  0B5C  1303               	bcf	3,6	;RP1=0, select bank0
  5831  0B5D  0099               	movwf	25	;volatile
  5832  0B5E                     l223:
  5833  0B5E  0008               	return
  5834  0B5F                     __end_of_USART_Tx:
  5835                           
  5836                           	psect	text23
  5837  0B2B                     __ptext23:	
  5838 ;; *************** function _USART_Rx *****************
  5839 ;; Defined at:
  5840 ;;		line 32 in file "USART.c"
  5841 ;; Parameters:    Size  Location     Type
  5842 ;;		None
  5843 ;; Auto vars:     Size  Location     Type
  5844 ;;		None
  5845 ;; Return value:  Size  Location     Type
  5846 ;;                  1    wreg      unsigned char 
  5847 ;; Registers used:
  5848 ;;		wreg
  5849 ;; Tracked objects:
  5850 ;;		On entry : 0/0
  5851 ;;		On exit  : 0/0
  5852 ;;		Unchanged: 0/0
  5853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5854 ;;      Params:         0       0       0       0       0
  5855 ;;      Locals:         0       0       0       0       0
  5856 ;;      Temps:          0       0       0       0       0
  5857 ;;      Totals:         0       0       0       0       0
  5858 ;;Total ram usage:        0 bytes
  5859 ;; Hardware stack levels used:    1
  5860 ;; Hardware stack levels required when called:    1
  5861 ;; This function calls:
  5862 ;;		Nothing
  5863 ;; This function is called by:
  5864 ;;		_main
  5865 ;; This function uses a non-reentrant model
  5866 ;;
  5867                           
  5868                           
  5869                           ;psect for function _USART_Rx
  5870  0B2B                     _USART_Rx:
  5871  0B2B                     l1908:	
  5872                           ;incstack = 0
  5873                           ; Regs used in _USART_Rx: [wreg]
  5874                           
  5875                           
  5876                           ;USART.c: 33:     return RCREG;
  5877  0B2B  1283               	bcf	3,5	;RP0=0, select bank0
  5878  0B2C  1303               	bcf	3,6	;RP1=0, select bank0
  5879  0B2D  081A               	movf	26,w	;volatile
  5880  0B2E                     l226:
  5881  0B2E  0008               	return
  5882  0B2F                     __end_of_USART_Rx:
  5883                           
  5884                           	psect	text24
  5885  0C69                     __ptext24:	
  5886 ;; *************** function _LCD_Cadena *****************
  5887 ;; Defined at:
  5888 ;;		line 68 in file "LCD.c"
  5889 ;; Parameters:    Size  Location     Type
  5890 ;;  dato            2    5[COMMON] PTR const unsigned char 
  5891 ;;		 -> STR_3(12), STR_2(12), STR_1(16), calendario(16), 
  5892 ;;		 -> time(14), 
  5893 ;; Auto vars:     Size  Location     Type
  5894 ;;		None
  5895 ;; Return value:  Size  Location     Type
  5896 ;;                  1    wreg      void 
  5897 ;; Registers used:
  5898 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5899 ;; Tracked objects:
  5900 ;;		On entry : 0/0
  5901 ;;		On exit  : 0/0
  5902 ;;		Unchanged: 0/0
  5903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5904 ;;      Params:         2       0       0       0       0
  5905 ;;      Locals:         0       0       0       0       0
  5906 ;;      Temps:          1       0       0       0       0
  5907 ;;      Totals:         3       0       0       0       0
  5908 ;;Total ram usage:        3 bytes
  5909 ;; Hardware stack levels used:    1
  5910 ;; Hardware stack levels required when called:    2
  5911 ;; This function calls:
  5912 ;;		_LCD_Data
  5913 ;; This function is called by:
  5914 ;;		_main
  5915 ;; This function uses a non-reentrant model
  5916 ;;
  5917                           
  5918                           
  5919                           ;psect for function _LCD_Cadena
  5920  0C69                     _LCD_Cadena:
  5921  0C69                     l1854:	
  5922                           ;incstack = 0
  5923                           ; Regs used in _LCD_Cadena: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5924                           
  5925                           
  5926                           ;LCD.c: 69:     while(*dato){
  5927  0C69  2C85               	goto	l1862
  5928  0C6A                     l1856:
  5929                           
  5930                           ;LCD.c: 70:         _delay((unsigned long)((100)*(8000000/4000000.0)));
  5931  0C6A  3042               	movlw	66
  5932  0C6B  00F7               	movwf	??_LCD_Cadena
  5933  0C6C                     u1727:
  5934  0C6C  0BF7               	decfsz	??_LCD_Cadena,f
  5935  0C6D  2C6C               	goto	u1727
  5936  0C6E  0000               	nop
  5937  0C6F                     l1858:
  5938                           
  5939                           ;LCD.c: 71:         LCD_Data(*dato);
  5940  0C6F  0876               	movf	LCD_Cadena@dato+1,w
  5941  0C70  1283               	bcf	3,5	;RP0=0, select bank0
  5942  0C71  1303               	bcf	3,6	;RP1=0, select bank0
  5943  0C72  00FF               	movwf	btemp+1
  5944  0C73  0875               	movf	LCD_Cadena@dato,w
  5945  0C74  0084               	movwf	4
  5946  0C75  120A  158A  2000  120A  158A  	fcall	stringtab
  5947  0C7A  120A  158A  2403  120A  158A  	fcall	_LCD_Data
  5948  0C7F                     l1860:
  5949                           
  5950                           ;LCD.c: 72:         dato++;
  5951  0C7F  3001               	movlw	1
  5952  0C80  07F5               	addwf	LCD_Cadena@dato,f
  5953  0C81  1803               	skipnc
  5954  0C82  0AF6               	incf	LCD_Cadena@dato+1,f
  5955  0C83  3000               	movlw	0
  5956  0C84  07F6               	addwf	LCD_Cadena@dato+1,f
  5957  0C85                     l1862:
  5958                           
  5959                           ;LCD.c: 69:     while(*dato){
  5960  0C85  0876               	movf	LCD_Cadena@dato+1,w
  5961  0C86  1283               	bcf	3,5	;RP0=0, select bank0
  5962  0C87  1303               	bcf	3,6	;RP1=0, select bank0
  5963  0C88  00FF               	movwf	btemp+1
  5964  0C89  0875               	movf	LCD_Cadena@dato,w
  5965  0C8A  0084               	movwf	4
  5966  0C8B  120A  158A  2000  120A  158A  	fcall	stringtab
  5967  0C90  3A00               	xorlw	0
  5968  0C91  1D03               	skipz
  5969  0C92  2C94               	goto	u721
  5970  0C93  2C95               	goto	u720
  5971  0C94                     u721:
  5972  0C94  2C6A               	goto	l1856
  5973  0C95                     u720:
  5974  0C95                     l263:
  5975  0C95  0008               	return
  5976  0C96                     __end_of_LCD_Cadena:
  5977                           
  5978                           	psect	text25
  5979  0C03                     __ptext25:	
  5980 ;; *************** function _LCD_Data *****************
  5981 ;; Defined at:
  5982 ;;		line 76 in file "LCD.c"
  5983 ;; Parameters:    Size  Location     Type
  5984 ;;  data            1    wreg     unsigned char 
  5985 ;; Auto vars:     Size  Location     Type
  5986 ;;  data            1    4[COMMON] unsigned char 
  5987 ;; Return value:  Size  Location     Type
  5988 ;;                  1    wreg      void 
  5989 ;; Registers used:
  5990 ;;		wreg
  5991 ;; Tracked objects:
  5992 ;;		On entry : 0/0
  5993 ;;		On exit  : 0/0
  5994 ;;		Unchanged: 0/0
  5995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5996 ;;      Params:         0       0       0       0       0
  5997 ;;      Locals:         1       0       0       0       0
  5998 ;;      Temps:          1       0       0       0       0
  5999 ;;      Totals:         2       0       0       0       0
  6000 ;;Total ram usage:        2 bytes
  6001 ;; Hardware stack levels used:    1
  6002 ;; Hardware stack levels required when called:    1
  6003 ;; This function calls:
  6004 ;;		Nothing
  6005 ;; This function is called by:
  6006 ;;		_valores
  6007 ;;		_valores2
  6008 ;;		_LCD_Cadena
  6009 ;; This function uses a non-reentrant model
  6010 ;;
  6011                           
  6012                           
  6013                           ;psect for function _LCD_Data
  6014  0C03                     _LCD_Data:
  6015                           
  6016                           ;incstack = 0
  6017                           ; Regs used in _LCD_Data: [wreg]
  6018                           ;LCD_Data@data stored from wreg
  6019  0C03  00F4               	movwf	LCD_Data@data
  6020  0C04                     l1762:
  6021                           
  6022                           ;LCD.c: 77:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  6023  0C04  3042               	movlw	66
  6024  0C05  00F3               	movwf	??_LCD_Data
  6025  0C06                     u1737:
  6026  0C06  0BF3               	decfsz	??_LCD_Data,f
  6027  0C07  2C06               	goto	u1737
  6028  0C08  0000               	nop
  6029                           
  6030                           ;LCD.c: 79:     PORTD = data;
  6031  0C09  0874               	movf	LCD_Data@data,w
  6032  0C0A  1283               	bcf	3,5	;RP0=0, select bank0
  6033  0C0B  1303               	bcf	3,6	;RP1=0, select bank0
  6034  0C0C  0088               	movwf	8	;volatile
  6035  0C0D                     l1764:
  6036                           
  6037                           ;LCD.c: 81:     PORTEbits.RE1 = 0;
  6038  0C0D  1089               	bcf	9,1	;volatile
  6039  0C0E                     l1766:
  6040                           
  6041                           ;LCD.c: 82:     PORTEbits.RE0 = 1;
  6042  0C0E  1409               	bsf	9,0	;volatile
  6043                           
  6044                           ;LCD.c: 83:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  6045  0C0F  3006               	movlw	6
  6046  0C10  00F3               	movwf	??_LCD_Data
  6047  0C11                     u1747:
  6048  0C11  0BF3               	decfsz	??_LCD_Data,f
  6049  0C12  2C11               	goto	u1747
  6050  0C13  0000               	nop
  6051  0C14                     l1768:
  6052                           
  6053                           ;LCD.c: 84:     PORTEbits.RE2 = 1;
  6054  0C14  1283               	bcf	3,5	;RP0=0, select bank0
  6055  0C15  1303               	bcf	3,6	;RP1=0, select bank0
  6056  0C16  1509               	bsf	9,2	;volatile
  6057                           
  6058                           ;LCD.c: 85:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  6059  0C17  3006               	movlw	6
  6060  0C18  00F3               	movwf	??_LCD_Data
  6061  0C19                     u1757:
  6062  0C19  0BF3               	decfsz	??_LCD_Data,f
  6063  0C1A  2C19               	goto	u1757
  6064  0C1B  0000               	nop
  6065  0C1C                     l1770:
  6066                           
  6067                           ;LCD.c: 86:     PORTEbits.RE2 = 0;
  6068  0C1C  1283               	bcf	3,5	;RP0=0, select bank0
  6069  0C1D  1303               	bcf	3,6	;RP1=0, select bank0
  6070  0C1E  1109               	bcf	9,2	;volatile
  6071  0C1F                     l266:
  6072  0C1F  0008               	return
  6073  0C20                     __end_of_LCD_Data:
  6074                           
  6075                           	psect	text26
  6076  0BA9                     __ptext26:	
  6077 ;; *************** function _isr *****************
  6078 ;; Defined at:
  6079 ;;		line 53 in file "MAIN.c"
  6080 ;; Parameters:    Size  Location     Type
  6081 ;;		None
  6082 ;; Auto vars:     Size  Location     Type
  6083 ;;		None
  6084 ;; Return value:  Size  Location     Type
  6085 ;;                  1    wreg      void 
  6086 ;; Registers used:
  6087 ;;		wreg, status,2, status,0
  6088 ;; Tracked objects:
  6089 ;;		On entry : 0/0
  6090 ;;		On exit  : 0/0
  6091 ;;		Unchanged: 0/0
  6092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6093 ;;      Params:         0       0       0       0       0
  6094 ;;      Locals:         0       0       0       0       0
  6095 ;;      Temps:          3       0       0       0       0
  6096 ;;      Totals:         3       0       0       0       0
  6097 ;;Total ram usage:        3 bytes
  6098 ;; Hardware stack levels used:    1
  6099 ;; This function calls:
  6100 ;;		Nothing
  6101 ;; This function is called by:
  6102 ;;		Interrupt level 1
  6103 ;; This function uses a non-reentrant model
  6104 ;;
  6105                           
  6106                           
  6107                           ;psect for function _isr
  6108  0BA9                     _isr:
  6109  0BA9                     i1l2026:
  6110                           
  6111                           ;MAIN.c: 54:         if(RBIF == 1){
  6112  0BA9  1C0B               	btfss	11,0	;volatile
  6113  0BAA  2BAC               	goto	u99_21
  6114  0BAB  2BAD               	goto	u99_20
  6115  0BAC                     u99_21:
  6116  0BAC  2BB7               	goto	i1l2032
  6117  0BAD                     u99_20:
  6118  0BAD                     i1l2028:
  6119                           
  6120                           ;MAIN.c: 56:             if(RB2 == 0){
  6121  0BAD  1283               	bcf	3,5	;RP0=0, select bank0
  6122  0BAE  1303               	bcf	3,6	;RP1=0, select bank0
  6123  0BAF  1906               	btfsc	6,2	;volatile
  6124  0BB0  2BB2               	goto	u100_21
  6125  0BB1  2BB3               	goto	u100_20
  6126  0BB2                     u100_21:
  6127  0BB2  2BB7               	goto	i1l2032
  6128  0BB3                     u100_20:
  6129  0BB3                     i1l2030:
  6130                           
  6131                           ;MAIN.c: 57:                 cont++;
  6132  0BB3  3001               	movlw	1
  6133  0BB4  00F0               	movwf	??_isr
  6134  0BB5  0870               	movf	??_isr,w
  6135  0BB6  07C0               	addwf	_cont,f
  6136  0BB7                     i1l2032:
  6137                           
  6138                           ;MAIN.c: 60:         RBIF = 0;
  6139  0BB7  100B               	bcf	11,0	;volatile
  6140  0BB8                     i1l157:
  6141  0BB8  0872               	movf	??_isr+2,w
  6142  0BB9  008A               	movwf	10
  6143  0BBA  0E71               	swapf	??_isr+1,w
  6144  0BBB  0083               	movwf	3
  6145  0BBC  0EFE               	swapf	btemp,f
  6146  0BBD  0E7E               	swapf	btemp,w
  6147  0BBE  0009               	retfie
  6148  0BBF                     __end_of_isr:
  6149  007E                     btemp	set	126	;btemp
  6150  007E                     wtemp0	set	126
  6151                           
  6152                           	psect	intentry
  6153  0004                     __pintentry:	
  6154                           ;incstack = 0
  6155                           ; Regs used in _isr: [wreg+status,2+status,0]
  6156                           
  6157  0004                     interrupt_function:
  6158  007E                     saved_w	set	btemp
  6159  0004  00FE               	movwf	btemp
  6160  0005  0E03               	swapf	3,w
  6161  0006  00F1               	movwf	??_isr+1
  6162  0007  080A               	movf	10,w
  6163  0008  00F2               	movwf	??_isr+2
  6164  0009  120A  158A  2BA9   	ljmp	_isr
  6165                           
  6166                           	psect	config
  6167                           
  6168                           ;Config register CONFIG1 @ 0x2007
  6169                           ;	Oscillator Selection bits
  6170                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  6171                           ;	Watchdog Timer Enable bit
  6172                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  6173                           ;	Power-up Timer Enable bit
  6174                           ;	PWRTE = OFF, PWRT disabled
  6175                           ;	RE3/MCLR pin function select bit
  6176                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  6177                           ;	Code Protection bit
  6178                           ;	CP = OFF, Program memory code protection is disabled
  6179                           ;	Data Code Protection bit
  6180                           ;	CPD = OFF, Data memory code protection is disabled
  6181                           ;	Brown Out Reset Selection bits
  6182                           ;	BOREN = OFF, BOR disabled
  6183                           ;	Internal External Switchover bit
  6184                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  6185                           ;	Fail-Safe Clock Monitor Enabled bit
  6186                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  6187                           ;	Low Voltage Programming Enable bit
  6188                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  6189                           ;	In-Circuit Debugger Mode bit
  6190                           ;	DEBUG = 0x1, unprogrammed default
  6191  2007                     	org	8199
  6192  2007  20D4               	dw	8404
  6193                           
  6194                           ;Config register CONFIG2 @ 0x2008
  6195                           ;	Brown-out Reset Selection bit
  6196                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  6197                           ;	Flash Program Memory Self Write Enable bits
  6198                           ;	WRT = OFF, Write protection off
  6199  2008                     	org	8200
  6200  2008  3FFF               	dw	16383

Data Sizes:
    Strings     28
    Constant    0
    Data        30
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     33      70
    BANK1            80      0      30
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Cadena@dato	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[12]), STR_2(CODE[12]), STR_1(CODE[16]), calendario(BANK1[16]), 
		 -> time(BANK1[14]), 


Critical Paths under _main in COMMON

    _main->_LCD_Cadena
    _main->___awdiv
    _main->___awmod
    _main->_valores
    _main->_valores2
    _valores2->_LCD_XY
    _valores->_LCD_XY
    _LCD_XY->_LCD_comando
    _setup->_I2C_Master_Init
    _LCD_Init->_LCD_comando
    _I2C_Master_Init->___lldiv
    _read_rtc->_I2C_Master_Read
    ___awdiv->___wmul
    _LCD_Cadena->_LCD_Data

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _read_rtc->_I2C_Master_Read
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   14081
                                             17 BANK0     16    16      0
                         _LCD_Cadena
                             _LCD_XY
                           _USART_Rx
                           _USART_Tx
                            ___awdiv
                            ___awmod
                             ___bmul
                             ___wmul
                           _read_rtc
                              _setup
                            _valores
                           _valores2
 ---------------------------------------------------------------------------------
 (1) _valores2                                             6     2      4    1020
                                              7 COMMON     1     1      0
                                              0 BANK0      5     1      4
                           _LCD_Data
                             _LCD_XY
 ---------------------------------------------------------------------------------
 (1) _valores                                              6     2      4    1020
                                              7 COMMON     1     1      0
                                              0 BANK0      5     1      4
                           _LCD_Data
                             _LCD_XY
 ---------------------------------------------------------------------------------
 (2) _LCD_XY                                               2     1      1     468
                                              5 COMMON     2     1      1
                        _LCD_comando
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     586
                            _ADC_Int
                    _I2C_Master_Init
                           _LCD_Init
                          _USART_Int
                              _canal
 ---------------------------------------------------------------------------------
 (2) _canal                                                3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _USART_Int                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             2     2      0      22
                                              5 COMMON     2     2      0
                        _LCD_comando
 ---------------------------------------------------------------------------------
 (3) _LCD_comando                                          2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) _ADC_Int                                              1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _read_rtc                                             7     5      2    1061
                                              2 BANK0      7     5      2
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     301
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     155
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    4816
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     700
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4    1513
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    2428
                                              7 COMMON     1     1      0
                                              2 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _USART_Tx                                             1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Rx                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Cadena                                           3     1      2     447
                                              5 COMMON     3     1      2
                           _LCD_Data
 ---------------------------------------------------------------------------------
 (2) _LCD_Data                                             2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Cadena
     _LCD_Data
   _LCD_XY
     _LCD_comando
   _USART_Rx
   _USART_Tx
   ___awdiv
     ___wmul (ARG)
   ___awmod
   ___bmul
   ___wmul
   _read_rtc
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _setup
     _ADC_Int
     _I2C_Master_Init
       ___lldiv
     _LCD_Init
       _LCD_comando
     _USART_Int
     _canal
   _valores
     _LCD_Data
     _LCD_XY
       _LCD_comando
   _valores2
     _LCD_Data
     _LCD_XY
       _LCD_comando

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      1E       7       37.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     21      46       5       87.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      6F      12        0.0%
ABS                  0      0      6F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Sep 03 21:03:21 2021

                        pc 0002             ___bmul@product 0075               ___awdiv@sign 004C  
                       fsr 0004        ___wmul@multiplicand 0075                        l200 0D91  
                      l220 0B54                        l301 0B6B                        l310 0B48  
                      l223 0B5E                        l304 0B3F                        l313 0B52  
                      l217 0BA8                        l226 0B2E                        l330 0BD4  
                      l316 0CBB                        l252 0C02                        l340 0782  
                      l317 0CBE                        l341 0789                        l318 0CC5  
                      l342 0790                        l350 07FC                        l334 075F  
                      l190 0E80                        l263 0C95                        l343 0797  
                      l191 0EB4                        l175 06E4                        l344 079E  
                      l336 0766                        l249 0FFF                        l345 07A5  
                      l337 076D                        l257 0BEA                        l266 0C1F  
                      l602 0DEC                        l194 0E50                        l346 07AC  
                      l338 0774                        l347 07B3                        l339 077B  
                      l436 0C4E                        l348 07BA                        l188 0E7C  
                      l349 07C1                        l197 0D47                        l462 0B93  
                      l438 0C68                        l295 0CFF                        l472 0F1C  
                      l298 0B5F                        l589 0F85                        _GIE 005F  
                      _RB2 0032                        _PR2 0092                        u720 0C95  
                      u800 0F24                        u721 0C94                        u801 0F23  
                      u730 0B5A                        u810 0F2F                        u731 0B59  
                      u811 0F2E                        u820 0F40                        u821 0F3F  
                      u840 0F52                        u680 0BDB                        u841 0F51  
                      u681 0BDA                        u835 0F44                        u860 0F63  
                      u780 0B85                        u861 0F62                        u781 0B84  
                      u790 0B92                        u855 0F53                        u791 0B91  
                      u880 0F77                        u881 0F76                        u865 0F5F  
                      u890 0F7C                        u891 0F7B                        u875 0F6B  
                      _dia 002E                        _mes 0028                        _min 0030  
                      _isr 0BA9                        _seg 0032                        fsr0 0004  
                      indf 0000            __end_of_ADC_Int 0BD5               ___awmod@sign 0046  
                     l2300 0E51                       l2310 0E63                       l2302 0E54  
                     l2232 0B5F                       l2240 0ECA                       l1600 0BF7  
                     l2320 0E6C                       l2312 0E64                       l2304 0E56  
                     l2400 0D3F                       l2234 0B65                       l2250 0F04  
                     l2242 0ED7                       l1602 0BFF                       l2330 0E79  
                     l2322 0E70                       l2314 0E65                       l2306 0E5F  
                     l2410 0D5B                       l2402 0D4B                       l2252 0F05  
                     l2244 0EDB                       l2236 0EB5                       l2260 0CC6  
                     l1700 0FC8                       l2340 0E88                       l2332 0E7B  
                     l2324 0E76                       l2316 0E66                       l2308 0E60  
                     l2420 0D81                       l2412 0D5F                       l2404 0D4F  
                     l2500 00A4                       l2430 0C55                       l2254 0F0E  
                     l2246 0EE4                       l2238 0EC7                       l2270 0CFE  
                     l2262 0CCA                       l1710 0FE3                       l1702 0FCD  
                     l2350 0E8D                       l2342 0E89                       l2334 0E84  
                     l2326 0E77                       l2318 0E67                       l2422 0D89  
                     l2414 0D69                       l2406 0D53                       l2510 01BA  
                     l2502 00E6                       l2440 0D95                       l2432 0C5C  
                     l2424 0C3E                       l2272 0B37                       l2280 0B40  
                     l2248 0EF6                       l2256 0F14                       l2264 0CCD  
                     l1712 0FE9                       l1704 0FD3                       l1640 075E  
                     l2360 0EA5                       l2352 0E90                       l2344 0E8A  
                     l2336 0E86                       l2328 0E78                       l2416 0D71  
                     l2408 0D57                       l2600 0685                       l2520 02AF  
                     l2512 01FC                       l2504 0142                       l2450 0DA9  
                     l2442 0D99                       l2434 0C62                       l2426 0C42  
                     l2290 0CAC                       l2274 0B3C                       l2282 0B45  
                     l2370 0E28                       l2362 0DED                       l1650 0BBF  
                     l2266 0CFC                       l1714 0FEE                       l1706 0FD8  
                     l2354 0E96                       l2346 0E8B                       l2338 0E87  
                     l1634 0BD6                       l2418 0D79                       l2602 0699  
                     l2610 06B4                       l2530 0311                       l2522 02BE  
                     l2514 0258                       l2506 017C                       l2460 0DC1  
                     l2452 0DAF                       l2444 0D9E                       l2428 0C46  
                     l2292 0CB1                       l2284 0C96                       l2276 0B49  
                     l2372 0E36                       l2364 0E0B                       l1652 0BCD  
                     l2268 0CFD                       l1716 0FF3                       l1708 0FDE  
                     l1660 0B9F                       l1644 07C8                       l2356 0E9B  
                     l2348 0E8C                       l1636 0BDB                       l2380 0D03  
                     l2620 06DF                       l2612 06C8                       l2604 06AD  
                     l2540 03CF                       l2532 0337                       l2524 02CD  
                     l2516 0292                       l2508 0192                       l2470 0DE3  
                     l2462 0DCB                       l2454 0DB2                       l2446 0DA0  
                     l2438 0D92                       l2294 0CB7                       l2286 0C9B  
                     l2278 0B4E                       l2374 0E3B                       l2366 0E1A  
                     l1654 0BD1                       l1718 0FF9                       l1670 0F86  
                     l1662 0BA0                       l2358 0EA0                       l1638 0BE3  
                     l2390 0D17                       l2382 0D07                       l2630 06F2  
                     l2622 06E1                       l2614 06CA                       l2606 06B1  
                     l2550 0445                       l2542 03E5                       l2534 035D  
                     l2526 02DC                       l2518 02A0                       l1912 0B54  
                     l2472 0DE8                       l2464 0DD1                       l2456 0DB9  
                     l2448 0DA4                       l2296 0CBF                       l2288 0CA3  
                     l2376 0E4A                       l2368 0E1F                       l1680 0F92  
                     l1672 0F8C                       l1664 0BA3                       l1656 0B94  
                     l2392 0D1F                       l2384 0D0B                       l2640 0756  
                     l2632 06F8                       l2624 06E2                       l2616 06CB  
                     l2608 06B2                       l2560 04BD                       l2552 045D  
                     l2544 03FD                       l2536 0383                       l2528 02EB  
                     l2480 0037                       l1770 0C1C                       l1762 0C04  
                     l1914 0B5A                       l2466 0DD8                       l2458 0DBD  
                     l1930 0B80                       l1594 0BEC                       l1690 0FAC  
                     l1682 0F93                       l1674 0F8D                       l1666 0BA4  
                     l1658 0B9B                       l2394 0D27                       l2386 0D0F  
                     l2634 0722                       l2618 06CD                       l2626 06E4  
                     l2570 05DD                       l2562 04D5                       l2554 0475  
                     l2546 0415                       l2538 03A9                       l2490 0058  
                     l2482 0040                       l1764 0C0D                       l1860 0C7F  
                     l1908 0B2B                       l2468 0DDE                       l1940 0B92  
                     l1932 0B81                       l1596 0BF0                       l1692 0FB2  
                     l1684 0F94                       l1676 0F8E                       l1668 0BA5  
                     l2396 0D2F                       l2388 0D13                       l2636 0728  
                     l2628 06E8                       l2580 0623                       l2572 05E6  
                     l2564 04ED                       l2556 048D                       l2548 042D  
                     l2492 005C                       l2484 0044                       l2476 002C  
                     l1766 0C0E                       l1862 0C85                       l1854 0C69  
                     l1950 0F29                       l1934 0B85                       l1598 0BF1  
                     l1694 0FB7                       l1686 0F9D                       l1678 0F8F  
                     l2398 0D37                       l2638 0753                       l2582 062C  
                     l2590 0658                       l2574 05FE                       l2566 0560  
                     l2558 04A5                       l2494 0063                       l2486 0049  
                     l2478 0031                       l1768 0C14                       l1856 0C6A  
                     l1960 0F3A                       l1952 0F2B                       l1944 0F1D  
                     l1936 0B89                       l1696 0FBD                       l1688 0FA3  
                     l2592 066B                       l2584 063D                       l2568 05D6  
                     l2576 0617                       l2488 0052                       l2496 0066  
                     l1858 0C6F                       l1970 0F52                       l1962 0F40  
                     l1954 0F2F                       l1946 0F20                       l1938 0B8B  
                     l1698 0FC2                       l2666 07D0                       l2594 067E  
                     l2586 0643                       l2578 061C                       l2498 007C  
                     l1972 0F63                       l1964 0F43                       l1980 0F77  
                     l1956 0F34                       l1948 0F24                       l2596 0682  
                     l2588 0655                       l1982 0F7C                       l1974 0F69  
                     l1966 0F4A                       l1958 0F38                       l2598 0683  
                     l1984 0F81                       l1976 0F6A                       l1968 0F4E  
                     l1978 0F71                       ?_isr 0070               ?_LCD_comando 0070  
                     STR_1 0810                       STR_2 0820                       STR_3 0820  
                     u1210 0EDB                       u1211 0EDA                       u1205 0ECC  
                     u1230 0EF6                       u1231 0EF5                       u1400 0DDE  
                     u1320 0C62                       u1401 0DDD                       u1321 0C61  
                     u1305 0C4F                       u1225 0EDD                       u1410 0DE3  
                     u1330 0D99                       u1170 0B65                       u1250 0F14  
                     u1411 0DE2                       u1331 0D98                       u1315 0C56  
                     u1171 0B64                       u1251 0F13                       u1235 0EF2  
                     u1340 0DA4                       u1180 0B6B                       u1260 0CDD  
                     u1500 0699                       u1420 0037                       u1341 0DA3  
                     u1181 0B6A                       u1245 0F06                       u1501 0698  
                     u1421 0036                       u1350 0DAF                       u1270 0CB7  
                     u1190 0EC7                       u1510 06AD                       u1430 0040  
                     u1351 0DAE                       u1271 0CB6                       u1191 0EC6  
                     u1511 06AC                       u1503 0695                       u1431 003F  
                     u1280 0E80                       u1520 06C8                       u1440 0052  
                     u1265 0CD8                       u1281 0E7F                       u1521 06C7  
                     u1513 06A9                       u1441 0051                       u1370 0DC1  
                     u1290 0C46                       u1530 06DF                       u1450 05D6  
                     u1371 0DC0                       u1291 0C45                       u1531 06DE  
                     u1451 05D5                       u1380 0DCB                       u1540 06E8  
                     u1460 061C                       u1381 0DCA                       u1365 0DB3  
                     u1541 06E7                       u1525 06C4                       u1461 061B  
                     u1550 06F8                       u1470 0643                       u1607 0FB4  
                     u1551 06F7                       u1535 06DB                       u1471 0642  
                     u1560 0728                       u1480 066B                       u1385 0DC7  
                     u1617 0FBF                       u1561 0727                       u1481 066A  
                     u1490 067E                       u1395 0DD2                       u1707 0E13  
                     u1627 0FCA                       u1491 067D                       u1483 0667  
                     u1717 0E43                       u1637 0FD5                       u1493 067A  
                     u1727 0C6C                       u1647 0FE0                       u1737 0C06  
                     u1657 0FEB                       u1577 0060                       u1747 0C11  
                     u1667 0FF0                       u1587 0F98                       u1757 0C19  
                     u1677 0BF4                       u1597 0FA7                       u1687 0BFC  
                     u1697 0BCF                       _PEIE 005E                       _RBIF 0058  
                     _TEMP 0034                       _dec1 003E                       _dec2 003A  
                     _cen1 003F                       _cen2 003B                       _mil1 0079  
                     _mil2 003C                       _cont 0040                       _seg1 0038  
                     _seg2 0037                       _main 002C                       _hora 002C  
                     _uni1 003D                       _uni2 0039                       _time 00B0  
                     _year 002A                       btemp 007E                       start 000C  
        ___bmul@multiplier 0076                      ??_isr 0070           __end_of_LCD_Data 0C20  
         __end_of_LCD_Init 1000           ?_I2C_Master_Init 0052           ?_I2C_Master_Read 0073  
             LCD_Data@data 0074           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
                    ?_main 0070            __end_of___awdiv 0F86            __end_of___awmod 0DED  
                    _ANSEL 0188            __end_of___lldiv 0F1D            ___awdiv@divisor 0047  
                    i1l157 0BB8            ___awdiv@counter 004B                      _RCREG 001A  
                    _SPBRG 0099                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _SSPIE 0463                      _TRISE 0089  
                    _SSPIF 0063                      _TXREG 0019                      u99_20 0BAD  
                    u99_21 0BAC                      _canal 075D        __size_of_LCD_Cadena 002D  
                    _foto1 0044                      _foto2 0043                      _listo 0036  
                    _setup 0E51           __end_of_USART_Rx 0B2F           __end_of_USART_Tx 0B5F  
             USART_Tx@data 0073                      pclath 000A            __end_of_valores 0D48  
       __size_of_USART_Int 0015                      status 0003                      wtemp0 007E  
          __initialization 000F               __end_of_main 075D                  ??_ADC_Int 0073  
                   ??_main 0056          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0073  
                   ?_canal 0070         ??_I2C_Master_Start 0073         ??_I2C_Master_Write 0075  
                   _ADRESH 001E                     _CCPR1L 0015           ___awdiv@dividend 0049  
                   ?_setup 0070                     _ANSELH 0189                     u100_20 0BB3  
                   u100_21 0BB2                     i1l2030 0BB3                     i1l2032 0BB7  
                   i1l2026 0BA9                     i1l2028 0BAD                     _LCD_XY 0BD5  
                   _SPBRGH 009A                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
                   ___bmul 0B7F                     ___wmul 0C3E                  ??___awdiv 0077  
                ??___awmod 0077                  ??___lldiv 0073                     canal@c 0075  
         ___awdiv@quotient 004D           __end_of_read_rtc 0E51            ___awmod@divisor 0073  
                   _servo1 0042                     _servo2 0041            ___awmod@counter 0045  
        __end_of_USART_Int 0BA9           __end_of_valores2 0D92                     saved_w 007E  
                ??_valores 0077                  ?_LCD_Data 0070    __end_of__initialization 0028  
                ?_LCD_Init 0070       __size_of_LCD_comando 0018        ___bmul@multiplicand 0073  
             ??_LCD_Cadena 0077             __pcstackCOMMON 0070               __pidataBANK1 0C20  
            __end_of_canal 07FD              __end_of_setup 0EB5             LCD_Cadena@dato 0075  
                ?_USART_Rx 0070                  ?_USART_Tx 0070             _OPTION_REGbits 0081  
                  ??_canal 0073                 _calendario 00A0         __end_of_LCD_Cadena 0C96  
                  ??_setup 0078                 __pbssBANK0 0020                    ?_LCD_XY 0075  
                  LCD_XY@x 0076                    LCD_XY@y 0075                 ??_LCD_Data 0073  
               ??_LCD_Init 0075                 __pmaintext 002C                    ?___bmul 0073  
                  ?___wmul 0073                 __pintentry 0004                    _ADC_Int 0BBF  
               ??_USART_Rx 0073                 ??_USART_Tx 0073                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 0800            __size_of_LCD_XY 0016  
                ?_read_rtc 0047                  ?_valores2 0045            __size_of___bmul 0015  
                  ___awdiv 0F1D                    ___awmod 0D92                    ___lldiv 0EB5  
          __size_of___wmul 002B                    _decmil1 007A                    _decmil2 0078  
                  __ptext1 0D48                    __ptext2 0D00                    __ptext3 0BD5  
                  __ptext4 0E51                    __ptext5 075D                    __ptext6 0B94  
                  __ptext7 0F86                    __ptext8 0BEB                    __ptext9 0CC6  
                _T2CONbits 0012               __size_of_isr 0016           ___awmod@dividend 0075  
 __size_of_I2C_Master_Init 003A   __size_of_I2C_Master_Read 0030            valores2@decenas 0047  
 __size_of_I2C_Master_Wait 000D                    _valores 0D00   __size_of_I2C_Master_Stop 0009  
                  clrloop0 0B30       end_of_initialization 0028                 ??_read_rtc 0049  
__size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A            ___lldiv@divisor 0045  
          ___lldiv@counter 0051                 ??_valores2 0077                  _RCSTAbits 0018  
         I2C_Master_Init@c 0052           I2C_Master_Read@a 0073                  _PORTEbits 0009  
             read_rtc@data 004C                  _USART_Int 0B94                  _TRISCbits 0087  
                _TRISEbits 0089      valores@decenasdemiles 0049             __end_of_LCD_XY 0BEB  
              _CCP1CONbits 0017                  _TXSTAbits 0098     valores2@decenasdemiles 0049  
        __size_of_LCD_Data 001D          __size_of_LCD_Init 007A             __end_of___bmul 0B94  
           __end_of___wmul 0C69                _BAUDCTLbits 0187          __size_of_USART_Rx 0004  
        __size_of_USART_Tx 000C        start_initialization 000F                 ?_USART_Int 0070  
              __end_of_isr 0BBF              ??_LCD_comando 0073            valores@centenas 0046  
                 ??_LCD_XY 0076          ??_I2C_Master_Init 0074          ??_I2C_Master_Read 0075  
        ??_I2C_Master_Wait 0073          ??_I2C_Master_Stop 0073                   ??___bmul 0074  
                 ??___wmul 0077                 init_fetch0 0B6C                __pdataBANK1 00A0  
                 ?_ADC_Int 0070            valores@unidades 0048                __pbssCOMMON 0078  
                ___latbits 0002              __pcstackBANK0 0045           _I2C_Master_Start 0B37  
         _I2C_Master_Write 0B49        __end_of_LCD_comando 0C03          __size_of_read_rtc 0064  
                 ?___awdiv 0047                   ?___awmod 0073                   ?___lldiv 0045  
        __size_of_valores2 004A                  __pstrings 0800                ??_USART_Int 0073  
                 ?_valores 0045             __size_of_canal 00A0             __size_of_setup 0064  
                 _LCD_Data 0C03          interrupt_function 0004                   _LCD_Init 0F86  
           ___wmul@product 0045                   _IOCBbits 0096                  clear_ram0 0B2F  
                 _PIR1bits 000C                   _USART_Rx 0B2B                   _USART_Tx 0B53  
               _ADCON0bits 001F           __size_of_ADC_Int 0016                __stringbase 080F  
               _ADCON1bits 009F          ___wmul@multiplier 0073                   _WPUBbits 0095  
      I2C_Master_Read@temp 0045                _LCD_comando 0BEB             valores@decenas 0047  
         __size_of___awdiv 0069           __size_of___awmod 005B           __size_of___lldiv 0068  
       __end_of__stringtab 0810            _I2C_Master_Init 0CC6            _I2C_Master_Read 0C96  
          _I2C_Master_Wait 0B5F            _I2C_Master_Stop 0B40                   __ptext10 0EB5  
                 __ptext11 0BBF                   __ptext20 0D92                   __ptext12 0DED  
                 __ptext21 0F1D                   __ptext13 0B49                   __ptext22 0B53  
                 __ptext14 0B40                   __ptext23 0B2B                   __ptext15 0B37  
                 __ptext24 0C69                   __ptext16 0C96                   __ptext25 0C03  
                 __ptext17 0B5F                   __ptext26 0BA9                   __ptext18 0C3E  
                 __ptext19 0B7F           __size_of_valores 0048              __size_of_main 0731  
                 _read_rtc 0DED              valores2@miles 0045                 _LCD_Cadena 0C69  
                 _valores2 0D48           valores2@centenas 0046   __end_of_I2C_Master_Start 0B40  
 __end_of_I2C_Master_Write 0B53                 _INTCONbits 000B                   init_ram0 0B70  
          read_rtc@address 0047                   intlevel1 0000           valores2@unidades 0048  
         ___lldiv@dividend 0049           _fotoresistencia1 0024           _fotoresistencia2 0020  
                stringcode 080A                 _OSCCONbits 008F    __end_of_I2C_Master_Init 0D00  
  __end_of_I2C_Master_Read 0CC6    __end_of_I2C_Master_Wait 0B6C    __end_of_I2C_Master_Stop 0B49  
             valores@miles 0045           ___lldiv@quotient 004D            LCD_comando@dato 0074  
        I2C_Master_Write@d 0073                   stringdir 080A                   stringtab 0800  
              _SSPCON2bits 0091                ?_LCD_Cadena 0075  
