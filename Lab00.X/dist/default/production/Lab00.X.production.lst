

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Jul 12 14:48:00 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208                           
   209                           	psect	strings
   210  01E9                     __pstrings:
   211  01E9                     stringtab:
   212  01E9                     __stringtab:
   213  01E9                     stringcode:	
   214                           ;	String table - string pointers are 1 byte each
   215                           
   216  01E9                     stringdir:
   217  01E9  3001               	movlw	high stringdir
   218  01EA  008A               	movwf	10
   219  01EB  0804               	movf	4,w
   220  01EC  0A84               	incf	4,f
   221  01ED  0782               	addwf	2,f
   222  01EE                     __stringbase:
   223  01EE  3400               	retlw	0
   224  01EF                     __end_of__stringtab:
   225  01EF                     _tabla:
   226  01EF  34FC               	retlw	252
   227  01F0  3460               	retlw	96
   228  01F1  34DA               	retlw	218
   229  01F2  34F2               	retlw	242
   230  01F3  3466               	retlw	102
   231  01F4  34B6               	retlw	182
   232  01F5  34BE               	retlw	190
   233  01F6  34E0               	retlw	224
   234  01F7  34FE               	retlw	254
   235  01F8  34F6               	retlw	246
   236  01F9                     __end_of_tabla:
   237  000B                     _INTCONbits	set	11
   238  0006                     _PORTB	set	6
   239  0009                     _PORTE	set	9
   240  0008                     _PORTD	set	8
   241  0007                     _PORTC	set	7
   242  0005                     _PORTA	set	5
   243  0001                     _TMR0	set	1
   244  0049                     _RE1	set	73
   245  0048                     _RE0	set	72
   246  0035                     _RB5	set	53
   247  0036                     _RB6	set	54
   248  0037                     _RB7	set	55
   249  005A                     _T0IF	set	90
   250  0032                     _RB2	set	50
   251  0031                     _RB1	set	49
   252  0030                     _RB0	set	48
   253  0058                     _RBIF	set	88
   254  0096                     _IOCBbits	set	150
   255  0095                     _WPUBbits	set	149
   256  0081                     _OPTION_REGbits	set	129
   257  008F                     _OSCCONbits	set	143
   258  0089                     _TRISE	set	137
   259  0088                     _TRISD	set	136
   260  0087                     _TRISC	set	135
   261  0086                     _TRISB	set	134
   262  0085                     _TRISA	set	133
   263  0189                     _ANSELH	set	393
   264  0188                     _ANSEL	set	392
   265                           
   266                           	psect	cinit
   267  000F                     start_initialization:	
   268                           ; #config settings
   269                           
   270  000F                     __initialization:
   271                           
   272                           ; Clear objects allocated to COMMON
   273  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   274  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   275  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   276  0012  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   277                           
   278                           ; Clear objects allocated to BANK0
   279  0013  1283               	bcf	3,5	;RP0=0, select bank0
   280  0014  1303               	bcf	3,6	;RP1=0, select bank0
   281  0015  01A0               	clrf	__pbssBANK0& (0+127)
   282  0016  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   283  0017  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   284  0018  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   285  0019                     end_of_initialization:	
   286                           ;End of C runtime variable initialization code
   287                           
   288  0019                     __end_of__initialization:
   289  0019  0183               	clrf	3
   290  001A  120A  118A  281D   	ljmp	_main	;jump to C main() function
   291                           
   292                           	psect	bssCOMMON
   293  0077                     __pbssCOMMON:
   294  0077                     _j2:
   295  0077                     	ds	1
   296  0078                     _j1:
   297  0078                     	ds	1
   298  0079                     _a:
   299  0079                     	ds	1
   300  007A                     _s:
   301  007A                     	ds	1
   302                           
   303                           	psect	bssBANK0
   304  0020                     __pbssBANK0:
   305  0020                     _cont2:
   306  0020                     	ds	1
   307  0021                     _cont1:
   308  0021                     	ds	1
   309  0022                     _i:
   310  0022                     	ds	1
   311  0023                     _c:
   312  0023                     	ds	1
   313                           
   314                           	psect	cstackCOMMON
   315  0070                     __pcstackCOMMON:
   316  0070                     ?_setup:
   317  0070                     ?_indicador:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0070                     ?_isr:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0070                     ??_isr:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ?_main:	
   327                           ; 1 bytes @ 0x0
   328                           
   329                           
   330                           ; 1 bytes @ 0x0
   331  0070                     	ds	3
   332  0073                     ??_setup:
   333  0073                     ??_indicador:	
   334                           ; 1 bytes @ 0x3
   335                           
   336                           
   337                           ; 1 bytes @ 0x3
   338  0073                     	ds	2
   339  0075                     indicador@analizar:
   340                           
   341                           ; 1 bytes @ 0x5
   342  0075                     	ds	1
   343  0076                     indicador@salida:
   344                           
   345                           ; 1 bytes @ 0x6
   346  0076                     	ds	1
   347                           
   348                           	psect	cstackBANK0
   349  0024                     __pcstackBANK0:
   350  0024                     ??_main:
   351                           
   352                           ; 1 bytes @ 0x0
   353  0024                     	ds	3
   354                           
   355                           	psect	maintext
   356  001D                     __pmaintext:	
   357 ;;
   358 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   359 ;;
   360 ;; *************** function _main *****************
   361 ;; Defined at:
   362 ;;		line 75 in file "juego de carreras.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;		None
   365 ;; Auto vars:     Size  Location     Type
   366 ;;		None
   367 ;; Return value:  Size  Location     Type
   368 ;;                  1    wreg      void 
   369 ;; Registers used:
   370 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   371 ;; Tracked objects:
   372 ;;		On entry : B00/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   376 ;;      Params:         0       0       0       0       0
   377 ;;      Locals:         0       0       0       0       0
   378 ;;      Temps:          0       3       0       0       0
   379 ;;      Totals:         0       3       0       0       0
   380 ;;Total ram usage:        3 bytes
   381 ;; Hardware stack levels required when called:    2
   382 ;; This function calls:
   383 ;;		_indicador
   384 ;;		_setup
   385 ;; This function is called by:
   386 ;;		Startup code after reset
   387 ;; This function uses a non-reentrant model
   388 ;;
   389                           
   390                           
   391                           ;psect for function _main
   392  001D                     _main:
   393  001D                     l1171:	
   394                           ;incstack = 0
   395                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   396                           
   397                           
   398                           ;juego de carreras.c: 76:     setup();
   399  001D  120A  118A  21B0  120A  118A  	fcall	_setup
   400  0022                     l1173:
   401                           
   402                           ;juego de carreras.c: 79:         if(i == 1){
   403  0022  1283               	bcf	3,5	;RP0=0, select bank0
   404  0023  1303               	bcf	3,6	;RP1=0, select bank0
   405  0024  0322               	decf	_i,w
   406  0025  1D03               	btfss	3,2
   407  0026  2828               	goto	u311
   408  0027  2829               	goto	u310
   409  0028                     u311:
   410  0028  2899               	goto	l1213
   411  0029                     u310:
   412  0029                     l1175:
   413                           
   414                           ;juego de carreras.c: 86:             RB7 = 1;
   415  0029  1786               	bsf	6,7	;volatile
   416                           
   417                           ;juego de carreras.c: 87:             RB6 = 0;
   418  002A  1306               	bcf	6,6	;volatile
   419                           
   420                           ;juego de carreras.c: 88:             RB5 = 0;
   421  002B  1286               	bcf	6,5	;volatile
   422  002C                     l1177:
   423                           
   424                           ;juego de carreras.c: 89:             PORTA = tabla[3];
   425  002C  3004               	movlw	low (((_tabla+3)-__stringbase)| (0+32768))
   426  002D  0084               	movwf	4
   427  002E  120A  118A  21E9  120A  118A  	fcall	stringdir
   428  0033  0085               	movwf	5	;volatile
   429  0034                     l1179:
   430                           
   431                           ;juego de carreras.c: 90:             _delay((unsigned long)((600)*(4000000/4000.0)));
   432  0034  3004               	movlw	4
   433  0035  1283               	bcf	3,5	;RP0=0, select bank0
   434  0036  1303               	bcf	3,6	;RP1=0, select bank0
   435  0037  00A6               	movwf	??_main+2
   436  0038  300C               	movlw	12
   437  0039  00A5               	movwf	??_main+1
   438  003A  3033               	movlw	51
   439  003B  00A4               	movwf	??_main
   440  003C                     u357:
   441  003C  0BA4               	decfsz	??_main,f
   442  003D  283C               	goto	u357
   443  003E  0BA5               	decfsz	??_main+1,f
   444  003F  283C               	goto	u357
   445  0040  0BA6               	decfsz	??_main+2,f
   446  0041  283C               	goto	u357
   447  0042                     l1181:
   448                           
   449                           ;juego de carreras.c: 91:             PORTA = tabla[2];
   450  0042  3003               	movlw	low (((_tabla+2)-__stringbase)| (0+32768))
   451  0043  0084               	movwf	4
   452  0044  120A  118A  21E9  120A  118A  	fcall	stringdir
   453  0049  1283               	bcf	3,5	;RP0=0, select bank0
   454  004A  1303               	bcf	3,6	;RP1=0, select bank0
   455  004B  0085               	movwf	5	;volatile
   456                           
   457                           ;juego de carreras.c: 92:             _delay((unsigned long)((1000)*(4000000/4000.0)));
   458  004C  3006               	movlw	6
   459  004D  1283               	bcf	3,5	;RP0=0, select bank0
   460  004E  1303               	bcf	3,6	;RP1=0, select bank0
   461  004F  00A6               	movwf	??_main+2
   462  0050  3013               	movlw	19
   463  0051  00A5               	movwf	??_main+1
   464  0052  30AD               	movlw	173
   465  0053  00A4               	movwf	??_main
   466  0054                     u367:
   467  0054  0BA4               	decfsz	??_main,f
   468  0055  2854               	goto	u367
   469  0056  0BA5               	decfsz	??_main+1,f
   470  0057  2854               	goto	u367
   471  0058  0BA6               	decfsz	??_main+2,f
   472  0059  2854               	goto	u367
   473  005A                     l1183:
   474                           
   475                           ;juego de carreras.c: 94:             RB7 = 0;
   476  005A  1283               	bcf	3,5	;RP0=0, select bank0
   477  005B  1303               	bcf	3,6	;RP1=0, select bank0
   478  005C  1386               	bcf	6,7	;volatile
   479  005D                     l1185:
   480                           
   481                           ;juego de carreras.c: 95:             RB6 = 1;
   482  005D  1706               	bsf	6,6	;volatile
   483  005E                     l1187:
   484                           
   485                           ;juego de carreras.c: 96:             RB5 = 0;
   486  005E  1286               	bcf	6,5	;volatile
   487  005F                     l1189:
   488                           
   489                           ;juego de carreras.c: 97:             PORTA = tabla[1];
   490  005F  3002               	movlw	low (((_tabla+1)-__stringbase)| (0+32768))
   491  0060  0084               	movwf	4
   492  0061  120A  118A  21E9  120A  118A  	fcall	stringdir
   493  0066  0085               	movwf	5	;volatile
   494  0067                     l1191:
   495                           
   496                           ;juego de carreras.c: 98:             _delay((unsigned long)((600)*(4000000/4000.0)));
   497  0067  3004               	movlw	4
   498  0068  1283               	bcf	3,5	;RP0=0, select bank0
   499  0069  1303               	bcf	3,6	;RP1=0, select bank0
   500  006A  00A6               	movwf	??_main+2
   501  006B  300C               	movlw	12
   502  006C  00A5               	movwf	??_main+1
   503  006D  3033               	movlw	51
   504  006E  00A4               	movwf	??_main
   505  006F                     u377:
   506  006F  0BA4               	decfsz	??_main,f
   507  0070  286F               	goto	u377
   508  0071  0BA5               	decfsz	??_main+1,f
   509  0072  286F               	goto	u377
   510  0073  0BA6               	decfsz	??_main+2,f
   511  0074  286F               	goto	u377
   512  0075                     l1193:
   513                           
   514                           ;juego de carreras.c: 100:             RB7 = 0;
   515  0075  1283               	bcf	3,5	;RP0=0, select bank0
   516  0076  1303               	bcf	3,6	;RP1=0, select bank0
   517  0077  1386               	bcf	6,7	;volatile
   518  0078                     l1195:
   519                           
   520                           ;juego de carreras.c: 101:             RB6 = 0;
   521  0078  1306               	bcf	6,6	;volatile
   522  0079                     l1197:
   523                           
   524                           ;juego de carreras.c: 102:             RB5 = 1;
   525  0079  1686               	bsf	6,5	;volatile
   526                           
   527                           ;juego de carreras.c: 103:             PORTA = tabla[0];
   528  007A  3001               	movlw	low (_tabla-__stringbase)
   529  007B  0084               	movwf	4
   530  007C  120A  118A  21E9  120A  118A  	fcall	stringdir
   531  0081  0085               	movwf	5	;volatile
   532  0082                     l1199:
   533                           
   534                           ;juego de carreras.c: 104:             _delay((unsigned long)((1000)*(4000000/4000.0)));
   535  0082  3006               	movlw	6
   536  0083  1283               	bcf	3,5	;RP0=0, select bank0
   537  0084  1303               	bcf	3,6	;RP1=0, select bank0
   538  0085  00A6               	movwf	??_main+2
   539  0086  3013               	movlw	19
   540  0087  00A5               	movwf	??_main+1
   541  0088  30AD               	movlw	173
   542  0089  00A4               	movwf	??_main
   543  008A                     u387:
   544  008A  0BA4               	decfsz	??_main,f
   545  008B  288A               	goto	u387
   546  008C  0BA5               	decfsz	??_main+1,f
   547  008D  288A               	goto	u387
   548  008E  0BA6               	decfsz	??_main+2,f
   549  008F  288A               	goto	u387
   550  0090                     l1201:
   551                           
   552                           ;juego de carreras.c: 106:             RB7 = 0;
   553  0090  1283               	bcf	3,5	;RP0=0, select bank0
   554  0091  1303               	bcf	3,6	;RP1=0, select bank0
   555  0092  1386               	bcf	6,7	;volatile
   556  0093                     l1203:
   557                           
   558                           ;juego de carreras.c: 107:             RB6 = 0;
   559  0093  1306               	bcf	6,6	;volatile
   560  0094                     l1205:
   561                           
   562                           ;juego de carreras.c: 108:             RB5 = 0;
   563  0094  1286               	bcf	6,5	;volatile
   564  0095                     l1207:
   565                           
   566                           ;juego de carreras.c: 109:             PORTA = 0x00;
   567  0095  0185               	clrf	5	;volatile
   568  0096                     l1209:
   569                           
   570                           ;juego de carreras.c: 111:             i = 0;
   571  0096  01A2               	clrf	_i
   572  0097                     l1211:
   573                           
   574                           ;juego de carreras.c: 112:             a = 1;
   575  0097  01F9               	clrf	_a
   576  0098  0AF9               	incf	_a,f
   577  0099                     l1213:
   578                           
   579                           ;juego de carreras.c: 114:         if (a == 1){
   580  0099  0379               	decf	_a,w
   581  009A  1D03               	btfss	3,2
   582  009B  289D               	goto	u321
   583  009C  289E               	goto	u320
   584  009D                     u321:
   585  009D  28B0               	goto	l1217
   586  009E                     u320:
   587  009E                     l1215:
   588                           
   589                           ;juego de carreras.c: 116:             PORTC = indicador(j1);
   590  009E  0878               	movf	_j1,w
   591  009F  120A  118A  215F  120A  118A  	fcall	_indicador
   592  00A4  1283               	bcf	3,5	;RP0=0, select bank0
   593  00A5  1303               	bcf	3,6	;RP1=0, select bank0
   594  00A6  0087               	movwf	7	;volatile
   595                           
   596                           ;juego de carreras.c: 117:             PORTD = indicador(j2);
   597  00A7  0877               	movf	_j2,w
   598  00A8  120A  118A  215F  120A  118A  	fcall	_indicador
   599  00AD  1283               	bcf	3,5	;RP0=0, select bank0
   600  00AE  1303               	bcf	3,6	;RP1=0, select bank0
   601  00AF  0088               	movwf	8	;volatile
   602  00B0                     l1217:
   603                           
   604                           ;juego de carreras.c: 120:             _delay((unsigned long)((50)*(4000000/4000.0)));
   605  00B0  3041               	movlw	65
   606  00B1  1283               	bcf	3,5	;RP0=0, select bank0
   607  00B2  1303               	bcf	3,6	;RP1=0, select bank0
   608  00B3  00A5               	movwf	??_main+1
   609  00B4  30ED               	movlw	237
   610  00B5  00A4               	movwf	??_main
   611  00B6                     u397:
   612  00B6  0BA4               	decfsz	??_main,f
   613  00B7  28B6               	goto	u397
   614  00B8  0BA5               	decfsz	??_main+1,f
   615  00B9  28B6               	goto	u397
   616  00BA  28BB               	nop2
   617  00BB                     l1219:
   618                           
   619                           ;juego de carreras.c: 121:             if (j1 == 8){
   620  00BB  3008               	movlw	8
   621  00BC  0678               	xorwf	_j1,w
   622  00BD  1D03               	btfss	3,2
   623  00BE  28C0               	goto	u331
   624  00BF  28C1               	goto	u330
   625  00C0                     u331:
   626  00C0  28E2               	goto	l1237
   627  00C1                     u330:
   628  00C1                     l1221:
   629                           
   630                           ;juego de carreras.c: 122:                 PORTA = tabla[1];
   631  00C1  3002               	movlw	low (((_tabla+1)-__stringbase)| (0+32768))
   632  00C2  0084               	movwf	4
   633  00C3  120A  118A  21E9  120A  118A  	fcall	stringdir
   634  00C8  1283               	bcf	3,5	;RP0=0, select bank0
   635  00C9  1303               	bcf	3,6	;RP1=0, select bank0
   636  00CA  0085               	movwf	5	;volatile
   637  00CB                     l1223:
   638                           
   639                           ;juego de carreras.c: 123:                 RE0 = 1;
   640  00CB  1409               	bsf	9,0	;volatile
   641  00CC                     l1225:
   642                           
   643                           ;juego de carreras.c: 124:                 RE1 = 0;
   644  00CC  1089               	bcf	9,1	;volatile
   645  00CD                     l1227:
   646                           
   647                           ;juego de carreras.c: 125:                 i = 0;
   648  00CD  01A2               	clrf	_i
   649  00CE                     l1229:
   650                           
   651                           ;juego de carreras.c: 126:                 a = 0;
   652  00CE  01F9               	clrf	_a
   653  00CF                     l1231:
   654                           
   655                           ;juego de carreras.c: 127:                 _delay((unsigned long)((2000)*(4000000/4000.0
      +                          )));
   656  00CF  300B               	movlw	11
   657  00D0  1283               	bcf	3,5	;RP0=0, select bank0
   658  00D1  1303               	bcf	3,6	;RP1=0, select bank0
   659  00D2  00A6               	movwf	??_main+2
   660  00D3  3026               	movlw	38
   661  00D4  00A5               	movwf	??_main+1
   662  00D5  305D               	movlw	93
   663  00D6  00A4               	movwf	??_main
   664  00D7                     u407:
   665  00D7  0BA4               	decfsz	??_main,f
   666  00D8  28D7               	goto	u407
   667  00D9  0BA5               	decfsz	??_main+1,f
   668  00DA  28D7               	goto	u407
   669  00DB  0BA6               	decfsz	??_main+2,f
   670  00DC  28D7               	goto	u407
   671  00DD                     l1233:
   672                           
   673                           ;juego de carreras.c: 128:                 PORTA = 0x00;
   674  00DD  1283               	bcf	3,5	;RP0=0, select bank0
   675  00DE  1303               	bcf	3,6	;RP1=0, select bank0
   676  00DF  0185               	clrf	5	;volatile
   677  00E0                     l1235:
   678                           
   679                           ;juego de carreras.c: 129:                 PORTE = 0x00;
   680  00E0  0189               	clrf	9	;volatile
   681                           
   682                           ;juego de carreras.c: 130:             }else if (j2 == 8){
   683  00E1  2822               	goto	l1173
   684  00E2                     l1237:
   685  00E2  3008               	movlw	8
   686  00E3  0677               	xorwf	_j2,w
   687  00E4  1D03               	btfss	3,2
   688  00E5  28E7               	goto	u341
   689  00E6  28E8               	goto	u340
   690  00E7                     u341:
   691  00E7  2822               	goto	l1173
   692  00E8                     u340:
   693  00E8                     l1239:
   694                           
   695                           ;juego de carreras.c: 131:                 PORTA = tabla[2];
   696  00E8  3003               	movlw	low (((_tabla+2)-__stringbase)| (0+32768))
   697  00E9  0084               	movwf	4
   698  00EA  120A  118A  21E9  120A  118A  	fcall	stringdir
   699  00EF  1283               	bcf	3,5	;RP0=0, select bank0
   700  00F0  1303               	bcf	3,6	;RP1=0, select bank0
   701  00F1  0085               	movwf	5	;volatile
   702  00F2                     l1241:
   703                           
   704                           ;juego de carreras.c: 132:                 RE0 = 0;
   705  00F2  1009               	bcf	9,0	;volatile
   706  00F3                     l1243:
   707                           
   708                           ;juego de carreras.c: 133:                 RE1 = 1;
   709  00F3  1489               	bsf	9,1	;volatile
   710  00F4  28CD               	goto	l1227
   711  00F5  120A  118A  280C   	ljmp	start
   712  00F8                     __end_of_main:
   713                           
   714                           	psect	text1
   715  01B0                     __ptext1:	
   716 ;; *************** function _setup *****************
   717 ;; Defined at:
   718 ;;		line 143 in file "juego de carreras.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;		None
   721 ;; Auto vars:     Size  Location     Type
   722 ;;		None
   723 ;; Return value:  Size  Location     Type
   724 ;;                  1    wreg      void 
   725 ;; Registers used:
   726 ;;		wreg, status,2, status,0
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   732 ;;      Params:         0       0       0       0       0
   733 ;;      Locals:         0       0       0       0       0
   734 ;;      Temps:          0       0       0       0       0
   735 ;;      Totals:         0       0       0       0       0
   736 ;;Total ram usage:        0 bytes
   737 ;; Hardware stack levels used:    1
   738 ;; Hardware stack levels required when called:    1
   739 ;; This function calls:
   740 ;;		Nothing
   741 ;; This function is called by:
   742 ;;		_main
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746                           
   747                           ;psect for function _setup
   748  01B0                     _setup:
   749  01B0                     l945:	
   750                           ;incstack = 0
   751                           ; Regs used in _setup: [wreg+status,2+status,0]
   752                           
   753                           
   754                           ;juego de carreras.c: 144:     ANSEL = 0x00;
   755  01B0  1683               	bsf	3,5	;RP0=1, select bank3
   756  01B1  1703               	bsf	3,6	;RP1=1, select bank3
   757  01B2  0188               	clrf	8	;volatile
   758                           
   759                           ;juego de carreras.c: 145:     ANSELH = 0x00;
   760  01B3  0189               	clrf	9	;volatile
   761                           
   762                           ;juego de carreras.c: 147:     TRISA = 0x00;
   763  01B4  1683               	bsf	3,5	;RP0=1, select bank1
   764  01B5  1303               	bcf	3,6	;RP1=0, select bank1
   765  01B6  0185               	clrf	5	;volatile
   766  01B7                     l947:
   767                           
   768                           ;juego de carreras.c: 148:     TRISB = 0b00000111;
   769  01B7  3007               	movlw	7
   770  01B8  0086               	movwf	6	;volatile
   771  01B9                     l949:
   772                           
   773                           ;juego de carreras.c: 149:     TRISC = 0x00;
   774  01B9  0187               	clrf	7	;volatile
   775  01BA                     l951:
   776                           
   777                           ;juego de carreras.c: 150:     TRISD = 0x00;
   778  01BA  0188               	clrf	8	;volatile
   779  01BB                     l953:
   780                           
   781                           ;juego de carreras.c: 151:     TRISE = 0x00;
   782  01BB  0189               	clrf	9	;volatile
   783  01BC                     l955:
   784                           
   785                           ;juego de carreras.c: 153:     PORTA = 0x00;
   786  01BC  1283               	bcf	3,5	;RP0=0, select bank0
   787  01BD  1303               	bcf	3,6	;RP1=0, select bank0
   788  01BE  0185               	clrf	5	;volatile
   789  01BF                     l957:
   790                           
   791                           ;juego de carreras.c: 154:     PORTB = 0x00;
   792  01BF  0186               	clrf	6	;volatile
   793  01C0                     l959:
   794                           
   795                           ;juego de carreras.c: 155:     PORTC = 0x00;
   796  01C0  0187               	clrf	7	;volatile
   797  01C1                     l961:
   798                           
   799                           ;juego de carreras.c: 156:     PORTD = 0x00;
   800  01C1  0188               	clrf	8	;volatile
   801  01C2                     l963:
   802                           
   803                           ;juego de carreras.c: 157:     PORTE = 0x00;
   804  01C2  0189               	clrf	9	;volatile
   805  01C3                     l965:
   806                           
   807                           ;juego de carreras.c: 160:     OSCCONbits.IRCF = 0b111;
   808  01C3  3070               	movlw	112
   809  01C4  1683               	bsf	3,5	;RP0=1, select bank1
   810  01C5  1303               	bcf	3,6	;RP1=0, select bank1
   811  01C6  048F               	iorwf	15,f	;volatile
   812  01C7                     l967:
   813                           
   814                           ;juego de carreras.c: 161:     OSCCONbits.SCS = 1;
   815  01C7  140F               	bsf	15,0	;volatile
   816  01C8                     l969:
   817                           
   818                           ;juego de carreras.c: 163:     OPTION_REGbits.T0CS = 0;
   819  01C8  1281               	bcf	1,5	;volatile
   820  01C9                     l971:
   821                           
   822                           ;juego de carreras.c: 164:     OPTION_REGbits.PSA = 0;
   823  01C9  1181               	bcf	1,3	;volatile
   824  01CA                     l973:
   825                           
   826                           ;juego de carreras.c: 165:     OPTION_REGbits.PS = 0b111;
   827  01CA  3007               	movlw	7
   828  01CB  0481               	iorwf	1,f	;volatile
   829  01CC                     l975:
   830                           
   831                           ;juego de carreras.c: 166:     TMR0 = 60;
   832  01CC  303C               	movlw	60
   833  01CD  1283               	bcf	3,5	;RP0=0, select bank0
   834  01CE  1303               	bcf	3,6	;RP1=0, select bank0
   835  01CF  0081               	movwf	1	;volatile
   836  01D0                     l977:
   837                           
   838                           ;juego de carreras.c: 169:     OPTION_REGbits.nRBPU = 0;
   839  01D0  1683               	bsf	3,5	;RP0=1, select bank1
   840  01D1  1303               	bcf	3,6	;RP1=0, select bank1
   841  01D2  1381               	bcf	1,7	;volatile
   842  01D3                     l979:
   843                           
   844                           ;juego de carreras.c: 170:     WPUBbits.WPUB0 = 1;
   845  01D3  1415               	bsf	21,0	;volatile
   846  01D4                     l981:
   847                           
   848                           ;juego de carreras.c: 171:     WPUBbits.WPUB1 = 1;
   849  01D4  1495               	bsf	21,1	;volatile
   850  01D5                     l983:
   851                           
   852                           ;juego de carreras.c: 172:     WPUBbits.WPUB2 = 1;
   853  01D5  1515               	bsf	21,2	;volatile
   854  01D6                     l985:
   855                           
   856                           ;juego de carreras.c: 174:     IOCBbits.IOCB0 = 0;
   857  01D6  1016               	bcf	22,0	;volatile
   858  01D7                     l987:
   859                           
   860                           ;juego de carreras.c: 175:     IOCBbits.IOCB1 = 0;
   861  01D7  1096               	bcf	22,1	;volatile
   862  01D8                     l989:
   863                           
   864                           ;juego de carreras.c: 176:     IOCBbits.IOCB2 = 0;
   865  01D8  1116               	bcf	22,2	;volatile
   866  01D9                     l991:
   867                           
   868                           ;juego de carreras.c: 177:     RBIF = 0;
   869  01D9  100B               	bcf	11,0	;volatile
   870  01DA                     l993:
   871                           
   872                           ;juego de carreras.c: 181:     INTCONbits.RBIE = 1;
   873  01DA  158B               	bsf	11,3	;volatile
   874  01DB                     l995:
   875                           
   876                           ;juego de carreras.c: 182:     INTCONbits.RBIF = 0;
   877  01DB  100B               	bcf	11,0	;volatile
   878  01DC                     l997:
   879                           
   880                           ;juego de carreras.c: 183:     INTCONbits.T0IE = 1;
   881  01DC  168B               	bsf	11,5	;volatile
   882  01DD                     l999:
   883                           
   884                           ;juego de carreras.c: 184:     INTCONbits.T0IF = 0;
   885  01DD  110B               	bcf	11,2	;volatile
   886                           
   887                           ;juego de carreras.c: 186:     s = 0;
   888  01DE  01FA               	clrf	_s
   889                           
   890                           ;juego de carreras.c: 187:     c = 0;
   891  01DF  1283               	bcf	3,5	;RP0=0, select bank0
   892  01E0  1303               	bcf	3,6	;RP1=0, select bank0
   893  01E1  01A3               	clrf	_c
   894                           
   895                           ;juego de carreras.c: 188:     i = 0;
   896  01E2  01A2               	clrf	_i
   897                           
   898                           ;juego de carreras.c: 189:     a = 0;
   899  01E3  01F9               	clrf	_a
   900                           
   901                           ;juego de carreras.c: 190:     j1 = 0;
   902  01E4  01F8               	clrf	_j1
   903                           
   904                           ;juego de carreras.c: 191:     j2 = 0;
   905  01E5  01F7               	clrf	_j2
   906                           
   907                           ;juego de carreras.c: 192:     cont1 = 0;
   908  01E6  01A1               	clrf	_cont1
   909                           
   910                           ;juego de carreras.c: 193:     cont2 = 0;
   911  01E7  01A0               	clrf	_cont2
   912  01E8                     l113:
   913  01E8  0008               	return
   914  01E9                     __end_of_setup:
   915                           
   916                           	psect	text2
   917  015F                     __ptext2:	
   918 ;; *************** function _indicador *****************
   919 ;; Defined at:
   920 ;;		line 198 in file "juego de carreras.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;  analizar        1    wreg     unsigned char 
   923 ;; Auto vars:     Size  Location     Type
   924 ;;  analizar        1    5[COMMON] unsigned char 
   925 ;;  salida          1    6[COMMON] unsigned char 
   926 ;; Return value:  Size  Location     Type
   927 ;;                  1    wreg      unsigned char 
   928 ;; Registers used:
   929 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   935 ;;      Params:         0       0       0       0       0
   936 ;;      Locals:         2       0       0       0       0
   937 ;;      Temps:          2       0       0       0       0
   938 ;;      Totals:         4       0       0       0       0
   939 ;;Total ram usage:        4 bytes
   940 ;; Hardware stack levels used:    1
   941 ;; Hardware stack levels required when called:    1
   942 ;; This function calls:
   943 ;;		Nothing
   944 ;; This function is called by:
   945 ;;		_main
   946 ;; This function uses a non-reentrant model
   947 ;;
   948                           
   949                           
   950                           ;psect for function _indicador
   951  015F                     _indicador:
   952                           
   953                           ;incstack = 0
   954                           ; Regs used in _indicador: [wreg-fsr0h+status,2+status,0]
   955                           ;indicador@analizar stored from wreg
   956  015F  00F5               	movwf	indicador@analizar
   957  0160                     l1003:
   958                           
   959                           ;juego de carreras.c: 199:     char salida;;juego de carreras.c: 201:     switch(analiza
      +                          r){
   960  0160  2989               	goto	l1023
   961  0161                     l1005:
   962                           
   963                           ;juego de carreras.c: 203:             salida = 0b00000000;
   964  0161  01F6               	clrf	indicador@salida
   965                           
   966                           ;juego de carreras.c: 204:             break;
   967  0162  29AE               	goto	l1025
   968  0163                     l119:	
   969                           ;juego de carreras.c: 205:         case(1):
   970                           
   971                           
   972                           ;juego de carreras.c: 206:             salida = 0b00000001;
   973  0163  01F6               	clrf	indicador@salida
   974  0164  0AF6               	incf	indicador@salida,f
   975                           
   976                           ;juego de carreras.c: 207:             break;
   977  0165  29AE               	goto	l1025
   978  0166                     l1007:
   979                           
   980                           ;juego de carreras.c: 209:             salida = 0b00000011;
   981  0166  3003               	movlw	3
   982  0167  00F3               	movwf	??_indicador
   983  0168  0873               	movf	??_indicador,w
   984  0169  00F6               	movwf	indicador@salida
   985                           
   986                           ;juego de carreras.c: 210:             break;
   987  016A  29AE               	goto	l1025
   988  016B                     l1009:
   989                           
   990                           ;juego de carreras.c: 212:             salida = 0b00000111;
   991  016B  3007               	movlw	7
   992  016C  00F3               	movwf	??_indicador
   993  016D  0873               	movf	??_indicador,w
   994  016E  00F6               	movwf	indicador@salida
   995                           
   996                           ;juego de carreras.c: 213:             break;
   997  016F  29AE               	goto	l1025
   998  0170                     l1011:
   999                           
  1000                           ;juego de carreras.c: 215:             salida = 0b00001111;
  1001  0170  300F               	movlw	15
  1002  0171  00F3               	movwf	??_indicador
  1003  0172  0873               	movf	??_indicador,w
  1004  0173  00F6               	movwf	indicador@salida
  1005                           
  1006                           ;juego de carreras.c: 216:             break;
  1007  0174  29AE               	goto	l1025
  1008  0175                     l1013:
  1009                           
  1010                           ;juego de carreras.c: 218:             salida = 0b00011111;
  1011  0175  301F               	movlw	31
  1012  0176  00F3               	movwf	??_indicador
  1013  0177  0873               	movf	??_indicador,w
  1014  0178  00F6               	movwf	indicador@salida
  1015                           
  1016                           ;juego de carreras.c: 219:             break;
  1017  0179  29AE               	goto	l1025
  1018  017A                     l1015:
  1019                           
  1020                           ;juego de carreras.c: 221:             salida = 0b00111111;
  1021  017A  303F               	movlw	63
  1022  017B  00F3               	movwf	??_indicador
  1023  017C  0873               	movf	??_indicador,w
  1024  017D  00F6               	movwf	indicador@salida
  1025                           
  1026                           ;juego de carreras.c: 222:             break;
  1027  017E  29AE               	goto	l1025
  1028  017F                     l1017:
  1029                           
  1030                           ;juego de carreras.c: 224:             salida = 0b01111111;
  1031  017F  307F               	movlw	127
  1032  0180  00F3               	movwf	??_indicador
  1033  0181  0873               	movf	??_indicador,w
  1034  0182  00F6               	movwf	indicador@salida
  1035                           
  1036                           ;juego de carreras.c: 225:             break;
  1037  0183  29AE               	goto	l1025
  1038  0184                     l1019:
  1039                           
  1040                           ;juego de carreras.c: 227:             salida = 0xff;
  1041  0184  30FF               	movlw	255
  1042  0185  00F3               	movwf	??_indicador
  1043  0186  0873               	movf	??_indicador,w
  1044  0187  00F6               	movwf	indicador@salida
  1045                           
  1046                           ;juego de carreras.c: 228:             break;
  1047  0188  29AE               	goto	l1025
  1048  0189                     l1023:
  1049  0189  0875               	movf	indicador@analizar,w
  1050  018A  00F3               	movwf	??_indicador
  1051  018B  01F4               	clrf	??_indicador+1
  1052                           
  1053                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1054                           ; Switch size 1, requested type "simple"
  1055                           ; Number of cases is 1, Range of values is 0 to 0
  1056                           ; switch strategies available:
  1057                           ; Name         Instructions Cycles
  1058                           ; simple_byte            4     3 (average)
  1059                           ; direct_byte           11     8 (fixed)
  1060                           ; jumptable            260     6 (fixed)
  1061                           ;	Chosen strategy is simple_byte
  1062  018C  0874               	movf	??_indicador+1,w
  1063  018D  3A00               	xorlw	0	; case 0
  1064  018E  1903               	skipnz
  1065  018F  2991               	goto	l1275
  1066  0190  29AE               	goto	l1025
  1067  0191                     l1275:
  1068                           
  1069                           ; Switch size 1, requested type "simple"
  1070                           ; Number of cases is 9, Range of values is 0 to 8
  1071                           ; switch strategies available:
  1072                           ; Name         Instructions Cycles
  1073                           ; simple_byte           28    15 (average)
  1074                           ; direct_byte           35     8 (fixed)
  1075                           ; jumptable            260     6 (fixed)
  1076                           ;	Chosen strategy is simple_byte
  1077  0191  0873               	movf	??_indicador,w
  1078  0192  3A00               	xorlw	0	; case 0
  1079  0193  1903               	skipnz
  1080  0194  2961               	goto	l1005
  1081  0195  3A01               	xorlw	1	; case 1
  1082  0196  1903               	skipnz
  1083  0197  2963               	goto	l119
  1084  0198  3A03               	xorlw	3	; case 2
  1085  0199  1903               	skipnz
  1086  019A  2966               	goto	l1007
  1087  019B  3A01               	xorlw	1	; case 3
  1088  019C  1903               	skipnz
  1089  019D  296B               	goto	l1009
  1090  019E  3A07               	xorlw	7	; case 4
  1091  019F  1903               	skipnz
  1092  01A0  2970               	goto	l1011
  1093  01A1  3A01               	xorlw	1	; case 5
  1094  01A2  1903               	skipnz
  1095  01A3  2975               	goto	l1013
  1096  01A4  3A03               	xorlw	3	; case 6
  1097  01A5  1903               	skipnz
  1098  01A6  297A               	goto	l1015
  1099  01A7  3A01               	xorlw	1	; case 7
  1100  01A8  1903               	skipnz
  1101  01A9  297F               	goto	l1017
  1102  01AA  3A0F               	xorlw	15	; case 8
  1103  01AB  1903               	skipnz
  1104  01AC  2984               	goto	l1019
  1105  01AD  29AE               	goto	l1025
  1106  01AE                     l1025:
  1107                           
  1108                           ;juego de carreras.c: 231:     return salida;
  1109  01AE  0876               	movf	indicador@salida,w
  1110  01AF                     l127:
  1111  01AF  0008               	return
  1112  01B0                     __end_of_indicador:
  1113                           
  1114                           	psect	text3
  1115  00F8                     __ptext3:	
  1116 ;; *************** function _isr *****************
  1117 ;; Defined at:
  1118 ;;		line 38 in file "juego de carreras.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;		None
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;		None
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      void 
  1125 ;; Registers used:
  1126 ;;		wreg, status,2, status,0
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1132 ;;      Params:         0       0       0       0       0
  1133 ;;      Locals:         0       0       0       0       0
  1134 ;;      Temps:          3       0       0       0       0
  1135 ;;      Totals:         3       0       0       0       0
  1136 ;;Total ram usage:        3 bytes
  1137 ;; Hardware stack levels used:    1
  1138 ;; This function calls:
  1139 ;;		Nothing
  1140 ;; This function is called by:
  1141 ;;		Interrupt level 1
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           
  1146                           ;psect for function _isr
  1147  00F8                     _isr:
  1148  00F8                     i1l1033:
  1149                           
  1150                           ;juego de carreras.c: 40:     if(RBIF == 1){
  1151  00F8  1C0B               	btfss	11,0	;volatile
  1152  00F9  28FB               	goto	u16_21
  1153  00FA  28FC               	goto	u16_20
  1154  00FB                     u16_21:
  1155  00FB  293B               	goto	i1l85
  1156  00FC                     u16_20:
  1157  00FC                     i1l1035:
  1158                           
  1159                           ;juego de carreras.c: 41:         if(RB0 == 0){
  1160  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  1161  00FD  1303               	bcf	3,6	;RP1=0, select bank0
  1162  00FE  1806               	btfsc	6,0	;volatile
  1163  00FF  2901               	goto	u17_21
  1164  0100  2902               	goto	u17_20
  1165  0101                     u17_21:
  1166  0101  2907               	goto	i1l86
  1167  0102                     u17_20:
  1168  0102                     i1l1037:
  1169                           
  1170                           ;juego de carreras.c: 42:             i++;
  1171  0102  3001               	movlw	1
  1172  0103  00F0               	movwf	??_isr
  1173  0104  0870               	movf	??_isr,w
  1174  0105  07A2               	addwf	_i,f
  1175                           
  1176                           ;juego de carreras.c: 44:         }else if (RB1 ==0 && a == 1){
  1177  0106  2939               	goto	i1l1055
  1178  0107                     i1l86:
  1179  0107  1886               	btfsc	6,1	;volatile
  1180  0108  290A               	goto	u18_21
  1181  0109  290B               	goto	u18_20
  1182  010A                     u18_21:
  1183  010A  2920               	goto	i1l88
  1184  010B                     u18_20:
  1185  010B                     i1l1039:
  1186  010B  0379               	decf	_a,w
  1187  010C  1D03               	btfss	3,2
  1188  010D  290F               	goto	u19_21
  1189  010E  2910               	goto	u19_20
  1190  010F                     u19_21:
  1191  010F  2920               	goto	i1l88
  1192  0110                     u19_20:
  1193  0110                     i1l1041:
  1194                           
  1195                           ;juego de carreras.c: 45:             cont1++;
  1196  0110  3001               	movlw	1
  1197  0111  00F0               	movwf	??_isr
  1198  0112  0870               	movf	??_isr,w
  1199  0113  07A1               	addwf	_cont1,f
  1200                           
  1201                           ;juego de carreras.c: 46:             if(cont1 == 10){
  1202  0114  300A               	movlw	10
  1203  0115  0621               	xorwf	_cont1,w
  1204  0116  1D03               	btfss	3,2
  1205  0117  2919               	goto	u20_21
  1206  0118  291A               	goto	u20_20
  1207  0119                     u20_21:
  1208  0119  2939               	goto	i1l1055
  1209  011A                     u20_20:
  1210  011A                     i1l1043:
  1211                           
  1212                           ;juego de carreras.c: 47:                 j1++;
  1213  011A  3001               	movlw	1
  1214  011B  00F0               	movwf	??_isr
  1215  011C  0870               	movf	??_isr,w
  1216  011D  07F8               	addwf	_j1,f
  1217  011E                     i1l1045:
  1218                           
  1219                           ;juego de carreras.c: 48:                 cont1 = 0;
  1220  011E  01A1               	clrf	_cont1
  1221  011F  2939               	goto	i1l1055
  1222  0120                     i1l88:
  1223  0120  1906               	btfsc	6,2	;volatile
  1224  0121  2923               	goto	u21_21
  1225  0122  2924               	goto	u21_20
  1226  0123                     u21_21:
  1227  0123  2939               	goto	i1l1055
  1228  0124                     u21_20:
  1229  0124                     i1l1047:
  1230  0124  0379               	decf	_a,w
  1231  0125  1D03               	btfss	3,2
  1232  0126  2928               	goto	u22_21
  1233  0127  2929               	goto	u22_20
  1234  0128                     u22_21:
  1235  0128  2939               	goto	i1l1055
  1236  0129                     u22_20:
  1237  0129                     i1l1049:
  1238                           
  1239                           ;juego de carreras.c: 51:             cont2++;
  1240  0129  3001               	movlw	1
  1241  012A  00F0               	movwf	??_isr
  1242  012B  0870               	movf	??_isr,w
  1243  012C  07A0               	addwf	_cont2,f
  1244                           
  1245                           ;juego de carreras.c: 52:             if(cont2 == 10){
  1246  012D  300A               	movlw	10
  1247  012E  0620               	xorwf	_cont2,w
  1248  012F  1D03               	btfss	3,2
  1249  0130  2932               	goto	u23_21
  1250  0131  2933               	goto	u23_20
  1251  0132                     u23_21:
  1252  0132  2939               	goto	i1l90
  1253  0133                     u23_20:
  1254  0133                     i1l1051:
  1255                           
  1256                           ;juego de carreras.c: 53:                 j2++;
  1257  0133  3001               	movlw	1
  1258  0134  00F0               	movwf	??_isr
  1259  0135  0870               	movf	??_isr,w
  1260  0136  07F7               	addwf	_j2,f
  1261  0137                     i1l1053:
  1262                           
  1263                           ;juego de carreras.c: 54:                 cont2 = 0;
  1264  0137  01A0               	clrf	_cont2
  1265  0138  2939               	goto	i1l1055
  1266  0139                     i1l90:
  1267  0139                     i1l1055:
  1268                           
  1269                           ;juego de carreras.c: 57:         RBIF = 0;
  1270  0139  100B               	bcf	11,0	;volatile
  1271                           
  1272                           ;juego de carreras.c: 58:     }
  1273  013A  2958               	goto	i1l97
  1274  013B                     i1l85:	
  1275                           ;juego de carreras.c: 60:     else if(T0IF == 1){
  1276                           
  1277  013B  1D0B               	btfss	11,2	;volatile
  1278  013C  293E               	goto	u24_21
  1279  013D  293F               	goto	u24_20
  1280  013E                     u24_21:
  1281  013E  2958               	goto	i1l97
  1282  013F                     u24_20:
  1283  013F                     i1l1057:
  1284                           
  1285                           ;juego de carreras.c: 62:         c++;
  1286  013F  3001               	movlw	1
  1287  0140  00F0               	movwf	??_isr
  1288  0141  0870               	movf	??_isr,w
  1289  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1290  0143  1303               	bcf	3,6	;RP1=0, select bank0
  1291  0144  07A3               	addwf	_c,f
  1292                           
  1293                           ;juego de carreras.c: 63:         if(c == 4){
  1294  0145  3004               	movlw	4
  1295  0146  0623               	xorwf	_c,w
  1296  0147  1D03               	btfss	3,2
  1297  0148  294A               	goto	u25_21
  1298  0149  294B               	goto	u25_20
  1299  014A                     u25_21:
  1300  014A  2955               	goto	i1l1063
  1301  014B                     u25_20:
  1302  014B                     i1l1059:
  1303                           
  1304                           ;juego de carreras.c: 64:             s++;
  1305  014B  3001               	movlw	1
  1306  014C  00F0               	movwf	??_isr
  1307  014D  0870               	movf	??_isr,w
  1308  014E  07FA               	addwf	_s,f
  1309                           
  1310                           ;juego de carreras.c: 65:             if(s == 255){
  1311  014F  0A7A               	incf	_s,w
  1312  0150  1D03               	btfss	3,2
  1313  0151  2953               	goto	u26_21
  1314  0152  2954               	goto	u26_20
  1315  0153                     u26_21:
  1316  0153  2955               	goto	i1l1063
  1317  0154                     u26_20:
  1318  0154                     i1l1061:
  1319                           
  1320                           ;juego de carreras.c: 66:                 s = 0;
  1321  0154  01FA               	clrf	_s
  1322  0155                     i1l1063:
  1323                           
  1324                           ;juego de carreras.c: 70:         T0IF = 0;
  1325  0155  110B               	bcf	11,2	;volatile
  1326  0156                     i1l1065:
  1327                           
  1328                           ;juego de carreras.c: 71:         TMR0 = 60;
  1329  0156  303C               	movlw	60
  1330  0157  0081               	movwf	1	;volatile
  1331  0158                     i1l97:
  1332  0158  0872               	movf	??_isr+2,w
  1333  0159  008A               	movwf	10
  1334  015A  0E71               	swapf	??_isr+1,w
  1335  015B  0083               	movwf	3
  1336  015C  0EFE               	swapf	btemp,f
  1337  015D  0E7E               	swapf	btemp,w
  1338  015E  0009               	retfie
  1339  015F                     __end_of_isr:
  1340  007E                     btemp	set	126	;btemp
  1341  007E                     wtemp0	set	126
  1342                           
  1343                           	psect	intentry
  1344  0004                     __pintentry:	
  1345                           ;incstack = 0
  1346                           ; Regs used in _isr: [wreg+status,2+status,0]
  1347                           
  1348  0004                     interrupt_function:
  1349  007E                     saved_w	set	btemp
  1350  0004  00FE               	movwf	btemp
  1351  0005  0E03               	swapf	3,w
  1352  0006  00F1               	movwf	??_isr+1
  1353  0007  080A               	movf	10,w
  1354  0008  00F2               	movwf	??_isr+2
  1355  0009  120A  118A  28F8   	ljmp	_isr
  1356                           
  1357                           	psect	config
  1358                           
  1359                           ;Config register CONFIG1 @ 0x2007
  1360                           ;	Oscillator Selection bits
  1361                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1362                           ;	Watchdog Timer Enable bit
  1363                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1364                           ;	Power-up Timer Enable bit
  1365                           ;	PWRTE = OFF, PWRT disabled
  1366                           ;	RE3/MCLR pin function select bit
  1367                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1368                           ;	Code Protection bit
  1369                           ;	CP = OFF, Program memory code protection is disabled
  1370                           ;	Data Code Protection bit
  1371                           ;	CPD = OFF, Data memory code protection is disabled
  1372                           ;	Brown Out Reset Selection bits
  1373                           ;	BOREN = OFF, BOR disabled
  1374                           ;	Internal External Switchover bit
  1375                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1376                           ;	Fail-Safe Clock Monitor Enabled bit
  1377                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1378                           ;	Low Voltage Programming Enable bit
  1379                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1380                           ;	In-Circuit Debugger Mode bit
  1381                           ;	DEBUG = 0x1, unprogrammed default
  1382  2007                     	org	8199
  1383  2007  20D4               	dw	8404
  1384                           
  1385                           ;Config register CONFIG2 @ 0x2008
  1386                           ;	Brown-out Reset Selection bit
  1387                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1388                           ;	Flash Program Memory Self Write Enable bits
  1389                           ;	WRT = OFF, Write protection off
  1390  2008                     	org	8200
  1391  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80      3       7
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_indicador

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      53
                                              0 BANK0      3     3      0
                          _indicador
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _indicador                                            4     4      0      53
                                              3 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _indicador
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      12       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       7       5        8.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      12      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Jul 12 14:48:00 2021

                      _a 0079                        _c 0023                        _i 0022  
                      _s 007A                        pc 0002                       _j1 0078  
                     _j2 0077                       fsr 0004                      l113 01E8  
                    l127 01AF                      l119 0163                      l951 01BA  
                    l961 01C1                      l953 01BB                      l945 01B0  
                    l971 01C9                      l963 01C2                      l955 01BC  
                    l947 01B7                      l981 01D4                      l973 01CA  
                    l965 01C3                      l957 01BF                      l949 01B9  
                    l991 01D9                      l983 01D5                      l975 01CC  
                    l967 01C7                      l959 01C0                      l993 01DA  
                    l985 01D6                      l977 01D0                      l969 01C8  
                    l995 01DB                      l987 01D7                      l979 01D3  
                    l997 01DC                      l989 01D8                      l999 01DD  
                    _RB0 0030                      _RB1 0031                      _RB2 0032  
                    _RB5 0035                      _RB6 0036                      _RE0 0048  
                    _RB7 0037                      _RE1 0049                      u310 0029  
                    u311 0028                      u320 009E                      u321 009D  
                    u330 00C1                      u331 00C0                      u340 00E8  
                    u341 00E7                      u407 00D7                      u357 003C  
                    u367 0054                      u377 006F                      u387 008A  
                    u397 00B6                      _isr 00F8                      fsr0 0004  
                   l1011 0170                     l1003 0160                     l1013 0175  
                   l1005 0161                     l1015 017A                     l1007 0166  
                   l1023 0189                     l1017 017F                     l1009 016B  
                   l1025 01AE                     l1201 0090                     l1019 0184  
                   l1211 0097                     l1203 0093                     l1221 00C1  
                   l1205 0094                     l1213 0099                     l1231 00CF  
                   l1223 00CB                     l1215 009E                     l1207 0095  
                   l1241 00F2                     l1233 00DD                     l1225 00CC  
                   l1217 00B0                     l1209 0096                     l1243 00F3  
                   l1235 00E0                     l1227 00CD                     l1219 00BB  
                   l1171 001D                     l1229 00CE                     l1237 00E2  
                   l1181 0042                     l1173 0022                     l1239 00E8  
                   l1191 0067                     l1183 005A                     l1175 0029  
                   l1193 0075                     l1185 005D                     l1177 002C  
                   l1275 0191                     l1195 0078                     l1187 005E  
                   l1179 0034                     l1197 0079                     l1189 005F  
                   l1199 0082                     ?_isr 0070                     _T0IF 005A  
                   _RBIF 0058                     i1l90 0139                     i1l85 013B  
                   i1l86 0107                     i1l88 0120                     i1l97 0158  
                   _TMR0 0001                     _main 001D          indicador@salida 0076  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_main 0070                    _ANSEL 0188                    u20_20 011A  
                  u20_21 0119                    u21_20 0124                    u21_21 0123  
                  u22_20 0129                    u22_21 0128                    u23_20 0133  
                  u23_21 0132                    u24_20 013F                    u16_20 00FC  
                  u24_21 013E                    u16_21 00FB                    u25_20 014B  
                  u17_20 0102                    u25_21 014A                    u17_21 0101  
                  u26_20 0154                    u18_20 010B                    u26_21 0153  
                  u18_21 010A                    u19_20 0110                    u19_21 010F  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _cont1 0021                    _cont2 0020  
                  _tabla 01EF                    _setup 01B0                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00F8                   ??_main 0024                   ?_setup 0070  
                 _ANSELH 0189                   i1l1041 0110                   i1l1033 00F8  
                 i1l1051 0133                   i1l1043 011A                   i1l1035 00FC  
                 i1l1061 0154                   i1l1053 0137                   i1l1045 011E  
                 i1l1037 0102                   i1l1063 0155                   i1l1047 0124  
                 i1l1039 010B                   i1l1055 0139                   i1l1065 0156  
                 i1l1057 013F                   i1l1049 0129                   i1l1059 014B  
      indicador@analizar 0075                   saved_w 007E  __end_of__initialization 0019  
         __pcstackCOMMON 0070            __end_of_tabla 01F9            __end_of_setup 01E9  
         _OPTION_REGbits 0081                  ??_setup 0073               __pbssBANK0 0020  
     __size_of_indicador 0051               __pmaintext 001D               __pintentry 0004  
             __stringtab 01E9        __end_of_indicador 01B0                  __ptext1 01B0  
                __ptext2 015F                  __ptext3 00F8             __size_of_isr 0067  
   end_of_initialization 0019      start_initialization 000F              __end_of_isr 015F  
            __pbssCOMMON 0077                ___latbits 0002            __pcstackBANK0 0024  
              __pstrings 01E9                _indicador 015F           __size_of_setup 0039  
      interrupt_function 0004                 _IOCBbits 0096              __stringbase 01EE  
               _WPUBbits 0095               ?_indicador 0070       __end_of__stringtab 01EF  
          __size_of_main 00DB               _INTCONbits 000B              ??_indicador 0073  
               intlevel1 0000                stringcode 01E9               _OSCCONbits 008F  
               stringdir 01E9                 stringtab 01E9  
