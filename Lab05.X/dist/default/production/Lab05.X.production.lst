

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Aug 18 12:05:47 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  0105                     	;# 
   277  0107                     	;# 
   278  0108                     	;# 
   279  0109                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0187                     	;# 
   287  0188                     	;# 
   288  0189                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291                           
   292                           	psect	nvBANK0
   293  003A                     __pnvBANK0:
   294  003A                     _unidad:
   295  003A                     	ds	1
   296  003B                     _decena:
   297  003B                     	ds	1
   298  003C                     _centena:
   299  003C                     	ds	1
   300  001A                     _RCREG	set	26
   301  0019                     _TXREG	set	25
   302  0018                     _RCSTAbits	set	24
   303  000B                     _INTCONbits	set	11
   304  0007                     _PORTC	set	7
   305  0006                     _PORTB	set	6
   306  0005                     _PORTA	set	5
   307  0008                     _PORTD	set	8
   308  000C                     _PIR1bits	set	12
   309  0031                     _RB1	set	49
   310  0030                     _RB0	set	48
   311  0058                     _RBIF	set	88
   312  009A                     _SPBRGH	set	154
   313  0099                     _SPBRG	set	153
   314  0098                     _TXSTAbits	set	152
   315  0096                     _IOCBbits	set	150
   316  0095                     _WPUBbits	set	149
   317  0081                     _OPTION_REGbits	set	129
   318  008F                     _OSCCONbits	set	143
   319  0088                     _TRISD	set	136
   320  0087                     _TRISC	set	135
   321  0086                     _TRISB	set	134
   322  0085                     _TRISA	set	133
   323  0187                     _BAUDCTLbits	set	391
   324  0189                     _ANSELH	set	393
   325  0188                     _ANSEL	set	392
   326                           
   327                           	psect	cinit
   328  000F                     start_initialization:	
   329                           ; #config settings
   330                           
   331  000F                     __initialization:
   332                           
   333                           ; Clear objects allocated to COMMON
   334  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   335  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   336  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   337  0012  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   338                           
   339                           ; Clear objects allocated to BANK0
   340  0013  1283               	bcf	3,5	;RP0=0, select bank0
   341  0014  1303               	bcf	3,6	;RP1=0, select bank0
   342  0015  01AF               	clrf	__pbssBANK0& (0+127)
   343  0016  01B0               	clrf	(__pbssBANK0+1)& (0+127)
   344  0017  01B1               	clrf	(__pbssBANK0+2)& (0+127)
   345  0018  01B2               	clrf	(__pbssBANK0+3)& (0+127)
   346  0019  01B3               	clrf	(__pbssBANK0+4)& (0+127)
   347  001A  01B4               	clrf	(__pbssBANK0+5)& (0+127)
   348  001B  01B5               	clrf	(__pbssBANK0+6)& (0+127)
   349  001C  01B6               	clrf	(__pbssBANK0+7)& (0+127)
   350  001D  01B7               	clrf	(__pbssBANK0+8)& (0+127)
   351  001E  01B8               	clrf	(__pbssBANK0+9)& (0+127)
   352  001F  01B9               	clrf	(__pbssBANK0+10)& (0+127)
   353  0020                     end_of_initialization:	
   354                           ;End of C runtime variable initialization code
   355                           
   356  0020                     __end_of__initialization:
   357  0020  0183               	clrf	3
   358  0021  120A  118A  2824   	ljmp	_main	;jump to C main() function
   359                           
   360                           	psect	bssCOMMON
   361  0077                     __pbssCOMMON:
   362  0077                     _total:
   363  0077                     	ds	1
   364  0078                     _listo:
   365  0078                     	ds	1
   366  0079                     _cont1:
   367  0079                     	ds	1
   368  007A                     _cont:
   369  007A                     	ds	1
   370                           
   371                           	psect	bssBANK0
   372  002F                     __pbssBANK0:
   373  002F                     _entrada:
   374  002F                     	ds	2
   375  0031                     _voltaje2:
   376  0031                     	ds	2
   377  0033                     _voltaje:
   378  0033                     	ds	2
   379  0035                     _unidad2:
   380  0035                     	ds	1
   381  0036                     _decena2:
   382  0036                     	ds	1
   383  0037                     _centena2:
   384  0037                     	ds	1
   385  0038                     _oldCont1:
   386  0038                     	ds	1
   387  0039                     _oldCont:
   388  0039                     	ds	1
   389                           
   390                           	psect	cstackCOMMON
   391  0070                     __pcstackCOMMON:
   392  0070                     ?_setup:
   393  0070                     ?_USART_Rx:	
   394                           ; 1 bytes @ 0x0
   395                           
   396  0070                     ?_USART_Tx:	
   397                           ; 1 bytes @ 0x0
   398                           
   399  0070                     ?_USART_Int:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0070                     ?_isr:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ??_isr:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ?_main:	
   409                           ; 1 bytes @ 0x0
   410                           
   411                           
   412                           ; 1 bytes @ 0x0
   413  0070                     	ds	3
   414  0073                     ??_setup:
   415  0073                     ??_USART_Rx:	
   416                           ; 1 bytes @ 0x3
   417                           
   418  0073                     ??_USART_Tx:	
   419                           ; 1 bytes @ 0x3
   420                           
   421  0073                     ??_USART_Int:	
   422                           ; 1 bytes @ 0x3
   423                           
   424  0073                     ?___bmul:	
   425                           ; 1 bytes @ 0x3
   426                           
   427  0073                     ?___wmul:	
   428                           ; 1 bytes @ 0x3
   429                           
   430  0073                     USART_Tx@data:	
   431                           ; 2 bytes @ 0x3
   432                           
   433  0073                     ___bmul@multiplicand:	
   434                           ; 1 bytes @ 0x3
   435                           
   436  0073                     ___wmul@multiplier:	
   437                           ; 1 bytes @ 0x3
   438                           
   439                           
   440                           ; 2 bytes @ 0x3
   441  0073                     	ds	1
   442  0074                     ??___bmul:
   443                           
   444                           ; 1 bytes @ 0x4
   445  0074                     	ds	1
   446  0075                     ___bmul@product:
   447  0075                     ___wmul@multiplicand:	
   448                           ; 1 bytes @ 0x5
   449                           
   450                           
   451                           ; 2 bytes @ 0x5
   452  0075                     	ds	1
   453  0076                     ___bmul@multiplier:
   454                           
   455                           ; 1 bytes @ 0x6
   456  0076                     	ds	1
   457  0077                     ??___wmul:
   458                           
   459                           	psect	cstackBANK0
   460  0020                     __pcstackBANK0:	
   461                           ; 1 bytes @ 0x7
   462                           
   463  0020                     ___wmul@product:
   464                           
   465                           ; 2 bytes @ 0x0
   466  0020                     	ds	2
   467  0022                     ?___awdiv:
   468  0022                     ___awdiv@divisor:	
   469                           ; 2 bytes @ 0x2
   470                           
   471                           
   472                           ; 2 bytes @ 0x2
   473  0022                     	ds	2
   474  0024                     ___awdiv@dividend:
   475                           
   476                           ; 2 bytes @ 0x4
   477  0024                     	ds	2
   478  0026                     ??___awdiv:
   479                           
   480                           ; 1 bytes @ 0x6
   481  0026                     	ds	1
   482  0027                     ___awdiv@counter:
   483                           
   484                           ; 1 bytes @ 0x7
   485  0027                     	ds	1
   486  0028                     ___awdiv@sign:
   487                           
   488                           ; 1 bytes @ 0x8
   489  0028                     	ds	1
   490  0029                     ___awdiv@quotient:
   491                           
   492                           ; 2 bytes @ 0x9
   493  0029                     	ds	2
   494  002B                     ??_main:
   495                           
   496                           ; 1 bytes @ 0xB
   497  002B                     	ds	4
   498                           
   499                           	psect	maintext
   500  0024                     __pmaintext:	
   501 ;;
   502 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   503 ;;
   504 ;; *************** function _main *****************
   505 ;; Defined at:
   506 ;;		line 48 in file "Pic y adafruit.c"
   507 ;; Parameters:    Size  Location     Type
   508 ;;		None
   509 ;; Auto vars:     Size  Location     Type
   510 ;;		None
   511 ;; Return value:  Size  Location     Type
   512 ;;                  1    wreg      void 
   513 ;; Registers used:
   514 ;;		wreg, status,2, status,0, pclath, cstack
   515 ;; Tracked objects:
   516 ;;		On entry : B00/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   520 ;;      Params:         0       0       0       0       0
   521 ;;      Locals:         0       0       0       0       0
   522 ;;      Temps:          0       4       0       0       0
   523 ;;      Totals:         0       4       0       0       0
   524 ;;Total ram usage:        4 bytes
   525 ;; Hardware stack levels required when called:    3
   526 ;; This function calls:
   527 ;;		_USART_Rx
   528 ;;		_USART_Tx
   529 ;;		___awdiv
   530 ;;		___bmul
   531 ;;		___wmul
   532 ;;		_setup
   533 ;; This function is called by:
   534 ;;		Startup code after reset
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538                           
   539                           ;psect for function _main
   540  0024                     _main:
   541  0024                     l1110:	
   542                           ;incstack = 0
   543                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   544                           
   545                           
   546                           ;Pic y adafruit.c: 49:     setup();
   547  0024  120A  118A  2161  120A  118A  	fcall	_setup
   548  0029                     l90:	
   549                           ;Pic y adafruit.c: 50:     while(1){
   550                           
   551                           
   552                           ;Pic y adafruit.c: 52:         centena = (cont / 100);
   553  0029  3064               	movlw	100
   554  002A  1283               	bcf	3,5	;RP0=0, select bank0
   555  002B  1303               	bcf	3,6	;RP1=0, select bank0
   556  002C  00A2               	movwf	___awdiv@divisor
   557  002D  3000               	movlw	0
   558  002E  00A3               	movwf	___awdiv@divisor+1
   559  002F  087A               	movf	_cont,w
   560  0030  00AB               	movwf	??_main
   561  0031  01AC               	clrf	??_main+1
   562  0032  082B               	movf	??_main,w
   563  0033  00A4               	movwf	___awdiv@dividend
   564  0034  082C               	movf	??_main+1,w
   565  0035  00A5               	movwf	___awdiv@dividend+1
   566  0036  120A  118A  20CD  120A  118A  	fcall	___awdiv
   567  003B  1283               	bcf	3,5	;RP0=0, select bank0
   568  003C  1303               	bcf	3,6	;RP1=0, select bank0
   569  003D  0822               	movf	?___awdiv,w
   570  003E  00AD               	movwf	??_main+2
   571  003F  082D               	movf	??_main+2,w
   572  0040  00BC               	movwf	_centena
   573                           
   574                           ;Pic y adafruit.c: 53:         decena = ((cont - (centena*100)) / 10);
   575  0041  300A               	movlw	10
   576  0042  00A2               	movwf	___awdiv@divisor
   577  0043  3000               	movlw	0
   578  0044  00A3               	movwf	___awdiv@divisor+1
   579  0045  083C               	movf	_centena,w
   580  0046  00AB               	movwf	??_main
   581  0047  01AC               	clrf	??_main+1
   582  0048  082B               	movf	??_main,w
   583  0049  00F3               	movwf	___wmul@multiplier
   584  004A  082C               	movf	??_main+1,w
   585  004B  00F4               	movwf	___wmul@multiplier+1
   586  004C  309C               	movlw	156
   587  004D  00F5               	movwf	___wmul@multiplicand
   588  004E  30FF               	movlw	255
   589  004F  00F6               	movwf	___wmul@multiplicand+1
   590  0050  120A  118A  2136  120A  118A  	fcall	___wmul
   591  0055  087A               	movf	_cont,w
   592  0056  0773               	addwf	?___wmul,w
   593  0057  1283               	bcf	3,5	;RP0=0, select bank0
   594  0058  1303               	bcf	3,6	;RP1=0, select bank0
   595  0059  00A4               	movwf	___awdiv@dividend
   596  005A  0874               	movf	?___wmul+1,w
   597  005B  1803               	skipnc
   598  005C  0A74               	incf	?___wmul+1,w
   599  005D  00A5               	movwf	___awdiv@dividend+1
   600  005E  120A  118A  20CD  120A  118A  	fcall	___awdiv
   601  0063  1283               	bcf	3,5	;RP0=0, select bank0
   602  0064  1303               	bcf	3,6	;RP1=0, select bank0
   603  0065  0822               	movf	?___awdiv,w
   604  0066  00AD               	movwf	??_main+2
   605  0067  082D               	movf	??_main+2,w
   606  0068  00BB               	movwf	_decena
   607                           
   608                           ;Pic y adafruit.c: 54:         unidad = ((cont - (centena*100)) - (decena*10));
   609  0069  309C               	movlw	156
   610  006A  00AB               	movwf	??_main
   611  006B  082B               	movf	??_main,w
   612  006C  00F3               	movwf	___bmul@multiplicand
   613  006D  083C               	movf	_centena,w
   614  006E  120A  118A  21BA  120A  118A  	fcall	___bmul
   615  0073  1283               	bcf	3,5	;RP0=0, select bank0
   616  0074  1303               	bcf	3,6	;RP1=0, select bank0
   617  0075  00AC               	movwf	??_main+1
   618  0076  30F6               	movlw	246
   619  0077  00AD               	movwf	??_main+2
   620  0078  082D               	movf	??_main+2,w
   621  0079  00F3               	movwf	___bmul@multiplicand
   622  007A  083B               	movf	_decena,w
   623  007B  120A  118A  21BA  120A  118A  	fcall	___bmul
   624  0080  1283               	bcf	3,5	;RP0=0, select bank0
   625  0081  1303               	bcf	3,6	;RP1=0, select bank0
   626  0082  072C               	addwf	??_main+1,w
   627  0083  077A               	addwf	_cont,w
   628  0084  00AE               	movwf	??_main+3
   629  0085  082E               	movf	??_main+3,w
   630  0086  00BA               	movwf	_unidad
   631  0087                     l1112:
   632                           
   633                           ;Pic y adafruit.c: 56:         centena += 48;
   634  0087  3030               	movlw	48
   635  0088  00AB               	movwf	??_main
   636  0089  082B               	movf	??_main,w
   637  008A  07BC               	addwf	_centena,f
   638  008B                     l1114:
   639                           
   640                           ;Pic y adafruit.c: 57:         decena += 48;
   641  008B  3030               	movlw	48
   642  008C  00AB               	movwf	??_main
   643  008D  082B               	movf	??_main,w
   644  008E  07BB               	addwf	_decena,f
   645  008F                     l1116:
   646                           
   647                           ;Pic y adafruit.c: 58:         unidad += 48;
   648  008F  3030               	movlw	48
   649  0090  00AB               	movwf	??_main
   650  0091  082B               	movf	??_main,w
   651  0092  07BA               	addwf	_unidad,f
   652  0093                     l1118:
   653                           
   654                           ;Pic y adafruit.c: 60:         if (PIR1bits.RCIF == 1){
   655  0093  1E8C               	btfss	12,5	;volatile
   656  0094  2896               	goto	u581
   657  0095  2897               	goto	u580
   658  0096                     u581:
   659  0096  28C5               	goto	l1132
   660  0097                     u580:
   661  0097                     l1120:
   662                           
   663                           ;Pic y adafruit.c: 62:             listo = USART_Rx();
   664  0097  120A  118A  21DB  120A  118A  	fcall	_USART_Rx
   665  009C  1283               	bcf	3,5	;RP0=0, select bank0
   666  009D  1303               	bcf	3,6	;RP1=0, select bank0
   667  009E  00AB               	movwf	??_main
   668  009F  082B               	movf	??_main,w
   669  00A0  00F8               	movwf	_listo
   670  00A1                     l1122:
   671                           
   672                           ;Pic y adafruit.c: 63:             cont1 = listo;
   673  00A1  0878               	movf	_listo,w
   674  00A2  00AB               	movwf	??_main
   675  00A3  082B               	movf	??_main,w
   676  00A4  00F9               	movwf	_cont1
   677  00A5                     l1124:
   678                           
   679                           ;Pic y adafruit.c: 64:             if(listo == 's'){
   680  00A5  3073               	movlw	115
   681  00A6  0678               	xorwf	_listo,w
   682  00A7  1D03               	btfss	3,2
   683  00A8  28AA               	goto	u591
   684  00A9  28AB               	goto	u590
   685  00AA                     u591:
   686  00AA  28C2               	goto	l1130
   687  00AB                     u590:
   688  00AB                     l1126:
   689                           
   690                           ;Pic y adafruit.c: 65:             USART_Tx(centena);
   691  00AB  083C               	movf	_centena,w
   692  00AC  120A  118A  21CF  120A  118A  	fcall	_USART_Tx
   693                           
   694                           ;Pic y adafruit.c: 66:             USART_Tx(decena);
   695  00B1  1283               	bcf	3,5	;RP0=0, select bank0
   696  00B2  1303               	bcf	3,6	;RP1=0, select bank0
   697  00B3  083B               	movf	_decena,w
   698  00B4  120A  118A  21CF  120A  118A  	fcall	_USART_Tx
   699                           
   700                           ;Pic y adafruit.c: 67:             USART_Tx(unidad);
   701  00B9  1283               	bcf	3,5	;RP0=0, select bank0
   702  00BA  1303               	bcf	3,6	;RP1=0, select bank0
   703  00BB  083A               	movf	_unidad,w
   704  00BC  120A  118A  21CF  120A  118A  	fcall	_USART_Tx
   705  00C1                     l1128:
   706                           
   707                           ;Pic y adafruit.c: 68:             listo = 0;
   708  00C1  01F8               	clrf	_listo
   709  00C2                     l1130:
   710                           
   711                           ;Pic y adafruit.c: 71:             PIR1bits.RCIF = 0;
   712  00C2  1283               	bcf	3,5	;RP0=0, select bank0
   713  00C3  1303               	bcf	3,6	;RP1=0, select bank0
   714  00C4  128C               	bcf	12,5	;volatile
   715  00C5                     l1132:
   716                           
   717                           ;Pic y adafruit.c: 73:         PORTD = cont;
   718  00C5  087A               	movf	_cont,w
   719  00C6  0088               	movwf	8	;volatile
   720  00C7                     l1134:
   721                           
   722                           ;Pic y adafruit.c: 74:         PORTA = cont1;
   723  00C7  0879               	movf	_cont1,w
   724  00C8  0085               	movwf	5	;volatile
   725  00C9  2829               	goto	l90
   726  00CA  120A  118A  280C   	ljmp	start
   727  00CD                     __end_of_main:
   728                           
   729                           	psect	text1
   730  0161                     __ptext1:	
   731 ;; *************** function _setup *****************
   732 ;; Defined at:
   733 ;;		line 110 in file "Pic y adafruit.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;		None
   736 ;; Auto vars:     Size  Location     Type
   737 ;;		None
   738 ;; Return value:  Size  Location     Type
   739 ;;                  1    wreg      void 
   740 ;; Registers used:
   741 ;;		wreg, status,2, status,0, pclath, cstack
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   747 ;;      Params:         0       0       0       0       0
   748 ;;      Locals:         0       0       0       0       0
   749 ;;      Temps:          0       0       0       0       0
   750 ;;      Totals:         0       0       0       0       0
   751 ;;Total ram usage:        0 bytes
   752 ;; Hardware stack levels used:    1
   753 ;; Hardware stack levels required when called:    2
   754 ;; This function calls:
   755 ;;		_USART_Int
   756 ;; This function is called by:
   757 ;;		_main
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761                           
   762                           ;psect for function _setup
   763  0161                     _setup:
   764  0161                     l906:	
   765                           ;incstack = 0
   766                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   767                           
   768                           
   769                           ;Pic y adafruit.c: 111:     ANSEL = 0x00;
   770  0161  1683               	bsf	3,5	;RP0=1, select bank3
   771  0162  1703               	bsf	3,6	;RP1=1, select bank3
   772  0163  0188               	clrf	8	;volatile
   773                           
   774                           ;Pic y adafruit.c: 112:     ANSELH = 0x00;
   775  0164  0189               	clrf	9	;volatile
   776                           
   777                           ;Pic y adafruit.c: 114:     TRISA = 0x00;
   778  0165  1683               	bsf	3,5	;RP0=1, select bank1
   779  0166  1303               	bcf	3,6	;RP1=0, select bank1
   780  0167  0185               	clrf	5	;volatile
   781  0168                     l908:
   782                           
   783                           ;Pic y adafruit.c: 115:     TRISB = 0x03;
   784  0168  3003               	movlw	3
   785  0169  0086               	movwf	6	;volatile
   786  016A                     l910:
   787                           
   788                           ;Pic y adafruit.c: 116:     TRISC = 0b10000000;
   789  016A  3080               	movlw	128
   790  016B  0087               	movwf	7	;volatile
   791                           
   792                           ;Pic y adafruit.c: 117:     TRISD = 0x00;
   793  016C  0188               	clrf	8	;volatile
   794                           
   795                           ;Pic y adafruit.c: 119:     PORTA = 0x00;
   796  016D  1283               	bcf	3,5	;RP0=0, select bank0
   797  016E  1303               	bcf	3,6	;RP1=0, select bank0
   798  016F  0185               	clrf	5	;volatile
   799                           
   800                           ;Pic y adafruit.c: 120:     PORTB = 0x00;
   801  0170  0186               	clrf	6	;volatile
   802                           
   803                           ;Pic y adafruit.c: 121:     PORTD = 0x00;
   804  0171  0188               	clrf	8	;volatile
   805                           
   806                           ;Pic y adafruit.c: 122:     PORTC = 0x00;
   807  0172  0187               	clrf	7	;volatile
   808  0173                     l912:
   809                           
   810                           ;Pic y adafruit.c: 124:     OSCCONbits.IRCF = 0b111;
   811  0173  3070               	movlw	112
   812  0174  1683               	bsf	3,5	;RP0=1, select bank1
   813  0175  1303               	bcf	3,6	;RP1=0, select bank1
   814  0176  048F               	iorwf	15,f	;volatile
   815  0177                     l914:
   816                           
   817                           ;Pic y adafruit.c: 125:     OSCCONbits.SCS = 1;
   818  0177  140F               	bsf	15,0	;volatile
   819  0178                     l916:
   820                           
   821                           ;Pic y adafruit.c: 128:     OPTION_REGbits.nRBPU = 0;
   822  0178  1381               	bcf	1,7	;volatile
   823  0179                     l918:
   824                           
   825                           ;Pic y adafruit.c: 129:     WPUBbits.WPUB0 = 1;
   826  0179  1415               	bsf	21,0	;volatile
   827  017A                     l920:
   828                           
   829                           ;Pic y adafruit.c: 130:     WPUBbits.WPUB1 = 1;
   830  017A  1495               	bsf	21,1	;volatile
   831  017B                     l922:
   832                           
   833                           ;Pic y adafruit.c: 132:     IOCBbits.IOCB0 = 1;
   834  017B  1416               	bsf	22,0	;volatile
   835  017C                     l924:
   836                           
   837                           ;Pic y adafruit.c: 133:     IOCBbits.IOCB1 = 1;
   838  017C  1496               	bsf	22,1	;volatile
   839  017D                     l926:
   840                           
   841                           ;Pic y adafruit.c: 135:     INTCONbits.GIE = 1;
   842  017D  178B               	bsf	11,7	;volatile
   843  017E                     l928:
   844                           
   845                           ;Pic y adafruit.c: 136:     INTCONbits.RBIE = 1;
   846  017E  158B               	bsf	11,3	;volatile
   847  017F                     l930:
   848                           
   849                           ;Pic y adafruit.c: 137:     INTCONbits.RBIF = 0;
   850  017F  100B               	bcf	11,0	;volatile
   851  0180                     l932:
   852                           
   853                           ;Pic y adafruit.c: 138:     USART_Int();
   854  0180  120A  118A  21A5  120A  118A  	fcall	_USART_Int
   855  0185                     l934:
   856                           
   857                           ;Pic y adafruit.c: 139:     cont = 0;
   858  0185  01FA               	clrf	_cont
   859  0186                     l936:
   860                           
   861                           ;Pic y adafruit.c: 140:     cont1 = 0;
   862  0186  01F9               	clrf	_cont1
   863  0187                     l98:
   864  0187  0008               	return
   865  0188                     __end_of_setup:
   866                           
   867                           	psect	text2
   868  01A5                     __ptext2:	
   869 ;; *************** function _USART_Int *****************
   870 ;; Defined at:
   871 ;;		line 11 in file "USART.c"
   872 ;; Parameters:    Size  Location     Type
   873 ;;		None
   874 ;; Auto vars:     Size  Location     Type
   875 ;;		None
   876 ;; Return value:  Size  Location     Type
   877 ;;                  1    wreg      void 
   878 ;; Registers used:
   879 ;;		wreg, status,2
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   885 ;;      Params:         0       0       0       0       0
   886 ;;      Locals:         0       0       0       0       0
   887 ;;      Temps:          0       0       0       0       0
   888 ;;      Totals:         0       0       0       0       0
   889 ;;Total ram usage:        0 bytes
   890 ;; Hardware stack levels used:    1
   891 ;; Hardware stack levels required when called:    1
   892 ;; This function calls:
   893 ;;		Nothing
   894 ;; This function is called by:
   895 ;;		_setup
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           
   900                           ;psect for function _USART_Int
   901  01A5                     _USART_Int:
   902  01A5                     l892:	
   903                           ;incstack = 0
   904                           ; Regs used in _USART_Int: [wreg+status,2]
   905                           
   906                           
   907                           ;USART.c: 13:     TXSTAbits.SYNC = 0;
   908  01A5  1683               	bsf	3,5	;RP0=1, select bank1
   909  01A6  1303               	bcf	3,6	;RP1=0, select bank1
   910  01A7  1218               	bcf	24,4	;volatile
   911                           
   912                           ;USART.c: 14:     TXSTAbits.BRGH = 1;
   913  01A8  1518               	bsf	24,2	;volatile
   914                           
   915                           ;USART.c: 15:     BAUDCTLbits.BRG16 = 1;
   916  01A9  1683               	bsf	3,5	;RP0=1, select bank3
   917  01AA  1703               	bsf	3,6	;RP1=1, select bank3
   918  01AB  1587               	bsf	7,3	;volatile
   919  01AC                     l894:
   920                           
   921                           ;USART.c: 17:     SPBRG = 207;
   922  01AC  30CF               	movlw	207
   923  01AD  1683               	bsf	3,5	;RP0=1, select bank1
   924  01AE  1303               	bcf	3,6	;RP1=0, select bank1
   925  01AF  0099               	movwf	25	;volatile
   926  01B0                     l896:
   927                           
   928                           ;USART.c: 18:     SPBRGH = 0;
   929  01B0  019A               	clrf	26	;volatile
   930  01B1                     l898:
   931                           
   932                           ;USART.c: 20:     RCSTAbits.SPEN = 1;
   933  01B1  1283               	bcf	3,5	;RP0=0, select bank0
   934  01B2  1303               	bcf	3,6	;RP1=0, select bank0
   935  01B3  1798               	bsf	24,7	;volatile
   936  01B4                     l900:
   937                           
   938                           ;USART.c: 21:     RCSTAbits.RX9 = 0;
   939  01B4  1318               	bcf	24,6	;volatile
   940  01B5                     l902:
   941                           
   942                           ;USART.c: 22:     RCSTAbits.CREN = 1;
   943  01B5  1618               	bsf	24,4	;volatile
   944  01B6                     l904:
   945                           
   946                           ;USART.c: 23:     TXSTAbits.TXEN = 1;
   947  01B6  1683               	bsf	3,5	;RP0=1, select bank1
   948  01B7  1303               	bcf	3,6	;RP1=0, select bank1
   949  01B8  1698               	bsf	24,5	;volatile
   950  01B9                     l115:
   951  01B9  0008               	return
   952  01BA                     __end_of_USART_Int:
   953                           
   954                           	psect	text3
   955  0136                     __ptext3:	
   956 ;; *************** function ___wmul *****************
   957 ;; Defined at:
   958 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;  multiplier      2    3[COMMON] unsigned int 
   961 ;;  multiplicand    2    5[COMMON] unsigned int 
   962 ;; Auto vars:     Size  Location     Type
   963 ;;  product         2    0[BANK0 ] unsigned int 
   964 ;; Return value:  Size  Location     Type
   965 ;;                  2    3[COMMON] unsigned int 
   966 ;; Registers used:
   967 ;;		wreg, status,2, status,0
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   973 ;;      Params:         4       0       0       0       0
   974 ;;      Locals:         0       2       0       0       0
   975 ;;      Temps:          0       0       0       0       0
   976 ;;      Totals:         4       2       0       0       0
   977 ;;Total ram usage:        6 bytes
   978 ;; Hardware stack levels used:    1
   979 ;; Hardware stack levels required when called:    1
   980 ;; This function calls:
   981 ;;		Nothing
   982 ;; This function is called by:
   983 ;;		_main
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           
   988                           ;psect for function ___wmul
   989  0136                     ___wmul:
   990  0136                     l1052:	
   991                           ;incstack = 0
   992                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   993                           
   994  0136  1283               	bcf	3,5	;RP0=0, select bank0
   995  0137  1303               	bcf	3,6	;RP1=0, select bank0
   996  0138  01A0               	clrf	___wmul@product
   997  0139  01A1               	clrf	___wmul@product+1
   998  013A                     l1054:
   999  013A  1C73               	btfss	___wmul@multiplier,0
  1000  013B  293D               	goto	u441
  1001  013C  293E               	goto	u440
  1002  013D                     u441:
  1003  013D  2946               	goto	l216
  1004  013E                     u440:
  1005  013E                     l1056:
  1006  013E  0875               	movf	___wmul@multiplicand,w
  1007  013F  1283               	bcf	3,5	;RP0=0, select bank0
  1008  0140  1303               	bcf	3,6	;RP1=0, select bank0
  1009  0141  07A0               	addwf	___wmul@product,f
  1010  0142  1803               	skipnc
  1011  0143  0AA1               	incf	___wmul@product+1,f
  1012  0144  0876               	movf	___wmul@multiplicand+1,w
  1013  0145  07A1               	addwf	___wmul@product+1,f
  1014  0146                     l216:
  1015  0146  3001               	movlw	1
  1016  0147                     u455:
  1017  0147  1003               	clrc
  1018  0148  0DF5               	rlf	___wmul@multiplicand,f
  1019  0149  0DF6               	rlf	___wmul@multiplicand+1,f
  1020  014A  3EFF               	addlw	-1
  1021  014B  1D03               	skipz
  1022  014C  2947               	goto	u455
  1023  014D                     l1058:
  1024  014D  3001               	movlw	1
  1025  014E                     u465:
  1026  014E  1003               	clrc
  1027  014F  0CF4               	rrf	___wmul@multiplier+1,f
  1028  0150  0CF3               	rrf	___wmul@multiplier,f
  1029  0151  3EFF               	addlw	-1
  1030  0152  1D03               	skipz
  1031  0153  294E               	goto	u465
  1032  0154                     l1060:
  1033  0154  0873               	movf	___wmul@multiplier,w
  1034  0155  0474               	iorwf	___wmul@multiplier+1,w
  1035  0156  1D03               	btfss	3,2
  1036  0157  2959               	goto	u471
  1037  0158  295A               	goto	u470
  1038  0159                     u471:
  1039  0159  293A               	goto	l1054
  1040  015A                     u470:
  1041  015A                     l1062:
  1042  015A  1283               	bcf	3,5	;RP0=0, select bank0
  1043  015B  1303               	bcf	3,6	;RP1=0, select bank0
  1044  015C  0821               	movf	___wmul@product+1,w
  1045  015D  00F4               	movwf	?___wmul+1
  1046  015E  0820               	movf	___wmul@product,w
  1047  015F  00F3               	movwf	?___wmul
  1048  0160                     l218:
  1049  0160  0008               	return
  1050  0161                     __end_of___wmul:
  1051                           
  1052                           	psect	text4
  1053  01BA                     __ptext4:	
  1054 ;; *************** function ___bmul *****************
  1055 ;; Defined at:
  1056 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  1057 ;; Parameters:    Size  Location     Type
  1058 ;;  multiplier      1    wreg     unsigned char 
  1059 ;;  multiplicand    1    3[COMMON] unsigned char 
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;  multiplier      1    6[COMMON] unsigned char 
  1062 ;;  product         1    5[COMMON] unsigned char 
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  1    wreg      unsigned char 
  1065 ;; Registers used:
  1066 ;;		wreg, status,2, status,0
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1072 ;;      Params:         1       0       0       0       0
  1073 ;;      Locals:         2       0       0       0       0
  1074 ;;      Temps:          1       0       0       0       0
  1075 ;;      Totals:         4       0       0       0       0
  1076 ;;Total ram usage:        4 bytes
  1077 ;; Hardware stack levels used:    1
  1078 ;; Hardware stack levels required when called:    1
  1079 ;; This function calls:
  1080 ;;		Nothing
  1081 ;; This function is called by:
  1082 ;;		_main
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           
  1086                           
  1087                           ;psect for function ___bmul
  1088  01BA                     ___bmul:
  1089                           
  1090                           ;incstack = 0
  1091                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1092                           ;___bmul@multiplier stored from wreg
  1093  01BA  00F6               	movwf	___bmul@multiplier
  1094  01BB                     l960:
  1095  01BB  01F5               	clrf	___bmul@product
  1096  01BC                     l962:
  1097  01BC  1C76               	btfss	___bmul@multiplier,0
  1098  01BD  29BF               	goto	u291
  1099  01BE  29C0               	goto	u290
  1100  01BF                     u291:
  1101  01BF  29C4               	goto	l966
  1102  01C0                     u290:
  1103  01C0                     l964:
  1104  01C0  0873               	movf	___bmul@multiplicand,w
  1105  01C1  00F4               	movwf	??___bmul
  1106  01C2  0874               	movf	??___bmul,w
  1107  01C3  07F5               	addwf	___bmul@product,f
  1108  01C4                     l966:
  1109  01C4  1003               	clrc
  1110  01C5  0DF3               	rlf	___bmul@multiplicand,f
  1111  01C6                     l968:
  1112  01C6  1003               	clrc
  1113  01C7  0CF6               	rrf	___bmul@multiplier,f
  1114  01C8  0876               	movf	___bmul@multiplier,w
  1115  01C9  1D03               	btfss	3,2
  1116  01CA  29CC               	goto	u301
  1117  01CB  29CD               	goto	u300
  1118  01CC                     u301:
  1119  01CC  29BC               	goto	l962
  1120  01CD                     u300:
  1121  01CD                     l970:
  1122  01CD  0875               	movf	___bmul@product,w
  1123  01CE                     l242:
  1124  01CE  0008               	return
  1125  01CF                     __end_of___bmul:
  1126                           
  1127                           	psect	text5
  1128  00CD                     __ptext5:	
  1129 ;; *************** function ___awdiv *****************
  1130 ;; Defined at:
  1131 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;  divisor         2    2[BANK0 ] int 
  1134 ;;  dividend        2    4[BANK0 ] int 
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;  quotient        2    9[BANK0 ] int 
  1137 ;;  sign            1    8[BANK0 ] unsigned char 
  1138 ;;  counter         1    7[BANK0 ] unsigned char 
  1139 ;; Return value:  Size  Location     Type
  1140 ;;                  2    2[BANK0 ] int 
  1141 ;; Registers used:
  1142 ;;		wreg, status,2, status,0
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1148 ;;      Params:         0       4       0       0       0
  1149 ;;      Locals:         0       4       0       0       0
  1150 ;;      Temps:          0       1       0       0       0
  1151 ;;      Totals:         0       9       0       0       0
  1152 ;;Total ram usage:        9 bytes
  1153 ;; Hardware stack levels used:    1
  1154 ;; Hardware stack levels required when called:    1
  1155 ;; This function calls:
  1156 ;;		Nothing
  1157 ;; This function is called by:
  1158 ;;		_main
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           
  1163                           ;psect for function ___awdiv
  1164  00CD                     ___awdiv:
  1165  00CD                     l1066:	
  1166                           ;incstack = 0
  1167                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1168                           
  1169  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1170  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1171  00CF  01A8               	clrf	___awdiv@sign
  1172  00D0                     l1068:
  1173  00D0  1FA3               	btfss	___awdiv@divisor+1,7
  1174  00D1  28D3               	goto	u481
  1175  00D2  28D4               	goto	u480
  1176  00D3                     u481:
  1177  00D3  28DB               	goto	l1074
  1178  00D4                     u480:
  1179  00D4                     l1070:
  1180  00D4  09A2               	comf	___awdiv@divisor,f
  1181  00D5  09A3               	comf	___awdiv@divisor+1,f
  1182  00D6  0AA2               	incf	___awdiv@divisor,f
  1183  00D7  1903               	skipnz
  1184  00D8  0AA3               	incf	___awdiv@divisor+1,f
  1185  00D9                     l1072:
  1186  00D9  01A8               	clrf	___awdiv@sign
  1187  00DA  0AA8               	incf	___awdiv@sign,f
  1188  00DB                     l1074:
  1189  00DB  1FA5               	btfss	___awdiv@dividend+1,7
  1190  00DC  28DE               	goto	u491
  1191  00DD  28DF               	goto	u490
  1192  00DE                     u491:
  1193  00DE  28E8               	goto	l1080
  1194  00DF                     u490:
  1195  00DF                     l1076:
  1196  00DF  09A4               	comf	___awdiv@dividend,f
  1197  00E0  09A5               	comf	___awdiv@dividend+1,f
  1198  00E1  0AA4               	incf	___awdiv@dividend,f
  1199  00E2  1903               	skipnz
  1200  00E3  0AA5               	incf	___awdiv@dividend+1,f
  1201  00E4                     l1078:
  1202  00E4  3001               	movlw	1
  1203  00E5  00A6               	movwf	??___awdiv
  1204  00E6  0826               	movf	??___awdiv,w
  1205  00E7  06A8               	xorwf	___awdiv@sign,f
  1206  00E8                     l1080:
  1207  00E8  01A9               	clrf	___awdiv@quotient
  1208  00E9  01AA               	clrf	___awdiv@quotient+1
  1209  00EA                     l1082:
  1210  00EA  0822               	movf	___awdiv@divisor,w
  1211  00EB  0423               	iorwf	___awdiv@divisor+1,w
  1212  00EC  1903               	btfsc	3,2
  1213  00ED  28EF               	goto	u501
  1214  00EE  28F0               	goto	u500
  1215  00EF                     u501:
  1216  00EF  2927               	goto	l1102
  1217  00F0                     u500:
  1218  00F0                     l1084:
  1219  00F0  01A7               	clrf	___awdiv@counter
  1220  00F1  0AA7               	incf	___awdiv@counter,f
  1221  00F2  28FE               	goto	l1090
  1222  00F3                     l1086:
  1223  00F3  3001               	movlw	1
  1224  00F4                     u515:
  1225  00F4  1003               	clrc
  1226  00F5  0DA2               	rlf	___awdiv@divisor,f
  1227  00F6  0DA3               	rlf	___awdiv@divisor+1,f
  1228  00F7  3EFF               	addlw	-1
  1229  00F8  1D03               	skipz
  1230  00F9  28F4               	goto	u515
  1231  00FA                     l1088:
  1232  00FA  3001               	movlw	1
  1233  00FB  00A6               	movwf	??___awdiv
  1234  00FC  0826               	movf	??___awdiv,w
  1235  00FD  07A7               	addwf	___awdiv@counter,f
  1236  00FE                     l1090:
  1237  00FE  1FA3               	btfss	___awdiv@divisor+1,7
  1238  00FF  2901               	goto	u521
  1239  0100  2902               	goto	u520
  1240  0101                     u521:
  1241  0101  28F3               	goto	l1086
  1242  0102                     u520:
  1243  0102                     l1092:
  1244  0102  3001               	movlw	1
  1245  0103                     u535:
  1246  0103  1003               	clrc
  1247  0104  0DA9               	rlf	___awdiv@quotient,f
  1248  0105  0DAA               	rlf	___awdiv@quotient+1,f
  1249  0106  3EFF               	addlw	-1
  1250  0107  1D03               	skipz
  1251  0108  2903               	goto	u535
  1252  0109  0823               	movf	___awdiv@divisor+1,w
  1253  010A  0225               	subwf	___awdiv@dividend+1,w
  1254  010B  1D03               	skipz
  1255  010C  290F               	goto	u545
  1256  010D  0822               	movf	___awdiv@divisor,w
  1257  010E  0224               	subwf	___awdiv@dividend,w
  1258  010F                     u545:
  1259  010F  1C03               	skipc
  1260  0110  2912               	goto	u541
  1261  0111  2913               	goto	u540
  1262  0112                     u541:
  1263  0112  291A               	goto	l1098
  1264  0113                     u540:
  1265  0113                     l1094:
  1266  0113  0822               	movf	___awdiv@divisor,w
  1267  0114  02A4               	subwf	___awdiv@dividend,f
  1268  0115  0823               	movf	___awdiv@divisor+1,w
  1269  0116  1C03               	skipc
  1270  0117  03A5               	decf	___awdiv@dividend+1,f
  1271  0118  02A5               	subwf	___awdiv@dividend+1,f
  1272  0119                     l1096:
  1273  0119  1429               	bsf	___awdiv@quotient,0
  1274  011A                     l1098:
  1275  011A  3001               	movlw	1
  1276  011B                     u555:
  1277  011B  1003               	clrc
  1278  011C  0CA3               	rrf	___awdiv@divisor+1,f
  1279  011D  0CA2               	rrf	___awdiv@divisor,f
  1280  011E  3EFF               	addlw	-1
  1281  011F  1D03               	skipz
  1282  0120  291B               	goto	u555
  1283  0121                     l1100:
  1284  0121  3001               	movlw	1
  1285  0122  02A7               	subwf	___awdiv@counter,f
  1286  0123  1D03               	btfss	3,2
  1287  0124  2926               	goto	u561
  1288  0125  2927               	goto	u560
  1289  0126                     u561:
  1290  0126  2902               	goto	l1092
  1291  0127                     u560:
  1292  0127                     l1102:
  1293  0127  0828               	movf	___awdiv@sign,w
  1294  0128  1903               	btfsc	3,2
  1295  0129  292B               	goto	u571
  1296  012A  292C               	goto	u570
  1297  012B                     u571:
  1298  012B  2931               	goto	l1106
  1299  012C                     u570:
  1300  012C                     l1104:
  1301  012C  09A9               	comf	___awdiv@quotient,f
  1302  012D  09AA               	comf	___awdiv@quotient+1,f
  1303  012E  0AA9               	incf	___awdiv@quotient,f
  1304  012F  1903               	skipnz
  1305  0130  0AAA               	incf	___awdiv@quotient+1,f
  1306  0131                     l1106:
  1307  0131  082A               	movf	___awdiv@quotient+1,w
  1308  0132  00A3               	movwf	?___awdiv+1
  1309  0133  0829               	movf	___awdiv@quotient,w
  1310  0134  00A2               	movwf	?___awdiv
  1311  0135                     l369:
  1312  0135  0008               	return
  1313  0136                     __end_of___awdiv:
  1314                           
  1315                           	psect	text6
  1316  01CF                     __ptext6:	
  1317 ;; *************** function _USART_Tx *****************
  1318 ;; Defined at:
  1319 ;;		line 27 in file "USART.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;  data            1    wreg     unsigned char 
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;  data            1    3[COMMON] unsigned char 
  1324 ;; Return value:  Size  Location     Type
  1325 ;;                  1    wreg      void 
  1326 ;; Registers used:
  1327 ;;		wreg
  1328 ;; Tracked objects:
  1329 ;;		On entry : 0/0
  1330 ;;		On exit  : 0/0
  1331 ;;		Unchanged: 0/0
  1332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1333 ;;      Params:         0       0       0       0       0
  1334 ;;      Locals:         1       0       0       0       0
  1335 ;;      Temps:          0       0       0       0       0
  1336 ;;      Totals:         1       0       0       0       0
  1337 ;;Total ram usage:        1 bytes
  1338 ;; Hardware stack levels used:    1
  1339 ;; Hardware stack levels required when called:    1
  1340 ;; This function calls:
  1341 ;;		Nothing
  1342 ;; This function is called by:
  1343 ;;		_main
  1344 ;;		_USART_string
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           
  1349                           ;psect for function _USART_Tx
  1350  01CF                     _USART_Tx:
  1351                           
  1352                           ;incstack = 0
  1353                           ; Regs used in _USART_Tx: [wreg]
  1354                           ;USART_Tx@data stored from wreg
  1355  01CF  00F3               	movwf	USART_Tx@data
  1356  01D0                     l942:
  1357  01D0                     l118:	
  1358                           ;USART.c: 28:     while(TXSTAbits.TRMT == 0);
  1359                           
  1360  01D0  1683               	bsf	3,5	;RP0=1, select bank1
  1361  01D1  1303               	bcf	3,6	;RP1=0, select bank1
  1362  01D2  1C98               	btfss	24,1	;volatile
  1363  01D3  29D5               	goto	u241
  1364  01D4  29D6               	goto	u240
  1365  01D5                     u241:
  1366  01D5  29D0               	goto	l118
  1367  01D6                     u240:
  1368  01D6                     l944:
  1369                           
  1370                           ;USART.c: 29:     TXREG = data;
  1371  01D6  0873               	movf	USART_Tx@data,w
  1372  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  1373  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  1374  01D9  0099               	movwf	25	;volatile
  1375  01DA                     l121:
  1376  01DA  0008               	return
  1377  01DB                     __end_of_USART_Tx:
  1378                           
  1379                           	psect	text7
  1380  01DB                     __ptext7:	
  1381 ;; *************** function _USART_Rx *****************
  1382 ;; Defined at:
  1383 ;;		line 32 in file "USART.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;		None
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;		None
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  1    wreg      unsigned char 
  1390 ;; Registers used:
  1391 ;;		wreg
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1397 ;;      Params:         0       0       0       0       0
  1398 ;;      Locals:         0       0       0       0       0
  1399 ;;      Temps:          0       0       0       0       0
  1400 ;;      Totals:         0       0       0       0       0
  1401 ;;Total ram usage:        0 bytes
  1402 ;; Hardware stack levels used:    1
  1403 ;; Hardware stack levels required when called:    1
  1404 ;; This function calls:
  1405 ;;		Nothing
  1406 ;; This function is called by:
  1407 ;;		_main
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           
  1411                           
  1412                           ;psect for function _USART_Rx
  1413  01DB                     _USART_Rx:
  1414  01DB                     l938:	
  1415                           ;incstack = 0
  1416                           ; Regs used in _USART_Rx: [wreg]
  1417                           
  1418                           
  1419                           ;USART.c: 33:     return RCREG;
  1420  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  1421  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  1422  01DD  081A               	movf	26,w	;volatile
  1423  01DE                     l124:
  1424  01DE  0008               	return
  1425  01DF                     __end_of_USART_Rx:
  1426                           
  1427                           	psect	text8
  1428  0188                     __ptext8:	
  1429 ;; *************** function _isr *****************
  1430 ;; Defined at:
  1431 ;;		line 36 in file "Pic y adafruit.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;		None
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;		None
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      void 
  1438 ;; Registers used:
  1439 ;;		wreg, status,2, status,0
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1445 ;;      Params:         0       0       0       0       0
  1446 ;;      Locals:         0       0       0       0       0
  1447 ;;      Temps:          3       0       0       0       0
  1448 ;;      Totals:         3       0       0       0       0
  1449 ;;Total ram usage:        3 bytes
  1450 ;; Hardware stack levels used:    1
  1451 ;; This function calls:
  1452 ;;		Nothing
  1453 ;; This function is called by:
  1454 ;;		Interrupt level 1
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           
  1459                           ;psect for function _isr
  1460  0188                     _isr:
  1461  0188                     i1l848:
  1462                           
  1463                           ;Pic y adafruit.c: 37:         if(RBIF == 1){
  1464  0188  1C0B               	btfss	11,0	;volatile
  1465  0189  298B               	goto	u18_21
  1466  018A  298C               	goto	u18_20
  1467  018B                     u18_21:
  1468  018B  299D               	goto	i1l856
  1469  018C                     u18_20:
  1470  018C                     i1l850:
  1471                           
  1472                           ;Pic y adafruit.c: 39:             if(RB0 == 0){
  1473  018C  1283               	bcf	3,5	;RP0=0, select bank0
  1474  018D  1303               	bcf	3,6	;RP1=0, select bank0
  1475  018E  1806               	btfsc	6,0	;volatile
  1476  018F  2991               	goto	u19_21
  1477  0190  2992               	goto	u19_20
  1478  0191                     u19_21:
  1479  0191  2997               	goto	i1l82
  1480  0192                     u19_20:
  1481  0192                     i1l852:
  1482                           
  1483                           ;Pic y adafruit.c: 40:                 cont++;
  1484  0192  3001               	movlw	1
  1485  0193  00F0               	movwf	??_isr
  1486  0194  0870               	movf	??_isr,w
  1487  0195  07FA               	addwf	_cont,f
  1488                           
  1489                           ;Pic y adafruit.c: 41:             }else if(RB1 == 0){
  1490  0196  299D               	goto	i1l856
  1491  0197                     i1l82:
  1492  0197  1886               	btfsc	6,1	;volatile
  1493  0198  299A               	goto	u20_21
  1494  0199  299B               	goto	u20_20
  1495  019A                     u20_21:
  1496  019A  299D               	goto	i1l856
  1497  019B                     u20_20:
  1498  019B                     i1l854:
  1499                           
  1500                           ;Pic y adafruit.c: 42:                 cont--;
  1501  019B  3001               	movlw	1
  1502  019C  02FA               	subwf	_cont,f
  1503  019D                     i1l856:
  1504                           
  1505                           ;Pic y adafruit.c: 45:         RBIF = 0;
  1506  019D  100B               	bcf	11,0	;volatile
  1507  019E                     i1l85:
  1508  019E  0872               	movf	??_isr+2,w
  1509  019F  008A               	movwf	10
  1510  01A0  0E71               	swapf	??_isr+1,w
  1511  01A1  0083               	movwf	3
  1512  01A2  0EFE               	swapf	btemp,f
  1513  01A3  0E7E               	swapf	btemp,w
  1514  01A4  0009               	retfie
  1515  01A5                     __end_of_isr:
  1516  007E                     btemp	set	126	;btemp
  1517  007E                     wtemp0	set	126
  1518                           
  1519                           	psect	intentry
  1520  0004                     __pintentry:	
  1521                           ;incstack = 0
  1522                           ; Regs used in _isr: [wreg+status,2+status,0]
  1523                           
  1524  0004                     interrupt_function:
  1525  007E                     saved_w	set	btemp
  1526  0004  00FE               	movwf	btemp
  1527  0005  0E03               	swapf	3,w
  1528  0006  00F1               	movwf	??_isr+1
  1529  0007  080A               	movf	10,w
  1530  0008  00F2               	movwf	??_isr+2
  1531  0009  120A  118A  2988   	ljmp	_isr
  1532                           
  1533                           	psect	config
  1534                           
  1535                           ;Config register CONFIG1 @ 0x2007
  1536                           ;	Oscillator Selection bits
  1537                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1538                           ;	Watchdog Timer Enable bit
  1539                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1540                           ;	Power-up Timer Enable bit
  1541                           ;	PWRTE = OFF, PWRT disabled
  1542                           ;	RE3/MCLR pin function select bit
  1543                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1544                           ;	Code Protection bit
  1545                           ;	CP = OFF, Program memory code protection is disabled
  1546                           ;	Data Code Protection bit
  1547                           ;	CPD = OFF, Data memory code protection is disabled
  1548                           ;	Brown Out Reset Selection bits
  1549                           ;	BOREN = OFF, BOR disabled
  1550                           ;	Internal External Switchover bit
  1551                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1552                           ;	Fail-Safe Clock Monitor Enabled bit
  1553                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1554                           ;	Low Voltage Programming Enable bit
  1555                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1556                           ;	In-Circuit Debugger Mode bit
  1557                           ;	DEBUG = 0x1, unprogrammed default
  1558  2007                     	org	8199
  1559  2007  20D4               	dw	8404
  1560                           
  1561                           ;Config register CONFIG2 @ 0x2008
  1562                           ;	Brown-out Reset Selection bit
  1563                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1564                           ;	Flash Program Memory Self Write Enable bits
  1565                           ;	WRT = OFF, Write protection off
  1566  2008                     	org	8200
  1567  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         15
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80     15      29
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___bmul
    _main->___wmul
    ___awdiv->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1387
                                             11 BANK0      4     4      0
                           _USART_Rx
                           _USART_Tx
                            ___awdiv
                             ___bmul
                             ___wmul
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                          _USART_Int
 ---------------------------------------------------------------------------------
 (2) _USART_Int                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     316
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     244
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     805
                                              2 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _USART_Tx                                             1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Rx                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USART_Rx
   _USART_Tx
   ___awdiv
     ___wmul (ARG)
   ___bmul
   ___wmul
   _setup
     _USART_Int

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      28       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      F      1D       5       36.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      28      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Aug 18 12:05:47 2021

         ___bmul@product 0075                       l90 0029                       l98 0187  
           ___awdiv@sign 0028      ___wmul@multiplicand 0075                      l121 01DA  
                    l115 01B9                      l124 01DE                      l118 01D0  
                    l216 0146                      l242 01CE                      l218 0160  
                    l369 0135                      l900 01B4                      l902 01B5  
                    l910 016A                      l904 01B6                      l920 017A  
                    l912 0173                      l930 017F                      l922 017B  
                    l914 0177                      l906 0161                      l932 0180  
                    l924 017C                      l916 0178                      l908 0168  
                    l942 01D0                      l934 0185                      l926 017D  
                    l918 0179                      l944 01D6                      l960 01BB  
                    l936 0186                      l928 017E                      l938 01DB  
                    l970 01CD                      l962 01BC                      l964 01C0  
                    l892 01A5                      l966 01C4                      l894 01AC  
                    l968 01C6                      l896 01B0                      l898 01B1  
                    _RB0 0030                      _RB1 0031                      u300 01CD  
                    u301 01CC                      u240 01D6                      u241 01D5  
                    u500 00F0                      u501 00EF                      u520 0102  
                    u440 013E                      u521 0101                      u441 013D  
                    u290 01C0                      u515 00F4                      u291 01BF  
                    u540 0113                      u541 0112                      u470 015A  
                    u535 0103                      u471 0159                      u455 0147  
                    u560 0127                      u480 00D4                      u561 0126  
                    u545 010F                      u481 00D3                      u465 014E  
                    u570 012C                      u490 00DF                      u571 012B  
                    u555 011B                      u491 00DE                      u580 0097  
                    u581 0096                      u590 00AB                      u591 00AA  
                    _isr 0188                     l1100 0121                     l1102 0127  
                   l1110 0024                     l1104 012C                     l1120 0097  
                   l1112 0087                     l1106 0131                     l1130 00C2  
                   l1122 00A1                     l1114 008B                     l1060 0154  
                   l1052 0136                     l1124 00A5                     l1132 00C5  
                   l1116 008F                     l1070 00D4                     l1062 015A  
                   l1054 013A                     l1134 00C7                     l1126 00AB  
                   l1118 0093                     l1080 00E8                     l1072 00D9  
                   l1056 013E                     l1128 00C1                     l1090 00FE  
                   l1082 00EA                     l1074 00DB                     l1066 00CD  
                   l1058 014D                     l1092 0102                     l1084 00F0  
                   l1076 00DF                     l1068 00D0                     l1094 0113  
                   l1086 00F3                     l1078 00E4                     l1096 0119  
                   l1088 00FA                     l1098 011A                     ?_isr 0070  
                   _RBIF 0058                     i1l82 0197                     i1l85 019E  
                   _cont 007A                     _main 0024                     btemp 007E  
                   start 000C        ___bmul@multiplier 0076                    ??_isr 0070  
                  ?_main 0070          __end_of___awdiv 0136                    _ANSEL 0188  
        ___awdiv@divisor 0022                    i1l850 018C                    i1l852 0192  
                  i1l854 019B                    i1l856 019D                    i1l848 0188  
        ___awdiv@counter 0027                    _RCREG 001A                    u20_20 019B  
                  u20_21 019A                    u18_20 018C                    u18_21 018B  
                  _SPBRG 0099                    u19_20 0192                    u19_21 0191  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TXREG 0019  
                  _cont1 0079                    _listo 0078                    _setup 0161  
       __end_of_USART_Rx 01DF         __end_of_USART_Tx 01DB                    _total 0077  
           USART_Tx@data 0073                    pclath 000A       __size_of_USART_Int 0015  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00CD                   ??_main 002B         ___awdiv@dividend 0024  
                 ?_setup 0070                   _ANSELH 0189                   _SPBRGH 009A  
                 ___bmul 01BA                   ___wmul 0136                ??___awdiv 0026  
                 _decena 003B         ___awdiv@quotient 0029                   _unidad 003A  
      __end_of_USART_Int 01BA                   saved_w 007E  __end_of__initialization 0020  
    ___bmul@multiplicand 0073           __pcstackCOMMON 0070            __end_of_setup 0188  
              ?_USART_Rx 0070                ?_USART_Tx 0070           _OPTION_REGbits 0081  
                ??_setup 0073               __pbssBANK0 002F               __pmaintext 0024  
                ?___bmul 0073                  ?___wmul 0073               __pintentry 0004  
             ??_USART_Rx 0073               ??_USART_Tx 0073          __size_of___bmul 0015  
                ___awdiv 00CD          __size_of___wmul 002B                  _decena2 0036  
                _centena 003C                  __ptext1 0161                  __ptext2 01A5  
                __ptext3 0136                  __ptext4 01BA                  __ptext5 00CD  
                __ptext6 01CF                  __ptext7 01DB                  __ptext8 0188  
                _entrada 002F                  _oldCont 0039             __size_of_isr 001D  
                _unidad2 0035                  _voltaje 0033     end_of_initialization 0020  
              _RCSTAbits 0018                _USART_Int 01A5                _TXSTAbits 0098  
         __end_of___bmul 01CF           __end_of___wmul 0161              _BAUDCTLbits 0187  
      __size_of_USART_Rx 0004        __size_of_USART_Tx 000C      start_initialization 000F  
             ?_USART_Int 0070              __end_of_isr 01A5                 ??___bmul 0074  
               ??___wmul 0077              __pbssCOMMON 0077                ___latbits 0002  
          __pcstackBANK0 0020                __pnvBANK0 003A                 ?___awdiv 0022  
            ??_USART_Int 0073           __size_of_setup 0027        interrupt_function 0004  
         ___wmul@product 0020                 _IOCBbits 0096                 _PIR1bits 000C  
               _USART_Rx 01DB                 _USART_Tx 01CF        ___wmul@multiplier 0073  
               _WPUBbits 0095         __size_of___awdiv 0069                 _centena2 0037  
               _oldCont1 0038            __size_of_main 00A9                 _voltaje2 0031  
             _INTCONbits 000B                 intlevel1 0000               _OSCCONbits 008F  
